var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__7545 = x == null ? null : x;
  if(p[goog.typeOf(x__7545)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7546__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7546 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7546__delegate.call(this, array, i, idxs)
    };
    G__7546.cljs$lang$maxFixedArity = 2;
    G__7546.cljs$lang$applyTo = function(arglist__7547) {
      var array = cljs.core.first(arglist__7547);
      var i = cljs.core.first(cljs.core.next(arglist__7547));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7547));
      return G__7546__delegate(array, i, idxs)
    };
    G__7546.cljs$lang$arity$variadic = G__7546__delegate;
    return G__7546
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____7632 = this$;
      if(and__3822__auto____7632) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____7632
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____7633 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7634 = cljs.core._invoke[goog.typeOf(x__2363__auto____7633)];
        if(or__3824__auto____7634) {
          return or__3824__auto____7634
        }else {
          var or__3824__auto____7635 = cljs.core._invoke["_"];
          if(or__3824__auto____7635) {
            return or__3824__auto____7635
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____7636 = this$;
      if(and__3822__auto____7636) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____7636
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____7637 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7638 = cljs.core._invoke[goog.typeOf(x__2363__auto____7637)];
        if(or__3824__auto____7638) {
          return or__3824__auto____7638
        }else {
          var or__3824__auto____7639 = cljs.core._invoke["_"];
          if(or__3824__auto____7639) {
            return or__3824__auto____7639
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____7640 = this$;
      if(and__3822__auto____7640) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____7640
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____7641 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7642 = cljs.core._invoke[goog.typeOf(x__2363__auto____7641)];
        if(or__3824__auto____7642) {
          return or__3824__auto____7642
        }else {
          var or__3824__auto____7643 = cljs.core._invoke["_"];
          if(or__3824__auto____7643) {
            return or__3824__auto____7643
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____7644 = this$;
      if(and__3822__auto____7644) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____7644
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____7645 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7646 = cljs.core._invoke[goog.typeOf(x__2363__auto____7645)];
        if(or__3824__auto____7646) {
          return or__3824__auto____7646
        }else {
          var or__3824__auto____7647 = cljs.core._invoke["_"];
          if(or__3824__auto____7647) {
            return or__3824__auto____7647
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____7648 = this$;
      if(and__3822__auto____7648) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____7648
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____7649 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7650 = cljs.core._invoke[goog.typeOf(x__2363__auto____7649)];
        if(or__3824__auto____7650) {
          return or__3824__auto____7650
        }else {
          var or__3824__auto____7651 = cljs.core._invoke["_"];
          if(or__3824__auto____7651) {
            return or__3824__auto____7651
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____7652 = this$;
      if(and__3822__auto____7652) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____7652
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____7653 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7654 = cljs.core._invoke[goog.typeOf(x__2363__auto____7653)];
        if(or__3824__auto____7654) {
          return or__3824__auto____7654
        }else {
          var or__3824__auto____7655 = cljs.core._invoke["_"];
          if(or__3824__auto____7655) {
            return or__3824__auto____7655
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____7656 = this$;
      if(and__3822__auto____7656) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____7656
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____7657 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7658 = cljs.core._invoke[goog.typeOf(x__2363__auto____7657)];
        if(or__3824__auto____7658) {
          return or__3824__auto____7658
        }else {
          var or__3824__auto____7659 = cljs.core._invoke["_"];
          if(or__3824__auto____7659) {
            return or__3824__auto____7659
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____7660 = this$;
      if(and__3822__auto____7660) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____7660
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____7661 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7662 = cljs.core._invoke[goog.typeOf(x__2363__auto____7661)];
        if(or__3824__auto____7662) {
          return or__3824__auto____7662
        }else {
          var or__3824__auto____7663 = cljs.core._invoke["_"];
          if(or__3824__auto____7663) {
            return or__3824__auto____7663
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7664 = this$;
      if(and__3822__auto____7664) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7664
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____7665 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7666 = cljs.core._invoke[goog.typeOf(x__2363__auto____7665)];
        if(or__3824__auto____7666) {
          return or__3824__auto____7666
        }else {
          var or__3824__auto____7667 = cljs.core._invoke["_"];
          if(or__3824__auto____7667) {
            return or__3824__auto____7667
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7668 = this$;
      if(and__3822__auto____7668) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7668
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____7669 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7670 = cljs.core._invoke[goog.typeOf(x__2363__auto____7669)];
        if(or__3824__auto____7670) {
          return or__3824__auto____7670
        }else {
          var or__3824__auto____7671 = cljs.core._invoke["_"];
          if(or__3824__auto____7671) {
            return or__3824__auto____7671
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7672 = this$;
      if(and__3822__auto____7672) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7672
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____7673 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7674 = cljs.core._invoke[goog.typeOf(x__2363__auto____7673)];
        if(or__3824__auto____7674) {
          return or__3824__auto____7674
        }else {
          var or__3824__auto____7675 = cljs.core._invoke["_"];
          if(or__3824__auto____7675) {
            return or__3824__auto____7675
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7676 = this$;
      if(and__3822__auto____7676) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7676
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____7677 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7678 = cljs.core._invoke[goog.typeOf(x__2363__auto____7677)];
        if(or__3824__auto____7678) {
          return or__3824__auto____7678
        }else {
          var or__3824__auto____7679 = cljs.core._invoke["_"];
          if(or__3824__auto____7679) {
            return or__3824__auto____7679
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7680 = this$;
      if(and__3822__auto____7680) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7680
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____7681 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7682 = cljs.core._invoke[goog.typeOf(x__2363__auto____7681)];
        if(or__3824__auto____7682) {
          return or__3824__auto____7682
        }else {
          var or__3824__auto____7683 = cljs.core._invoke["_"];
          if(or__3824__auto____7683) {
            return or__3824__auto____7683
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7684 = this$;
      if(and__3822__auto____7684) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7684
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____7685 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7686 = cljs.core._invoke[goog.typeOf(x__2363__auto____7685)];
        if(or__3824__auto____7686) {
          return or__3824__auto____7686
        }else {
          var or__3824__auto____7687 = cljs.core._invoke["_"];
          if(or__3824__auto____7687) {
            return or__3824__auto____7687
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7688 = this$;
      if(and__3822__auto____7688) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7688
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____7689 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7690 = cljs.core._invoke[goog.typeOf(x__2363__auto____7689)];
        if(or__3824__auto____7690) {
          return or__3824__auto____7690
        }else {
          var or__3824__auto____7691 = cljs.core._invoke["_"];
          if(or__3824__auto____7691) {
            return or__3824__auto____7691
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7692 = this$;
      if(and__3822__auto____7692) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7692
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____7693 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7694 = cljs.core._invoke[goog.typeOf(x__2363__auto____7693)];
        if(or__3824__auto____7694) {
          return or__3824__auto____7694
        }else {
          var or__3824__auto____7695 = cljs.core._invoke["_"];
          if(or__3824__auto____7695) {
            return or__3824__auto____7695
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7696 = this$;
      if(and__3822__auto____7696) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7696
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____7697 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7698 = cljs.core._invoke[goog.typeOf(x__2363__auto____7697)];
        if(or__3824__auto____7698) {
          return or__3824__auto____7698
        }else {
          var or__3824__auto____7699 = cljs.core._invoke["_"];
          if(or__3824__auto____7699) {
            return or__3824__auto____7699
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7700 = this$;
      if(and__3822__auto____7700) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7700
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____7701 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7702 = cljs.core._invoke[goog.typeOf(x__2363__auto____7701)];
        if(or__3824__auto____7702) {
          return or__3824__auto____7702
        }else {
          var or__3824__auto____7703 = cljs.core._invoke["_"];
          if(or__3824__auto____7703) {
            return or__3824__auto____7703
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7704 = this$;
      if(and__3822__auto____7704) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7704
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____7705 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7706 = cljs.core._invoke[goog.typeOf(x__2363__auto____7705)];
        if(or__3824__auto____7706) {
          return or__3824__auto____7706
        }else {
          var or__3824__auto____7707 = cljs.core._invoke["_"];
          if(or__3824__auto____7707) {
            return or__3824__auto____7707
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7708 = this$;
      if(and__3822__auto____7708) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7708
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____7709 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7710 = cljs.core._invoke[goog.typeOf(x__2363__auto____7709)];
        if(or__3824__auto____7710) {
          return or__3824__auto____7710
        }else {
          var or__3824__auto____7711 = cljs.core._invoke["_"];
          if(or__3824__auto____7711) {
            return or__3824__auto____7711
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7712 = this$;
      if(and__3822__auto____7712) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7712
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____7713 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7714 = cljs.core._invoke[goog.typeOf(x__2363__auto____7713)];
        if(or__3824__auto____7714) {
          return or__3824__auto____7714
        }else {
          var or__3824__auto____7715 = cljs.core._invoke["_"];
          if(or__3824__auto____7715) {
            return or__3824__auto____7715
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7720 = coll;
    if(and__3822__auto____7720) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7720
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____7721 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7722 = cljs.core._count[goog.typeOf(x__2363__auto____7721)];
      if(or__3824__auto____7722) {
        return or__3824__auto____7722
      }else {
        var or__3824__auto____7723 = cljs.core._count["_"];
        if(or__3824__auto____7723) {
          return or__3824__auto____7723
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7728 = coll;
    if(and__3822__auto____7728) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7728
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____7729 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7730 = cljs.core._empty[goog.typeOf(x__2363__auto____7729)];
      if(or__3824__auto____7730) {
        return or__3824__auto____7730
      }else {
        var or__3824__auto____7731 = cljs.core._empty["_"];
        if(or__3824__auto____7731) {
          return or__3824__auto____7731
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7736 = coll;
    if(and__3822__auto____7736) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7736
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____7737 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7738 = cljs.core._conj[goog.typeOf(x__2363__auto____7737)];
      if(or__3824__auto____7738) {
        return or__3824__auto____7738
      }else {
        var or__3824__auto____7739 = cljs.core._conj["_"];
        if(or__3824__auto____7739) {
          return or__3824__auto____7739
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7748 = coll;
      if(and__3822__auto____7748) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7748
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____7749 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7750 = cljs.core._nth[goog.typeOf(x__2363__auto____7749)];
        if(or__3824__auto____7750) {
          return or__3824__auto____7750
        }else {
          var or__3824__auto____7751 = cljs.core._nth["_"];
          if(or__3824__auto____7751) {
            return or__3824__auto____7751
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7752 = coll;
      if(and__3822__auto____7752) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7752
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____7753 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7754 = cljs.core._nth[goog.typeOf(x__2363__auto____7753)];
        if(or__3824__auto____7754) {
          return or__3824__auto____7754
        }else {
          var or__3824__auto____7755 = cljs.core._nth["_"];
          if(or__3824__auto____7755) {
            return or__3824__auto____7755
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7760 = coll;
    if(and__3822__auto____7760) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7760
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____7761 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7762 = cljs.core._first[goog.typeOf(x__2363__auto____7761)];
      if(or__3824__auto____7762) {
        return or__3824__auto____7762
      }else {
        var or__3824__auto____7763 = cljs.core._first["_"];
        if(or__3824__auto____7763) {
          return or__3824__auto____7763
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7768 = coll;
    if(and__3822__auto____7768) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7768
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____7769 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7770 = cljs.core._rest[goog.typeOf(x__2363__auto____7769)];
      if(or__3824__auto____7770) {
        return or__3824__auto____7770
      }else {
        var or__3824__auto____7771 = cljs.core._rest["_"];
        if(or__3824__auto____7771) {
          return or__3824__auto____7771
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7776 = coll;
    if(and__3822__auto____7776) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7776
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____7777 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7778 = cljs.core._next[goog.typeOf(x__2363__auto____7777)];
      if(or__3824__auto____7778) {
        return or__3824__auto____7778
      }else {
        var or__3824__auto____7779 = cljs.core._next["_"];
        if(or__3824__auto____7779) {
          return or__3824__auto____7779
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7788 = o;
      if(and__3822__auto____7788) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7788
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____7789 = o == null ? null : o;
      return function() {
        var or__3824__auto____7790 = cljs.core._lookup[goog.typeOf(x__2363__auto____7789)];
        if(or__3824__auto____7790) {
          return or__3824__auto____7790
        }else {
          var or__3824__auto____7791 = cljs.core._lookup["_"];
          if(or__3824__auto____7791) {
            return or__3824__auto____7791
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7792 = o;
      if(and__3822__auto____7792) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7792
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____7793 = o == null ? null : o;
      return function() {
        var or__3824__auto____7794 = cljs.core._lookup[goog.typeOf(x__2363__auto____7793)];
        if(or__3824__auto____7794) {
          return or__3824__auto____7794
        }else {
          var or__3824__auto____7795 = cljs.core._lookup["_"];
          if(or__3824__auto____7795) {
            return or__3824__auto____7795
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7800 = coll;
    if(and__3822__auto____7800) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7800
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____7801 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7802 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____7801)];
      if(or__3824__auto____7802) {
        return or__3824__auto____7802
      }else {
        var or__3824__auto____7803 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7803) {
          return or__3824__auto____7803
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7808 = coll;
    if(and__3822__auto____7808) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7808
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____7809 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7810 = cljs.core._assoc[goog.typeOf(x__2363__auto____7809)];
      if(or__3824__auto____7810) {
        return or__3824__auto____7810
      }else {
        var or__3824__auto____7811 = cljs.core._assoc["_"];
        if(or__3824__auto____7811) {
          return or__3824__auto____7811
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7816 = coll;
    if(and__3822__auto____7816) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7816
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____7817 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7818 = cljs.core._dissoc[goog.typeOf(x__2363__auto____7817)];
      if(or__3824__auto____7818) {
        return or__3824__auto____7818
      }else {
        var or__3824__auto____7819 = cljs.core._dissoc["_"];
        if(or__3824__auto____7819) {
          return or__3824__auto____7819
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7824 = coll;
    if(and__3822__auto____7824) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7824
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____7825 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7826 = cljs.core._key[goog.typeOf(x__2363__auto____7825)];
      if(or__3824__auto____7826) {
        return or__3824__auto____7826
      }else {
        var or__3824__auto____7827 = cljs.core._key["_"];
        if(or__3824__auto____7827) {
          return or__3824__auto____7827
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7832 = coll;
    if(and__3822__auto____7832) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7832
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____7833 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7834 = cljs.core._val[goog.typeOf(x__2363__auto____7833)];
      if(or__3824__auto____7834) {
        return or__3824__auto____7834
      }else {
        var or__3824__auto____7835 = cljs.core._val["_"];
        if(or__3824__auto____7835) {
          return or__3824__auto____7835
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7840 = coll;
    if(and__3822__auto____7840) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7840
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____7841 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7842 = cljs.core._disjoin[goog.typeOf(x__2363__auto____7841)];
      if(or__3824__auto____7842) {
        return or__3824__auto____7842
      }else {
        var or__3824__auto____7843 = cljs.core._disjoin["_"];
        if(or__3824__auto____7843) {
          return or__3824__auto____7843
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7848 = coll;
    if(and__3822__auto____7848) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7848
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____7849 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7850 = cljs.core._peek[goog.typeOf(x__2363__auto____7849)];
      if(or__3824__auto____7850) {
        return or__3824__auto____7850
      }else {
        var or__3824__auto____7851 = cljs.core._peek["_"];
        if(or__3824__auto____7851) {
          return or__3824__auto____7851
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7856 = coll;
    if(and__3822__auto____7856) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7856
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____7857 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7858 = cljs.core._pop[goog.typeOf(x__2363__auto____7857)];
      if(or__3824__auto____7858) {
        return or__3824__auto____7858
      }else {
        var or__3824__auto____7859 = cljs.core._pop["_"];
        if(or__3824__auto____7859) {
          return or__3824__auto____7859
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7864 = coll;
    if(and__3822__auto____7864) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7864
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____7865 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7866 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____7865)];
      if(or__3824__auto____7866) {
        return or__3824__auto____7866
      }else {
        var or__3824__auto____7867 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7867) {
          return or__3824__auto____7867
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7872 = o;
    if(and__3822__auto____7872) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7872
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____7873 = o == null ? null : o;
    return function() {
      var or__3824__auto____7874 = cljs.core._deref[goog.typeOf(x__2363__auto____7873)];
      if(or__3824__auto____7874) {
        return or__3824__auto____7874
      }else {
        var or__3824__auto____7875 = cljs.core._deref["_"];
        if(or__3824__auto____7875) {
          return or__3824__auto____7875
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7880 = o;
    if(and__3822__auto____7880) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7880
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____7881 = o == null ? null : o;
    return function() {
      var or__3824__auto____7882 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____7881)];
      if(or__3824__auto____7882) {
        return or__3824__auto____7882
      }else {
        var or__3824__auto____7883 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7883) {
          return or__3824__auto____7883
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7888 = o;
    if(and__3822__auto____7888) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7888
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____7889 = o == null ? null : o;
    return function() {
      var or__3824__auto____7890 = cljs.core._meta[goog.typeOf(x__2363__auto____7889)];
      if(or__3824__auto____7890) {
        return or__3824__auto____7890
      }else {
        var or__3824__auto____7891 = cljs.core._meta["_"];
        if(or__3824__auto____7891) {
          return or__3824__auto____7891
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7896 = o;
    if(and__3822__auto____7896) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7896
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____7897 = o == null ? null : o;
    return function() {
      var or__3824__auto____7898 = cljs.core._with_meta[goog.typeOf(x__2363__auto____7897)];
      if(or__3824__auto____7898) {
        return or__3824__auto____7898
      }else {
        var or__3824__auto____7899 = cljs.core._with_meta["_"];
        if(or__3824__auto____7899) {
          return or__3824__auto____7899
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7908 = coll;
      if(and__3822__auto____7908) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7908
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____7909 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7910 = cljs.core._reduce[goog.typeOf(x__2363__auto____7909)];
        if(or__3824__auto____7910) {
          return or__3824__auto____7910
        }else {
          var or__3824__auto____7911 = cljs.core._reduce["_"];
          if(or__3824__auto____7911) {
            return or__3824__auto____7911
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7912 = coll;
      if(and__3822__auto____7912) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7912
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____7913 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7914 = cljs.core._reduce[goog.typeOf(x__2363__auto____7913)];
        if(or__3824__auto____7914) {
          return or__3824__auto____7914
        }else {
          var or__3824__auto____7915 = cljs.core._reduce["_"];
          if(or__3824__auto____7915) {
            return or__3824__auto____7915
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7920 = coll;
    if(and__3822__auto____7920) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7920
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____7921 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7922 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____7921)];
      if(or__3824__auto____7922) {
        return or__3824__auto____7922
      }else {
        var or__3824__auto____7923 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7923) {
          return or__3824__auto____7923
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7928 = o;
    if(and__3822__auto____7928) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7928
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____7929 = o == null ? null : o;
    return function() {
      var or__3824__auto____7930 = cljs.core._equiv[goog.typeOf(x__2363__auto____7929)];
      if(or__3824__auto____7930) {
        return or__3824__auto____7930
      }else {
        var or__3824__auto____7931 = cljs.core._equiv["_"];
        if(or__3824__auto____7931) {
          return or__3824__auto____7931
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____7936 = o;
    if(and__3822__auto____7936) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____7936
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____7937 = o == null ? null : o;
    return function() {
      var or__3824__auto____7938 = cljs.core._hash[goog.typeOf(x__2363__auto____7937)];
      if(or__3824__auto____7938) {
        return or__3824__auto____7938
      }else {
        var or__3824__auto____7939 = cljs.core._hash["_"];
        if(or__3824__auto____7939) {
          return or__3824__auto____7939
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____7944 = o;
    if(and__3822__auto____7944) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____7944
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____7945 = o == null ? null : o;
    return function() {
      var or__3824__auto____7946 = cljs.core._seq[goog.typeOf(x__2363__auto____7945)];
      if(or__3824__auto____7946) {
        return or__3824__auto____7946
      }else {
        var or__3824__auto____7947 = cljs.core._seq["_"];
        if(or__3824__auto____7947) {
          return or__3824__auto____7947
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____7952 = coll;
    if(and__3822__auto____7952) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____7952
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____7953 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7954 = cljs.core._rseq[goog.typeOf(x__2363__auto____7953)];
      if(or__3824__auto____7954) {
        return or__3824__auto____7954
      }else {
        var or__3824__auto____7955 = cljs.core._rseq["_"];
        if(or__3824__auto____7955) {
          return or__3824__auto____7955
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7960 = coll;
    if(and__3822__auto____7960) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____7960
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____7961 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7962 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____7961)];
      if(or__3824__auto____7962) {
        return or__3824__auto____7962
      }else {
        var or__3824__auto____7963 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____7963) {
          return or__3824__auto____7963
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7968 = coll;
    if(and__3822__auto____7968) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____7968
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____7969 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7970 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____7969)];
      if(or__3824__auto____7970) {
        return or__3824__auto____7970
      }else {
        var or__3824__auto____7971 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____7971) {
          return or__3824__auto____7971
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____7976 = coll;
    if(and__3822__auto____7976) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____7976
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____7977 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7978 = cljs.core._entry_key[goog.typeOf(x__2363__auto____7977)];
      if(or__3824__auto____7978) {
        return or__3824__auto____7978
      }else {
        var or__3824__auto____7979 = cljs.core._entry_key["_"];
        if(or__3824__auto____7979) {
          return or__3824__auto____7979
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____7984 = coll;
    if(and__3822__auto____7984) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____7984
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____7985 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7986 = cljs.core._comparator[goog.typeOf(x__2363__auto____7985)];
      if(or__3824__auto____7986) {
        return or__3824__auto____7986
      }else {
        var or__3824__auto____7987 = cljs.core._comparator["_"];
        if(or__3824__auto____7987) {
          return or__3824__auto____7987
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____7992 = o;
    if(and__3822__auto____7992) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____7992
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____7993 = o == null ? null : o;
    return function() {
      var or__3824__auto____7994 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____7993)];
      if(or__3824__auto____7994) {
        return or__3824__auto____7994
      }else {
        var or__3824__auto____7995 = cljs.core._pr_seq["_"];
        if(or__3824__auto____7995) {
          return or__3824__auto____7995
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____8000 = d;
    if(and__3822__auto____8000) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____8000
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____8001 = d == null ? null : d;
    return function() {
      var or__3824__auto____8002 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____8001)];
      if(or__3824__auto____8002) {
        return or__3824__auto____8002
      }else {
        var or__3824__auto____8003 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____8003) {
          return or__3824__auto____8003
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____8008 = this$;
    if(and__3822__auto____8008) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____8008
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____8009 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8010 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____8009)];
      if(or__3824__auto____8010) {
        return or__3824__auto____8010
      }else {
        var or__3824__auto____8011 = cljs.core._notify_watches["_"];
        if(or__3824__auto____8011) {
          return or__3824__auto____8011
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____8016 = this$;
    if(and__3822__auto____8016) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____8016
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____8017 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8018 = cljs.core._add_watch[goog.typeOf(x__2363__auto____8017)];
      if(or__3824__auto____8018) {
        return or__3824__auto____8018
      }else {
        var or__3824__auto____8019 = cljs.core._add_watch["_"];
        if(or__3824__auto____8019) {
          return or__3824__auto____8019
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____8024 = this$;
    if(and__3822__auto____8024) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____8024
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____8025 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8026 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____8025)];
      if(or__3824__auto____8026) {
        return or__3824__auto____8026
      }else {
        var or__3824__auto____8027 = cljs.core._remove_watch["_"];
        if(or__3824__auto____8027) {
          return or__3824__auto____8027
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____8032 = coll;
    if(and__3822__auto____8032) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____8032
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____8033 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8034 = cljs.core._as_transient[goog.typeOf(x__2363__auto____8033)];
      if(or__3824__auto____8034) {
        return or__3824__auto____8034
      }else {
        var or__3824__auto____8035 = cljs.core._as_transient["_"];
        if(or__3824__auto____8035) {
          return or__3824__auto____8035
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____8040 = tcoll;
    if(and__3822__auto____8040) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____8040
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____8041 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8042 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____8041)];
      if(or__3824__auto____8042) {
        return or__3824__auto____8042
      }else {
        var or__3824__auto____8043 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____8043) {
          return or__3824__auto____8043
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8048 = tcoll;
    if(and__3822__auto____8048) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____8048
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____8049 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8050 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____8049)];
      if(or__3824__auto____8050) {
        return or__3824__auto____8050
      }else {
        var or__3824__auto____8051 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____8051) {
          return or__3824__auto____8051
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____8056 = tcoll;
    if(and__3822__auto____8056) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____8056
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____8057 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8058 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____8057)];
      if(or__3824__auto____8058) {
        return or__3824__auto____8058
      }else {
        var or__3824__auto____8059 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____8059) {
          return or__3824__auto____8059
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____8064 = tcoll;
    if(and__3822__auto____8064) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____8064
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____8065 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8066 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____8065)];
      if(or__3824__auto____8066) {
        return or__3824__auto____8066
      }else {
        var or__3824__auto____8067 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____8067) {
          return or__3824__auto____8067
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____8072 = tcoll;
    if(and__3822__auto____8072) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____8072
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____8073 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8074 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____8073)];
      if(or__3824__auto____8074) {
        return or__3824__auto____8074
      }else {
        var or__3824__auto____8075 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____8075) {
          return or__3824__auto____8075
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8080 = tcoll;
    if(and__3822__auto____8080) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____8080
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____8081 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8082 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____8081)];
      if(or__3824__auto____8082) {
        return or__3824__auto____8082
      }else {
        var or__3824__auto____8083 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____8083) {
          return or__3824__auto____8083
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____8088 = tcoll;
    if(and__3822__auto____8088) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____8088
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____8089 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8090 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____8089)];
      if(or__3824__auto____8090) {
        return or__3824__auto____8090
      }else {
        var or__3824__auto____8091 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____8091) {
          return or__3824__auto____8091
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____8096 = x;
    if(and__3822__auto____8096) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____8096
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____8097 = x == null ? null : x;
    return function() {
      var or__3824__auto____8098 = cljs.core._compare[goog.typeOf(x__2363__auto____8097)];
      if(or__3824__auto____8098) {
        return or__3824__auto____8098
      }else {
        var or__3824__auto____8099 = cljs.core._compare["_"];
        if(or__3824__auto____8099) {
          return or__3824__auto____8099
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____8104 = coll;
    if(and__3822__auto____8104) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____8104
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____8105 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8106 = cljs.core._drop_first[goog.typeOf(x__2363__auto____8105)];
      if(or__3824__auto____8106) {
        return or__3824__auto____8106
      }else {
        var or__3824__auto____8107 = cljs.core._drop_first["_"];
        if(or__3824__auto____8107) {
          return or__3824__auto____8107
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____8112 = coll;
    if(and__3822__auto____8112) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____8112
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____8113 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8114 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____8113)];
      if(or__3824__auto____8114) {
        return or__3824__auto____8114
      }else {
        var or__3824__auto____8115 = cljs.core._chunked_first["_"];
        if(or__3824__auto____8115) {
          return or__3824__auto____8115
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____8120 = coll;
    if(and__3822__auto____8120) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____8120
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____8121 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8122 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____8121)];
      if(or__3824__auto____8122) {
        return or__3824__auto____8122
      }else {
        var or__3824__auto____8123 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____8123) {
          return or__3824__auto____8123
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____8128 = coll;
    if(and__3822__auto____8128) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____8128
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____8129 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8130 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____8129)];
      if(or__3824__auto____8130) {
        return or__3824__auto____8130
      }else {
        var or__3824__auto____8131 = cljs.core._chunked_next["_"];
        if(or__3824__auto____8131) {
          return or__3824__auto____8131
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____8133 = x === y;
    if(or__3824__auto____8133) {
      return or__3824__auto____8133
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__8134__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8135 = y;
            var G__8136 = cljs.core.first.call(null, more);
            var G__8137 = cljs.core.next.call(null, more);
            x = G__8135;
            y = G__8136;
            more = G__8137;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8134 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8134__delegate.call(this, x, y, more)
    };
    G__8134.cljs$lang$maxFixedArity = 2;
    G__8134.cljs$lang$applyTo = function(arglist__8138) {
      var x = cljs.core.first(arglist__8138);
      var y = cljs.core.first(cljs.core.next(arglist__8138));
      var more = cljs.core.rest(cljs.core.next(arglist__8138));
      return G__8134__delegate(x, y, more)
    };
    G__8134.cljs$lang$arity$variadic = G__8134__delegate;
    return G__8134
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__8139 = null;
  var G__8139__2 = function(o, k) {
    return null
  };
  var G__8139__3 = function(o, k, not_found) {
    return not_found
  };
  G__8139 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8139__2.call(this, o, k);
      case 3:
        return G__8139__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8139
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__8140 = null;
  var G__8140__2 = function(_, f) {
    return f.call(null)
  };
  var G__8140__3 = function(_, f, start) {
    return start
  };
  G__8140 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8140__2.call(this, _, f);
      case 3:
        return G__8140__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8140
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__8141 = null;
  var G__8141__2 = function(_, n) {
    return null
  };
  var G__8141__3 = function(_, n, not_found) {
    return not_found
  };
  G__8141 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8141__2.call(this, _, n);
      case 3:
        return G__8141__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8141
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____8142 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____8142) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____8142
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8155 = cljs.core._count.call(null, cicoll);
    if(cnt__8155 === 0) {
      return f.call(null)
    }else {
      var val__8156 = cljs.core._nth.call(null, cicoll, 0);
      var n__8157 = 1;
      while(true) {
        if(n__8157 < cnt__8155) {
          var nval__8158 = f.call(null, val__8156, cljs.core._nth.call(null, cicoll, n__8157));
          if(cljs.core.reduced_QMARK_.call(null, nval__8158)) {
            return cljs.core.deref.call(null, nval__8158)
          }else {
            var G__8167 = nval__8158;
            var G__8168 = n__8157 + 1;
            val__8156 = G__8167;
            n__8157 = G__8168;
            continue
          }
        }else {
          return val__8156
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8159 = cljs.core._count.call(null, cicoll);
    var val__8160 = val;
    var n__8161 = 0;
    while(true) {
      if(n__8161 < cnt__8159) {
        var nval__8162 = f.call(null, val__8160, cljs.core._nth.call(null, cicoll, n__8161));
        if(cljs.core.reduced_QMARK_.call(null, nval__8162)) {
          return cljs.core.deref.call(null, nval__8162)
        }else {
          var G__8169 = nval__8162;
          var G__8170 = n__8161 + 1;
          val__8160 = G__8169;
          n__8161 = G__8170;
          continue
        }
      }else {
        return val__8160
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8163 = cljs.core._count.call(null, cicoll);
    var val__8164 = val;
    var n__8165 = idx;
    while(true) {
      if(n__8165 < cnt__8163) {
        var nval__8166 = f.call(null, val__8164, cljs.core._nth.call(null, cicoll, n__8165));
        if(cljs.core.reduced_QMARK_.call(null, nval__8166)) {
          return cljs.core.deref.call(null, nval__8166)
        }else {
          var G__8171 = nval__8166;
          var G__8172 = n__8165 + 1;
          val__8164 = G__8171;
          n__8165 = G__8172;
          continue
        }
      }else {
        return val__8164
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8185 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8186 = arr[0];
      var n__8187 = 1;
      while(true) {
        if(n__8187 < cnt__8185) {
          var nval__8188 = f.call(null, val__8186, arr[n__8187]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8188)) {
            return cljs.core.deref.call(null, nval__8188)
          }else {
            var G__8197 = nval__8188;
            var G__8198 = n__8187 + 1;
            val__8186 = G__8197;
            n__8187 = G__8198;
            continue
          }
        }else {
          return val__8186
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8189 = arr.length;
    var val__8190 = val;
    var n__8191 = 0;
    while(true) {
      if(n__8191 < cnt__8189) {
        var nval__8192 = f.call(null, val__8190, arr[n__8191]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8192)) {
          return cljs.core.deref.call(null, nval__8192)
        }else {
          var G__8199 = nval__8192;
          var G__8200 = n__8191 + 1;
          val__8190 = G__8199;
          n__8191 = G__8200;
          continue
        }
      }else {
        return val__8190
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8193 = arr.length;
    var val__8194 = val;
    var n__8195 = idx;
    while(true) {
      if(n__8195 < cnt__8193) {
        var nval__8196 = f.call(null, val__8194, arr[n__8195]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8196)) {
          return cljs.core.deref.call(null, nval__8196)
        }else {
          var G__8201 = nval__8196;
          var G__8202 = n__8195 + 1;
          val__8194 = G__8201;
          n__8195 = G__8202;
          continue
        }
      }else {
        return val__8194
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8203 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8204 = this;
  if(this__8204.i + 1 < this__8204.a.length) {
    return new cljs.core.IndexedSeq(this__8204.a, this__8204.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8205 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8206 = this;
  var c__8207 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8207 > 0) {
    return new cljs.core.RSeq(coll, c__8207 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8208 = this;
  var this__8209 = this;
  return cljs.core.pr_str.call(null, this__8209)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8210 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8210.a)) {
    return cljs.core.ci_reduce.call(null, this__8210.a, f, this__8210.a[this__8210.i], this__8210.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8210.a[this__8210.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8211 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8211.a)) {
    return cljs.core.ci_reduce.call(null, this__8211.a, f, start, this__8211.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8212 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8213 = this;
  return this__8213.a.length - this__8213.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8214 = this;
  return this__8214.a[this__8214.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8215 = this;
  if(this__8215.i + 1 < this__8215.a.length) {
    return new cljs.core.IndexedSeq(this__8215.a, this__8215.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8216 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8217 = this;
  var i__8218 = n + this__8217.i;
  if(i__8218 < this__8217.a.length) {
    return this__8217.a[i__8218]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8219 = this;
  var i__8220 = n + this__8219.i;
  if(i__8220 < this__8219.a.length) {
    return this__8219.a[i__8220]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8221 = null;
  var G__8221__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8221__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8221 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8221__2.call(this, array, f);
      case 3:
        return G__8221__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8221
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8222 = null;
  var G__8222__2 = function(array, k) {
    return array[k]
  };
  var G__8222__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8222 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8222__2.call(this, array, k);
      case 3:
        return G__8222__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8222
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8223 = null;
  var G__8223__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8223__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8223 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8223__2.call(this, array, n);
      case 3:
        return G__8223__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8223
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8224 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8225 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8226 = this;
  var this__8227 = this;
  return cljs.core.pr_str.call(null, this__8227)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8228 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8229 = this;
  return this__8229.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8230 = this;
  return cljs.core._nth.call(null, this__8230.ci, this__8230.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8231 = this;
  if(this__8231.i > 0) {
    return new cljs.core.RSeq(this__8231.ci, this__8231.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8232 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8233 = this;
  return new cljs.core.RSeq(this__8233.ci, this__8233.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8234 = this;
  return this__8234.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8238__8239 = coll;
      if(G__8238__8239) {
        if(function() {
          var or__3824__auto____8240 = G__8238__8239.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8240) {
            return or__3824__auto____8240
          }else {
            return G__8238__8239.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8238__8239.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8238__8239)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8238__8239)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8245__8246 = coll;
      if(G__8245__8246) {
        if(function() {
          var or__3824__auto____8247 = G__8245__8246.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8247) {
            return or__3824__auto____8247
          }else {
            return G__8245__8246.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8245__8246.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8245__8246)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8245__8246)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8248 = cljs.core.seq.call(null, coll);
      if(s__8248 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8248)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8253__8254 = coll;
      if(G__8253__8254) {
        if(function() {
          var or__3824__auto____8255 = G__8253__8254.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8255) {
            return or__3824__auto____8255
          }else {
            return G__8253__8254.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8253__8254.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8253__8254)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8253__8254)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8256 = cljs.core.seq.call(null, coll);
      if(!(s__8256 == null)) {
        return cljs.core._rest.call(null, s__8256)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8260__8261 = coll;
      if(G__8260__8261) {
        if(function() {
          var or__3824__auto____8262 = G__8260__8261.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8262) {
            return or__3824__auto____8262
          }else {
            return G__8260__8261.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8260__8261.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8260__8261)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8260__8261)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8264 = cljs.core.next.call(null, s);
    if(!(sn__8264 == null)) {
      var G__8265 = sn__8264;
      s = G__8265;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8266__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8267 = conj.call(null, coll, x);
          var G__8268 = cljs.core.first.call(null, xs);
          var G__8269 = cljs.core.next.call(null, xs);
          coll = G__8267;
          x = G__8268;
          xs = G__8269;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8266 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8266__delegate.call(this, coll, x, xs)
    };
    G__8266.cljs$lang$maxFixedArity = 2;
    G__8266.cljs$lang$applyTo = function(arglist__8270) {
      var coll = cljs.core.first(arglist__8270);
      var x = cljs.core.first(cljs.core.next(arglist__8270));
      var xs = cljs.core.rest(cljs.core.next(arglist__8270));
      return G__8266__delegate(coll, x, xs)
    };
    G__8266.cljs$lang$arity$variadic = G__8266__delegate;
    return G__8266
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8273 = cljs.core.seq.call(null, coll);
  var acc__8274 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8273)) {
      return acc__8274 + cljs.core._count.call(null, s__8273)
    }else {
      var G__8275 = cljs.core.next.call(null, s__8273);
      var G__8276 = acc__8274 + 1;
      s__8273 = G__8275;
      acc__8274 = G__8276;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8283__8284 = coll;
        if(G__8283__8284) {
          if(function() {
            var or__3824__auto____8285 = G__8283__8284.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8285) {
              return or__3824__auto____8285
            }else {
              return G__8283__8284.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8283__8284.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8283__8284)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8283__8284)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8286__8287 = coll;
        if(G__8286__8287) {
          if(function() {
            var or__3824__auto____8288 = G__8286__8287.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8288) {
              return or__3824__auto____8288
            }else {
              return G__8286__8287.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8286__8287.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8286__8287)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8286__8287)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8291__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8290 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8292 = ret__8290;
          var G__8293 = cljs.core.first.call(null, kvs);
          var G__8294 = cljs.core.second.call(null, kvs);
          var G__8295 = cljs.core.nnext.call(null, kvs);
          coll = G__8292;
          k = G__8293;
          v = G__8294;
          kvs = G__8295;
          continue
        }else {
          return ret__8290
        }
        break
      }
    };
    var G__8291 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8291__delegate.call(this, coll, k, v, kvs)
    };
    G__8291.cljs$lang$maxFixedArity = 3;
    G__8291.cljs$lang$applyTo = function(arglist__8296) {
      var coll = cljs.core.first(arglist__8296);
      var k = cljs.core.first(cljs.core.next(arglist__8296));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8296)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8296)));
      return G__8291__delegate(coll, k, v, kvs)
    };
    G__8291.cljs$lang$arity$variadic = G__8291__delegate;
    return G__8291
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8299__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8298 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8300 = ret__8298;
          var G__8301 = cljs.core.first.call(null, ks);
          var G__8302 = cljs.core.next.call(null, ks);
          coll = G__8300;
          k = G__8301;
          ks = G__8302;
          continue
        }else {
          return ret__8298
        }
        break
      }
    };
    var G__8299 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8299__delegate.call(this, coll, k, ks)
    };
    G__8299.cljs$lang$maxFixedArity = 2;
    G__8299.cljs$lang$applyTo = function(arglist__8303) {
      var coll = cljs.core.first(arglist__8303);
      var k = cljs.core.first(cljs.core.next(arglist__8303));
      var ks = cljs.core.rest(cljs.core.next(arglist__8303));
      return G__8299__delegate(coll, k, ks)
    };
    G__8299.cljs$lang$arity$variadic = G__8299__delegate;
    return G__8299
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8307__8308 = o;
    if(G__8307__8308) {
      if(function() {
        var or__3824__auto____8309 = G__8307__8308.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8309) {
          return or__3824__auto____8309
        }else {
          return G__8307__8308.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8307__8308.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8307__8308)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8307__8308)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8312__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8311 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8313 = ret__8311;
          var G__8314 = cljs.core.first.call(null, ks);
          var G__8315 = cljs.core.next.call(null, ks);
          coll = G__8313;
          k = G__8314;
          ks = G__8315;
          continue
        }else {
          return ret__8311
        }
        break
      }
    };
    var G__8312 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8312__delegate.call(this, coll, k, ks)
    };
    G__8312.cljs$lang$maxFixedArity = 2;
    G__8312.cljs$lang$applyTo = function(arglist__8316) {
      var coll = cljs.core.first(arglist__8316);
      var k = cljs.core.first(cljs.core.next(arglist__8316));
      var ks = cljs.core.rest(cljs.core.next(arglist__8316));
      return G__8312__delegate(coll, k, ks)
    };
    G__8312.cljs$lang$arity$variadic = G__8312__delegate;
    return G__8312
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8318 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8318;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8318
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8320 = cljs.core.string_hash_cache[k];
  if(!(h__8320 == null)) {
    return h__8320
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8322 = goog.isString(o);
      if(and__3822__auto____8322) {
        return check_cache
      }else {
        return and__3822__auto____8322
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8326__8327 = x;
    if(G__8326__8327) {
      if(function() {
        var or__3824__auto____8328 = G__8326__8327.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8328) {
          return or__3824__auto____8328
        }else {
          return G__8326__8327.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8326__8327.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8326__8327)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8326__8327)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8332__8333 = x;
    if(G__8332__8333) {
      if(function() {
        var or__3824__auto____8334 = G__8332__8333.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8334) {
          return or__3824__auto____8334
        }else {
          return G__8332__8333.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8332__8333.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8332__8333)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8332__8333)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8338__8339 = x;
  if(G__8338__8339) {
    if(function() {
      var or__3824__auto____8340 = G__8338__8339.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8340) {
        return or__3824__auto____8340
      }else {
        return G__8338__8339.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8338__8339.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8338__8339)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8338__8339)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8344__8345 = x;
  if(G__8344__8345) {
    if(function() {
      var or__3824__auto____8346 = G__8344__8345.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8346) {
        return or__3824__auto____8346
      }else {
        return G__8344__8345.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8344__8345.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8344__8345)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8344__8345)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8350__8351 = x;
  if(G__8350__8351) {
    if(function() {
      var or__3824__auto____8352 = G__8350__8351.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8352) {
        return or__3824__auto____8352
      }else {
        return G__8350__8351.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8350__8351.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8350__8351)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8350__8351)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8356__8357 = x;
  if(G__8356__8357) {
    if(function() {
      var or__3824__auto____8358 = G__8356__8357.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8358) {
        return or__3824__auto____8358
      }else {
        return G__8356__8357.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8356__8357.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8356__8357)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8356__8357)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8362__8363 = x;
  if(G__8362__8363) {
    if(function() {
      var or__3824__auto____8364 = G__8362__8363.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8364) {
        return or__3824__auto____8364
      }else {
        return G__8362__8363.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8362__8363.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8362__8363)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8362__8363)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8368__8369 = x;
    if(G__8368__8369) {
      if(function() {
        var or__3824__auto____8370 = G__8368__8369.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8370) {
          return or__3824__auto____8370
        }else {
          return G__8368__8369.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8368__8369.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8368__8369)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8368__8369)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8374__8375 = x;
  if(G__8374__8375) {
    if(function() {
      var or__3824__auto____8376 = G__8374__8375.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8376) {
        return or__3824__auto____8376
      }else {
        return G__8374__8375.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8374__8375.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8374__8375)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8374__8375)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8380__8381 = x;
  if(G__8380__8381) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____8382 = null;
      if(cljs.core.truth_(or__3824__auto____8382)) {
        return or__3824__auto____8382
      }else {
        return G__8380__8381.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8380__8381.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8380__8381)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8380__8381)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8383__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8383 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8383__delegate.call(this, keyvals)
    };
    G__8383.cljs$lang$maxFixedArity = 0;
    G__8383.cljs$lang$applyTo = function(arglist__8384) {
      var keyvals = cljs.core.seq(arglist__8384);
      return G__8383__delegate(keyvals)
    };
    G__8383.cljs$lang$arity$variadic = G__8383__delegate;
    return G__8383
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8386 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8386.push(key)
  });
  return keys__8386
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8390 = i;
  var j__8391 = j;
  var len__8392 = len;
  while(true) {
    if(len__8392 === 0) {
      return to
    }else {
      to[j__8391] = from[i__8390];
      var G__8393 = i__8390 + 1;
      var G__8394 = j__8391 + 1;
      var G__8395 = len__8392 - 1;
      i__8390 = G__8393;
      j__8391 = G__8394;
      len__8392 = G__8395;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8399 = i + (len - 1);
  var j__8400 = j + (len - 1);
  var len__8401 = len;
  while(true) {
    if(len__8401 === 0) {
      return to
    }else {
      to[j__8400] = from[i__8399];
      var G__8402 = i__8399 - 1;
      var G__8403 = j__8400 - 1;
      var G__8404 = len__8401 - 1;
      i__8399 = G__8402;
      j__8400 = G__8403;
      len__8401 = G__8404;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8408__8409 = s;
    if(G__8408__8409) {
      if(function() {
        var or__3824__auto____8410 = G__8408__8409.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8410) {
          return or__3824__auto____8410
        }else {
          return G__8408__8409.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8408__8409.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8408__8409)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8408__8409)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8414__8415 = s;
  if(G__8414__8415) {
    if(function() {
      var or__3824__auto____8416 = G__8414__8415.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8416) {
        return or__3824__auto____8416
      }else {
        return G__8414__8415.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8414__8415.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8414__8415)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8414__8415)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8419 = goog.isString(x);
  if(and__3822__auto____8419) {
    return!function() {
      var or__3824__auto____8420 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8420) {
        return or__3824__auto____8420
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8419
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8422 = goog.isString(x);
  if(and__3822__auto____8422) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8422
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8424 = goog.isString(x);
  if(and__3822__auto____8424) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8424
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8429 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8429) {
    return or__3824__auto____8429
  }else {
    var G__8430__8431 = f;
    if(G__8430__8431) {
      if(function() {
        var or__3824__auto____8432 = G__8430__8431.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8432) {
          return or__3824__auto____8432
        }else {
          return G__8430__8431.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8430__8431.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8430__8431)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8430__8431)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8434 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8434) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____8434
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____8437 = coll;
    if(cljs.core.truth_(and__3822__auto____8437)) {
      var and__3822__auto____8438 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8438) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8438
      }
    }else {
      return and__3822__auto____8437
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8447__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8443 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8444 = more;
        while(true) {
          var x__8445 = cljs.core.first.call(null, xs__8444);
          var etc__8446 = cljs.core.next.call(null, xs__8444);
          if(cljs.core.truth_(xs__8444)) {
            if(cljs.core.contains_QMARK_.call(null, s__8443, x__8445)) {
              return false
            }else {
              var G__8448 = cljs.core.conj.call(null, s__8443, x__8445);
              var G__8449 = etc__8446;
              s__8443 = G__8448;
              xs__8444 = G__8449;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8447 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8447__delegate.call(this, x, y, more)
    };
    G__8447.cljs$lang$maxFixedArity = 2;
    G__8447.cljs$lang$applyTo = function(arglist__8450) {
      var x = cljs.core.first(arglist__8450);
      var y = cljs.core.first(cljs.core.next(arglist__8450));
      var more = cljs.core.rest(cljs.core.next(arglist__8450));
      return G__8447__delegate(x, y, more)
    };
    G__8447.cljs$lang$arity$variadic = G__8447__delegate;
    return G__8447
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8454__8455 = x;
            if(G__8454__8455) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____8456 = null;
                if(cljs.core.truth_(or__3824__auto____8456)) {
                  return or__3824__auto____8456
                }else {
                  return G__8454__8455.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8454__8455.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8454__8455)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8454__8455)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8461 = cljs.core.count.call(null, xs);
    var yl__8462 = cljs.core.count.call(null, ys);
    if(xl__8461 < yl__8462) {
      return-1
    }else {
      if(xl__8461 > yl__8462) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8461, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8463 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8464 = d__8463 === 0;
        if(and__3822__auto____8464) {
          return n + 1 < len
        }else {
          return and__3822__auto____8464
        }
      }()) {
        var G__8465 = xs;
        var G__8466 = ys;
        var G__8467 = len;
        var G__8468 = n + 1;
        xs = G__8465;
        ys = G__8466;
        len = G__8467;
        n = G__8468;
        continue
      }else {
        return d__8463
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8470 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8470)) {
        return r__8470
      }else {
        if(cljs.core.truth_(r__8470)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8472 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8472, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8472)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8478 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8478) {
      var s__8479 = temp__3971__auto____8478;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8479), cljs.core.next.call(null, s__8479))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8480 = val;
    var coll__8481 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8481) {
        var nval__8482 = f.call(null, val__8480, cljs.core.first.call(null, coll__8481));
        if(cljs.core.reduced_QMARK_.call(null, nval__8482)) {
          return cljs.core.deref.call(null, nval__8482)
        }else {
          var G__8483 = nval__8482;
          var G__8484 = cljs.core.next.call(null, coll__8481);
          val__8480 = G__8483;
          coll__8481 = G__8484;
          continue
        }
      }else {
        return val__8480
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8486 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8486);
  return cljs.core.vec.call(null, a__8486)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8493__8494 = coll;
      if(G__8493__8494) {
        if(function() {
          var or__3824__auto____8495 = G__8493__8494.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8495) {
            return or__3824__auto____8495
          }else {
            return G__8493__8494.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8493__8494.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8493__8494)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8493__8494)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8496__8497 = coll;
      if(G__8496__8497) {
        if(function() {
          var or__3824__auto____8498 = G__8496__8497.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8498) {
            return or__3824__auto____8498
          }else {
            return G__8496__8497.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8496__8497.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8496__8497)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8496__8497)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8499 = this;
  return this__8499.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8500__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8500 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8500__delegate.call(this, x, y, more)
    };
    G__8500.cljs$lang$maxFixedArity = 2;
    G__8500.cljs$lang$applyTo = function(arglist__8501) {
      var x = cljs.core.first(arglist__8501);
      var y = cljs.core.first(cljs.core.next(arglist__8501));
      var more = cljs.core.rest(cljs.core.next(arglist__8501));
      return G__8500__delegate(x, y, more)
    };
    G__8500.cljs$lang$arity$variadic = G__8500__delegate;
    return G__8500
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8502__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8502 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8502__delegate.call(this, x, y, more)
    };
    G__8502.cljs$lang$maxFixedArity = 2;
    G__8502.cljs$lang$applyTo = function(arglist__8503) {
      var x = cljs.core.first(arglist__8503);
      var y = cljs.core.first(cljs.core.next(arglist__8503));
      var more = cljs.core.rest(cljs.core.next(arglist__8503));
      return G__8502__delegate(x, y, more)
    };
    G__8502.cljs$lang$arity$variadic = G__8502__delegate;
    return G__8502
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8504__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8504 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8504__delegate.call(this, x, y, more)
    };
    G__8504.cljs$lang$maxFixedArity = 2;
    G__8504.cljs$lang$applyTo = function(arglist__8505) {
      var x = cljs.core.first(arglist__8505);
      var y = cljs.core.first(cljs.core.next(arglist__8505));
      var more = cljs.core.rest(cljs.core.next(arglist__8505));
      return G__8504__delegate(x, y, more)
    };
    G__8504.cljs$lang$arity$variadic = G__8504__delegate;
    return G__8504
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8506__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8506 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8506__delegate.call(this, x, y, more)
    };
    G__8506.cljs$lang$maxFixedArity = 2;
    G__8506.cljs$lang$applyTo = function(arglist__8507) {
      var x = cljs.core.first(arglist__8507);
      var y = cljs.core.first(cljs.core.next(arglist__8507));
      var more = cljs.core.rest(cljs.core.next(arglist__8507));
      return G__8506__delegate(x, y, more)
    };
    G__8506.cljs$lang$arity$variadic = G__8506__delegate;
    return G__8506
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8508__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8509 = y;
            var G__8510 = cljs.core.first.call(null, more);
            var G__8511 = cljs.core.next.call(null, more);
            x = G__8509;
            y = G__8510;
            more = G__8511;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8508 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8508__delegate.call(this, x, y, more)
    };
    G__8508.cljs$lang$maxFixedArity = 2;
    G__8508.cljs$lang$applyTo = function(arglist__8512) {
      var x = cljs.core.first(arglist__8512);
      var y = cljs.core.first(cljs.core.next(arglist__8512));
      var more = cljs.core.rest(cljs.core.next(arglist__8512));
      return G__8508__delegate(x, y, more)
    };
    G__8508.cljs$lang$arity$variadic = G__8508__delegate;
    return G__8508
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8513__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8514 = y;
            var G__8515 = cljs.core.first.call(null, more);
            var G__8516 = cljs.core.next.call(null, more);
            x = G__8514;
            y = G__8515;
            more = G__8516;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8513 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8513__delegate.call(this, x, y, more)
    };
    G__8513.cljs$lang$maxFixedArity = 2;
    G__8513.cljs$lang$applyTo = function(arglist__8517) {
      var x = cljs.core.first(arglist__8517);
      var y = cljs.core.first(cljs.core.next(arglist__8517));
      var more = cljs.core.rest(cljs.core.next(arglist__8517));
      return G__8513__delegate(x, y, more)
    };
    G__8513.cljs$lang$arity$variadic = G__8513__delegate;
    return G__8513
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8518__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8519 = y;
            var G__8520 = cljs.core.first.call(null, more);
            var G__8521 = cljs.core.next.call(null, more);
            x = G__8519;
            y = G__8520;
            more = G__8521;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8518 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8518__delegate.call(this, x, y, more)
    };
    G__8518.cljs$lang$maxFixedArity = 2;
    G__8518.cljs$lang$applyTo = function(arglist__8522) {
      var x = cljs.core.first(arglist__8522);
      var y = cljs.core.first(cljs.core.next(arglist__8522));
      var more = cljs.core.rest(cljs.core.next(arglist__8522));
      return G__8518__delegate(x, y, more)
    };
    G__8518.cljs$lang$arity$variadic = G__8518__delegate;
    return G__8518
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8523__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8524 = y;
            var G__8525 = cljs.core.first.call(null, more);
            var G__8526 = cljs.core.next.call(null, more);
            x = G__8524;
            y = G__8525;
            more = G__8526;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8523 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8523__delegate.call(this, x, y, more)
    };
    G__8523.cljs$lang$maxFixedArity = 2;
    G__8523.cljs$lang$applyTo = function(arglist__8527) {
      var x = cljs.core.first(arglist__8527);
      var y = cljs.core.first(cljs.core.next(arglist__8527));
      var more = cljs.core.rest(cljs.core.next(arglist__8527));
      return G__8523__delegate(x, y, more)
    };
    G__8523.cljs$lang$arity$variadic = G__8523__delegate;
    return G__8523
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8528__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8528 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8528__delegate.call(this, x, y, more)
    };
    G__8528.cljs$lang$maxFixedArity = 2;
    G__8528.cljs$lang$applyTo = function(arglist__8529) {
      var x = cljs.core.first(arglist__8529);
      var y = cljs.core.first(cljs.core.next(arglist__8529));
      var more = cljs.core.rest(cljs.core.next(arglist__8529));
      return G__8528__delegate(x, y, more)
    };
    G__8528.cljs$lang$arity$variadic = G__8528__delegate;
    return G__8528
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8530__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8530 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8530__delegate.call(this, x, y, more)
    };
    G__8530.cljs$lang$maxFixedArity = 2;
    G__8530.cljs$lang$applyTo = function(arglist__8531) {
      var x = cljs.core.first(arglist__8531);
      var y = cljs.core.first(cljs.core.next(arglist__8531));
      var more = cljs.core.rest(cljs.core.next(arglist__8531));
      return G__8530__delegate(x, y, more)
    };
    G__8530.cljs$lang$arity$variadic = G__8530__delegate;
    return G__8530
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8533 = n % d;
  return cljs.core.fix.call(null, (n - rem__8533) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8535 = cljs.core.quot.call(null, n, d);
  return n - d * q__8535
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8538 = v - (v >> 1 & 1431655765);
  var v__8539 = (v__8538 & 858993459) + (v__8538 >> 2 & 858993459);
  return(v__8539 + (v__8539 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8540__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8541 = y;
            var G__8542 = cljs.core.first.call(null, more);
            var G__8543 = cljs.core.next.call(null, more);
            x = G__8541;
            y = G__8542;
            more = G__8543;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8540 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8540__delegate.call(this, x, y, more)
    };
    G__8540.cljs$lang$maxFixedArity = 2;
    G__8540.cljs$lang$applyTo = function(arglist__8544) {
      var x = cljs.core.first(arglist__8544);
      var y = cljs.core.first(cljs.core.next(arglist__8544));
      var more = cljs.core.rest(cljs.core.next(arglist__8544));
      return G__8540__delegate(x, y, more)
    };
    G__8540.cljs$lang$arity$variadic = G__8540__delegate;
    return G__8540
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8548 = n;
  var xs__8549 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____8550 = xs__8549;
      if(and__3822__auto____8550) {
        return n__8548 > 0
      }else {
        return and__3822__auto____8550
      }
    }())) {
      var G__8551 = n__8548 - 1;
      var G__8552 = cljs.core.next.call(null, xs__8549);
      n__8548 = G__8551;
      xs__8549 = G__8552;
      continue
    }else {
      return xs__8549
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8553__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8554 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8555 = cljs.core.next.call(null, more);
            sb = G__8554;
            more = G__8555;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8553 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8553__delegate.call(this, x, ys)
    };
    G__8553.cljs$lang$maxFixedArity = 1;
    G__8553.cljs$lang$applyTo = function(arglist__8556) {
      var x = cljs.core.first(arglist__8556);
      var ys = cljs.core.rest(arglist__8556);
      return G__8553__delegate(x, ys)
    };
    G__8553.cljs$lang$arity$variadic = G__8553__delegate;
    return G__8553
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8557__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8558 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8559 = cljs.core.next.call(null, more);
            sb = G__8558;
            more = G__8559;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8557 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8557__delegate.call(this, x, ys)
    };
    G__8557.cljs$lang$maxFixedArity = 1;
    G__8557.cljs$lang$applyTo = function(arglist__8560) {
      var x = cljs.core.first(arglist__8560);
      var ys = cljs.core.rest(arglist__8560);
      return G__8557__delegate(x, ys)
    };
    G__8557.cljs$lang$arity$variadic = G__8557__delegate;
    return G__8557
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__8561) {
    var fmt = cljs.core.first(arglist__8561);
    var args = cljs.core.rest(arglist__8561);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8564 = cljs.core.seq.call(null, x);
    var ys__8565 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8564 == null) {
        return ys__8565 == null
      }else {
        if(ys__8565 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8564), cljs.core.first.call(null, ys__8565))) {
            var G__8566 = cljs.core.next.call(null, xs__8564);
            var G__8567 = cljs.core.next.call(null, ys__8565);
            xs__8564 = G__8566;
            ys__8565 = G__8567;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8568_SHARP_, p2__8569_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8568_SHARP_, cljs.core.hash.call(null, p2__8569_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__8573 = 0;
  var s__8574 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8574) {
      var e__8575 = cljs.core.first.call(null, s__8574);
      var G__8576 = (h__8573 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8575)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8575)))) % 4503599627370496;
      var G__8577 = cljs.core.next.call(null, s__8574);
      h__8573 = G__8576;
      s__8574 = G__8577;
      continue
    }else {
      return h__8573
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8581 = 0;
  var s__8582 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8582) {
      var e__8583 = cljs.core.first.call(null, s__8582);
      var G__8584 = (h__8581 + cljs.core.hash.call(null, e__8583)) % 4503599627370496;
      var G__8585 = cljs.core.next.call(null, s__8582);
      h__8581 = G__8584;
      s__8582 = G__8585;
      continue
    }else {
      return h__8581
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8606__8607 = cljs.core.seq.call(null, fn_map);
  if(G__8606__8607) {
    var G__8609__8611 = cljs.core.first.call(null, G__8606__8607);
    var vec__8610__8612 = G__8609__8611;
    var key_name__8613 = cljs.core.nth.call(null, vec__8610__8612, 0, null);
    var f__8614 = cljs.core.nth.call(null, vec__8610__8612, 1, null);
    var G__8606__8615 = G__8606__8607;
    var G__8609__8616 = G__8609__8611;
    var G__8606__8617 = G__8606__8615;
    while(true) {
      var vec__8618__8619 = G__8609__8616;
      var key_name__8620 = cljs.core.nth.call(null, vec__8618__8619, 0, null);
      var f__8621 = cljs.core.nth.call(null, vec__8618__8619, 1, null);
      var G__8606__8622 = G__8606__8617;
      var str_name__8623 = cljs.core.name.call(null, key_name__8620);
      obj[str_name__8623] = f__8621;
      var temp__3974__auto____8624 = cljs.core.next.call(null, G__8606__8622);
      if(temp__3974__auto____8624) {
        var G__8606__8625 = temp__3974__auto____8624;
        var G__8626 = cljs.core.first.call(null, G__8606__8625);
        var G__8627 = G__8606__8625;
        G__8609__8616 = G__8626;
        G__8606__8617 = G__8627;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8628 = this;
  var h__2192__auto____8629 = this__8628.__hash;
  if(!(h__2192__auto____8629 == null)) {
    return h__2192__auto____8629
  }else {
    var h__2192__auto____8630 = cljs.core.hash_coll.call(null, coll);
    this__8628.__hash = h__2192__auto____8630;
    return h__2192__auto____8630
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8631 = this;
  if(this__8631.count === 1) {
    return null
  }else {
    return this__8631.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8632 = this;
  return new cljs.core.List(this__8632.meta, o, coll, this__8632.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8633 = this;
  var this__8634 = this;
  return cljs.core.pr_str.call(null, this__8634)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8635 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8636 = this;
  return this__8636.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8637 = this;
  return this__8637.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8638 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8639 = this;
  return this__8639.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8640 = this;
  if(this__8640.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8640.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8641 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8642 = this;
  return new cljs.core.List(meta, this__8642.first, this__8642.rest, this__8642.count, this__8642.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8643 = this;
  return this__8643.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8644 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8645 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8646 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8647 = this;
  return new cljs.core.List(this__8647.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8648 = this;
  var this__8649 = this;
  return cljs.core.pr_str.call(null, this__8649)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8650 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8651 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8652 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8653 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8654 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8655 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8656 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8657 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8658 = this;
  return this__8658.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8659 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8663__8664 = coll;
  if(G__8663__8664) {
    if(function() {
      var or__3824__auto____8665 = G__8663__8664.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8665) {
        return or__3824__auto____8665
      }else {
        return G__8663__8664.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8663__8664.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8663__8664)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8663__8664)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8666__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8666 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8666__delegate.call(this, x, y, z, items)
    };
    G__8666.cljs$lang$maxFixedArity = 3;
    G__8666.cljs$lang$applyTo = function(arglist__8667) {
      var x = cljs.core.first(arglist__8667);
      var y = cljs.core.first(cljs.core.next(arglist__8667));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8667)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8667)));
      return G__8666__delegate(x, y, z, items)
    };
    G__8666.cljs$lang$arity$variadic = G__8666__delegate;
    return G__8666
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8668 = this;
  var h__2192__auto____8669 = this__8668.__hash;
  if(!(h__2192__auto____8669 == null)) {
    return h__2192__auto____8669
  }else {
    var h__2192__auto____8670 = cljs.core.hash_coll.call(null, coll);
    this__8668.__hash = h__2192__auto____8670;
    return h__2192__auto____8670
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8671 = this;
  if(this__8671.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8671.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8672 = this;
  return new cljs.core.Cons(null, o, coll, this__8672.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8673 = this;
  var this__8674 = this;
  return cljs.core.pr_str.call(null, this__8674)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8675 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8676 = this;
  return this__8676.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8677 = this;
  if(this__8677.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8677.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8678 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8679 = this;
  return new cljs.core.Cons(meta, this__8679.first, this__8679.rest, this__8679.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8680 = this;
  return this__8680.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8681 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8681.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8686 = coll == null;
    if(or__3824__auto____8686) {
      return or__3824__auto____8686
    }else {
      var G__8687__8688 = coll;
      if(G__8687__8688) {
        if(function() {
          var or__3824__auto____8689 = G__8687__8688.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8689) {
            return or__3824__auto____8689
          }else {
            return G__8687__8688.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8687__8688.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8687__8688)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8687__8688)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8693__8694 = x;
  if(G__8693__8694) {
    if(function() {
      var or__3824__auto____8695 = G__8693__8694.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8695) {
        return or__3824__auto____8695
      }else {
        return G__8693__8694.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8693__8694.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8693__8694)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8693__8694)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8696 = null;
  var G__8696__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8696__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8696 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8696__2.call(this, string, f);
      case 3:
        return G__8696__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8696
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8697 = null;
  var G__8697__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8697__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8697 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8697__2.call(this, string, k);
      case 3:
        return G__8697__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8697
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8698 = null;
  var G__8698__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8698__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8698 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8698__2.call(this, string, n);
      case 3:
        return G__8698__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8698
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8710 = null;
  var G__8710__2 = function(this_sym8701, coll) {
    var this__8703 = this;
    var this_sym8701__8704 = this;
    var ___8705 = this_sym8701__8704;
    if(coll == null) {
      return null
    }else {
      var strobj__8706 = coll.strobj;
      if(strobj__8706 == null) {
        return cljs.core._lookup.call(null, coll, this__8703.k, null)
      }else {
        return strobj__8706[this__8703.k]
      }
    }
  };
  var G__8710__3 = function(this_sym8702, coll, not_found) {
    var this__8703 = this;
    var this_sym8702__8707 = this;
    var ___8708 = this_sym8702__8707;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8703.k, not_found)
    }
  };
  G__8710 = function(this_sym8702, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8710__2.call(this, this_sym8702, coll);
      case 3:
        return G__8710__3.call(this, this_sym8702, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8710
}();
cljs.core.Keyword.prototype.apply = function(this_sym8699, args8700) {
  var this__8709 = this;
  return this_sym8699.call.apply(this_sym8699, [this_sym8699].concat(args8700.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8719 = null;
  var G__8719__2 = function(this_sym8713, coll) {
    var this_sym8713__8715 = this;
    var this__8716 = this_sym8713__8715;
    return cljs.core._lookup.call(null, coll, this__8716.toString(), null)
  };
  var G__8719__3 = function(this_sym8714, coll, not_found) {
    var this_sym8714__8717 = this;
    var this__8718 = this_sym8714__8717;
    return cljs.core._lookup.call(null, coll, this__8718.toString(), not_found)
  };
  G__8719 = function(this_sym8714, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8719__2.call(this, this_sym8714, coll);
      case 3:
        return G__8719__3.call(this, this_sym8714, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8719
}();
String.prototype.apply = function(this_sym8711, args8712) {
  return this_sym8711.call.apply(this_sym8711, [this_sym8711].concat(args8712.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8721 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8721
  }else {
    lazy_seq.x = x__8721.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8722 = this;
  var h__2192__auto____8723 = this__8722.__hash;
  if(!(h__2192__auto____8723 == null)) {
    return h__2192__auto____8723
  }else {
    var h__2192__auto____8724 = cljs.core.hash_coll.call(null, coll);
    this__8722.__hash = h__2192__auto____8724;
    return h__2192__auto____8724
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8725 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8726 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8727 = this;
  var this__8728 = this;
  return cljs.core.pr_str.call(null, this__8728)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8729 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8730 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8731 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8732 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8733 = this;
  return new cljs.core.LazySeq(meta, this__8733.realized, this__8733.x, this__8733.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8734 = this;
  return this__8734.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8735 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8735.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8736 = this;
  return this__8736.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8737 = this;
  var ___8738 = this;
  this__8737.buf[this__8737.end] = o;
  return this__8737.end = this__8737.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8739 = this;
  var ___8740 = this;
  var ret__8741 = new cljs.core.ArrayChunk(this__8739.buf, 0, this__8739.end);
  this__8739.buf = null;
  return ret__8741
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8742 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8742.arr[this__8742.off], this__8742.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8743 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8743.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8744 = this;
  if(this__8744.off === this__8744.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8744.arr, this__8744.off + 1, this__8744.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8745 = this;
  return this__8745.arr[this__8745.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8746 = this;
  if(function() {
    var and__3822__auto____8747 = i >= 0;
    if(and__3822__auto____8747) {
      return i < this__8746.end - this__8746.off
    }else {
      return and__3822__auto____8747
    }
  }()) {
    return this__8746.arr[this__8746.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8748 = this;
  return this__8748.end - this__8748.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8749 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8750 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8751 = this;
  return cljs.core._nth.call(null, this__8751.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8752 = this;
  if(cljs.core._count.call(null, this__8752.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8752.chunk), this__8752.more, this__8752.meta)
  }else {
    if(this__8752.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8752.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8753 = this;
  if(this__8753.more == null) {
    return null
  }else {
    return this__8753.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8754 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8755 = this;
  return new cljs.core.ChunkedCons(this__8755.chunk, this__8755.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8756 = this;
  return this__8756.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8757 = this;
  return this__8757.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8758 = this;
  if(this__8758.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8758.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8762__8763 = s;
    if(G__8762__8763) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____8764 = null;
        if(cljs.core.truth_(or__3824__auto____8764)) {
          return or__3824__auto____8764
        }else {
          return G__8762__8763.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8762__8763.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8762__8763)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8762__8763)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8767 = [];
  var s__8768 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8768)) {
      ary__8767.push(cljs.core.first.call(null, s__8768));
      var G__8769 = cljs.core.next.call(null, s__8768);
      s__8768 = G__8769;
      continue
    }else {
      return ary__8767
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8773 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8774 = 0;
  var xs__8775 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8775) {
      ret__8773[i__8774] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8775));
      var G__8776 = i__8774 + 1;
      var G__8777 = cljs.core.next.call(null, xs__8775);
      i__8774 = G__8776;
      xs__8775 = G__8777;
      continue
    }else {
    }
    break
  }
  return ret__8773
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8785 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8786 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8787 = 0;
      var s__8788 = s__8786;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8789 = s__8788;
          if(and__3822__auto____8789) {
            return i__8787 < size
          }else {
            return and__3822__auto____8789
          }
        }())) {
          a__8785[i__8787] = cljs.core.first.call(null, s__8788);
          var G__8792 = i__8787 + 1;
          var G__8793 = cljs.core.next.call(null, s__8788);
          i__8787 = G__8792;
          s__8788 = G__8793;
          continue
        }else {
          return a__8785
        }
        break
      }
    }else {
      var n__2527__auto____8790 = size;
      var i__8791 = 0;
      while(true) {
        if(i__8791 < n__2527__auto____8790) {
          a__8785[i__8791] = init_val_or_seq;
          var G__8794 = i__8791 + 1;
          i__8791 = G__8794;
          continue
        }else {
        }
        break
      }
      return a__8785
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8802 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8803 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8804 = 0;
      var s__8805 = s__8803;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8806 = s__8805;
          if(and__3822__auto____8806) {
            return i__8804 < size
          }else {
            return and__3822__auto____8806
          }
        }())) {
          a__8802[i__8804] = cljs.core.first.call(null, s__8805);
          var G__8809 = i__8804 + 1;
          var G__8810 = cljs.core.next.call(null, s__8805);
          i__8804 = G__8809;
          s__8805 = G__8810;
          continue
        }else {
          return a__8802
        }
        break
      }
    }else {
      var n__2527__auto____8807 = size;
      var i__8808 = 0;
      while(true) {
        if(i__8808 < n__2527__auto____8807) {
          a__8802[i__8808] = init_val_or_seq;
          var G__8811 = i__8808 + 1;
          i__8808 = G__8811;
          continue
        }else {
        }
        break
      }
      return a__8802
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8819 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8820 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8821 = 0;
      var s__8822 = s__8820;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8823 = s__8822;
          if(and__3822__auto____8823) {
            return i__8821 < size
          }else {
            return and__3822__auto____8823
          }
        }())) {
          a__8819[i__8821] = cljs.core.first.call(null, s__8822);
          var G__8826 = i__8821 + 1;
          var G__8827 = cljs.core.next.call(null, s__8822);
          i__8821 = G__8826;
          s__8822 = G__8827;
          continue
        }else {
          return a__8819
        }
        break
      }
    }else {
      var n__2527__auto____8824 = size;
      var i__8825 = 0;
      while(true) {
        if(i__8825 < n__2527__auto____8824) {
          a__8819[i__8825] = init_val_or_seq;
          var G__8828 = i__8825 + 1;
          i__8825 = G__8828;
          continue
        }else {
        }
        break
      }
      return a__8819
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8833 = s;
    var i__8834 = n;
    var sum__8835 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8836 = i__8834 > 0;
        if(and__3822__auto____8836) {
          return cljs.core.seq.call(null, s__8833)
        }else {
          return and__3822__auto____8836
        }
      }())) {
        var G__8837 = cljs.core.next.call(null, s__8833);
        var G__8838 = i__8834 - 1;
        var G__8839 = sum__8835 + 1;
        s__8833 = G__8837;
        i__8834 = G__8838;
        sum__8835 = G__8839;
        continue
      }else {
        return sum__8835
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8844 = cljs.core.seq.call(null, x);
      if(s__8844) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8844)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8844), concat.call(null, cljs.core.chunk_rest.call(null, s__8844), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8844), concat.call(null, cljs.core.rest.call(null, s__8844), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8848__delegate = function(x, y, zs) {
      var cat__8847 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8846 = cljs.core.seq.call(null, xys);
          if(xys__8846) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8846)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8846), cat.call(null, cljs.core.chunk_rest.call(null, xys__8846), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8846), cat.call(null, cljs.core.rest.call(null, xys__8846), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8847.call(null, concat.call(null, x, y), zs)
    };
    var G__8848 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8848__delegate.call(this, x, y, zs)
    };
    G__8848.cljs$lang$maxFixedArity = 2;
    G__8848.cljs$lang$applyTo = function(arglist__8849) {
      var x = cljs.core.first(arglist__8849);
      var y = cljs.core.first(cljs.core.next(arglist__8849));
      var zs = cljs.core.rest(cljs.core.next(arglist__8849));
      return G__8848__delegate(x, y, zs)
    };
    G__8848.cljs$lang$arity$variadic = G__8848__delegate;
    return G__8848
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8850__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8850 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8850__delegate.call(this, a, b, c, d, more)
    };
    G__8850.cljs$lang$maxFixedArity = 4;
    G__8850.cljs$lang$applyTo = function(arglist__8851) {
      var a = cljs.core.first(arglist__8851);
      var b = cljs.core.first(cljs.core.next(arglist__8851));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8851)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8851))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8851))));
      return G__8850__delegate(a, b, c, d, more)
    };
    G__8850.cljs$lang$arity$variadic = G__8850__delegate;
    return G__8850
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8893 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8894 = cljs.core._first.call(null, args__8893);
    var args__8895 = cljs.core._rest.call(null, args__8893);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8894)
      }else {
        return f.call(null, a__8894)
      }
    }else {
      var b__8896 = cljs.core._first.call(null, args__8895);
      var args__8897 = cljs.core._rest.call(null, args__8895);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8894, b__8896)
        }else {
          return f.call(null, a__8894, b__8896)
        }
      }else {
        var c__8898 = cljs.core._first.call(null, args__8897);
        var args__8899 = cljs.core._rest.call(null, args__8897);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8894, b__8896, c__8898)
          }else {
            return f.call(null, a__8894, b__8896, c__8898)
          }
        }else {
          var d__8900 = cljs.core._first.call(null, args__8899);
          var args__8901 = cljs.core._rest.call(null, args__8899);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8894, b__8896, c__8898, d__8900)
            }else {
              return f.call(null, a__8894, b__8896, c__8898, d__8900)
            }
          }else {
            var e__8902 = cljs.core._first.call(null, args__8901);
            var args__8903 = cljs.core._rest.call(null, args__8901);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8894, b__8896, c__8898, d__8900, e__8902)
              }else {
                return f.call(null, a__8894, b__8896, c__8898, d__8900, e__8902)
              }
            }else {
              var f__8904 = cljs.core._first.call(null, args__8903);
              var args__8905 = cljs.core._rest.call(null, args__8903);
              if(argc === 6) {
                if(f__8904.cljs$lang$arity$6) {
                  return f__8904.cljs$lang$arity$6(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904)
                }else {
                  return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904)
                }
              }else {
                var g__8906 = cljs.core._first.call(null, args__8905);
                var args__8907 = cljs.core._rest.call(null, args__8905);
                if(argc === 7) {
                  if(f__8904.cljs$lang$arity$7) {
                    return f__8904.cljs$lang$arity$7(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906)
                  }else {
                    return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906)
                  }
                }else {
                  var h__8908 = cljs.core._first.call(null, args__8907);
                  var args__8909 = cljs.core._rest.call(null, args__8907);
                  if(argc === 8) {
                    if(f__8904.cljs$lang$arity$8) {
                      return f__8904.cljs$lang$arity$8(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908)
                    }else {
                      return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908)
                    }
                  }else {
                    var i__8910 = cljs.core._first.call(null, args__8909);
                    var args__8911 = cljs.core._rest.call(null, args__8909);
                    if(argc === 9) {
                      if(f__8904.cljs$lang$arity$9) {
                        return f__8904.cljs$lang$arity$9(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910)
                      }else {
                        return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910)
                      }
                    }else {
                      var j__8912 = cljs.core._first.call(null, args__8911);
                      var args__8913 = cljs.core._rest.call(null, args__8911);
                      if(argc === 10) {
                        if(f__8904.cljs$lang$arity$10) {
                          return f__8904.cljs$lang$arity$10(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912)
                        }else {
                          return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912)
                        }
                      }else {
                        var k__8914 = cljs.core._first.call(null, args__8913);
                        var args__8915 = cljs.core._rest.call(null, args__8913);
                        if(argc === 11) {
                          if(f__8904.cljs$lang$arity$11) {
                            return f__8904.cljs$lang$arity$11(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914)
                          }else {
                            return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914)
                          }
                        }else {
                          var l__8916 = cljs.core._first.call(null, args__8915);
                          var args__8917 = cljs.core._rest.call(null, args__8915);
                          if(argc === 12) {
                            if(f__8904.cljs$lang$arity$12) {
                              return f__8904.cljs$lang$arity$12(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916)
                            }else {
                              return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916)
                            }
                          }else {
                            var m__8918 = cljs.core._first.call(null, args__8917);
                            var args__8919 = cljs.core._rest.call(null, args__8917);
                            if(argc === 13) {
                              if(f__8904.cljs$lang$arity$13) {
                                return f__8904.cljs$lang$arity$13(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918)
                              }else {
                                return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918)
                              }
                            }else {
                              var n__8920 = cljs.core._first.call(null, args__8919);
                              var args__8921 = cljs.core._rest.call(null, args__8919);
                              if(argc === 14) {
                                if(f__8904.cljs$lang$arity$14) {
                                  return f__8904.cljs$lang$arity$14(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920)
                                }else {
                                  return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920)
                                }
                              }else {
                                var o__8922 = cljs.core._first.call(null, args__8921);
                                var args__8923 = cljs.core._rest.call(null, args__8921);
                                if(argc === 15) {
                                  if(f__8904.cljs$lang$arity$15) {
                                    return f__8904.cljs$lang$arity$15(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922)
                                  }else {
                                    return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922)
                                  }
                                }else {
                                  var p__8924 = cljs.core._first.call(null, args__8923);
                                  var args__8925 = cljs.core._rest.call(null, args__8923);
                                  if(argc === 16) {
                                    if(f__8904.cljs$lang$arity$16) {
                                      return f__8904.cljs$lang$arity$16(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924)
                                    }else {
                                      return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924)
                                    }
                                  }else {
                                    var q__8926 = cljs.core._first.call(null, args__8925);
                                    var args__8927 = cljs.core._rest.call(null, args__8925);
                                    if(argc === 17) {
                                      if(f__8904.cljs$lang$arity$17) {
                                        return f__8904.cljs$lang$arity$17(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924, q__8926)
                                      }else {
                                        return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924, q__8926)
                                      }
                                    }else {
                                      var r__8928 = cljs.core._first.call(null, args__8927);
                                      var args__8929 = cljs.core._rest.call(null, args__8927);
                                      if(argc === 18) {
                                        if(f__8904.cljs$lang$arity$18) {
                                          return f__8904.cljs$lang$arity$18(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924, q__8926, r__8928)
                                        }else {
                                          return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924, q__8926, r__8928)
                                        }
                                      }else {
                                        var s__8930 = cljs.core._first.call(null, args__8929);
                                        var args__8931 = cljs.core._rest.call(null, args__8929);
                                        if(argc === 19) {
                                          if(f__8904.cljs$lang$arity$19) {
                                            return f__8904.cljs$lang$arity$19(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924, q__8926, r__8928, s__8930)
                                          }else {
                                            return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924, q__8926, r__8928, s__8930)
                                          }
                                        }else {
                                          var t__8932 = cljs.core._first.call(null, args__8931);
                                          var args__8933 = cljs.core._rest.call(null, args__8931);
                                          if(argc === 20) {
                                            if(f__8904.cljs$lang$arity$20) {
                                              return f__8904.cljs$lang$arity$20(a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924, q__8926, r__8928, s__8930, t__8932)
                                            }else {
                                              return f__8904.call(null, a__8894, b__8896, c__8898, d__8900, e__8902, f__8904, g__8906, h__8908, i__8910, j__8912, k__8914, l__8916, m__8918, n__8920, o__8922, p__8924, q__8926, r__8928, s__8930, t__8932)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8948 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8949 = cljs.core.bounded_count.call(null, args, fixed_arity__8948 + 1);
      if(bc__8949 <= fixed_arity__8948) {
        return cljs.core.apply_to.call(null, f, bc__8949, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8950 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8951 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8952 = cljs.core.bounded_count.call(null, arglist__8950, fixed_arity__8951 + 1);
      if(bc__8952 <= fixed_arity__8951) {
        return cljs.core.apply_to.call(null, f, bc__8952, arglist__8950)
      }else {
        return f.cljs$lang$applyTo(arglist__8950)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8950))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8953 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8954 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8955 = cljs.core.bounded_count.call(null, arglist__8953, fixed_arity__8954 + 1);
      if(bc__8955 <= fixed_arity__8954) {
        return cljs.core.apply_to.call(null, f, bc__8955, arglist__8953)
      }else {
        return f.cljs$lang$applyTo(arglist__8953)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8953))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8956 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8957 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8958 = cljs.core.bounded_count.call(null, arglist__8956, fixed_arity__8957 + 1);
      if(bc__8958 <= fixed_arity__8957) {
        return cljs.core.apply_to.call(null, f, bc__8958, arglist__8956)
      }else {
        return f.cljs$lang$applyTo(arglist__8956)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8956))
    }
  };
  var apply__6 = function() {
    var G__8962__delegate = function(f, a, b, c, d, args) {
      var arglist__8959 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8960 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8961 = cljs.core.bounded_count.call(null, arglist__8959, fixed_arity__8960 + 1);
        if(bc__8961 <= fixed_arity__8960) {
          return cljs.core.apply_to.call(null, f, bc__8961, arglist__8959)
        }else {
          return f.cljs$lang$applyTo(arglist__8959)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8959))
      }
    };
    var G__8962 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8962__delegate.call(this, f, a, b, c, d, args)
    };
    G__8962.cljs$lang$maxFixedArity = 5;
    G__8962.cljs$lang$applyTo = function(arglist__8963) {
      var f = cljs.core.first(arglist__8963);
      var a = cljs.core.first(cljs.core.next(arglist__8963));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8963)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8963))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8963)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8963)))));
      return G__8962__delegate(f, a, b, c, d, args)
    };
    G__8962.cljs$lang$arity$variadic = G__8962__delegate;
    return G__8962
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8964) {
    var obj = cljs.core.first(arglist__8964);
    var f = cljs.core.first(cljs.core.next(arglist__8964));
    var args = cljs.core.rest(cljs.core.next(arglist__8964));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8965__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8965 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8965__delegate.call(this, x, y, more)
    };
    G__8965.cljs$lang$maxFixedArity = 2;
    G__8965.cljs$lang$applyTo = function(arglist__8966) {
      var x = cljs.core.first(arglist__8966);
      var y = cljs.core.first(cljs.core.next(arglist__8966));
      var more = cljs.core.rest(cljs.core.next(arglist__8966));
      return G__8965__delegate(x, y, more)
    };
    G__8965.cljs$lang$arity$variadic = G__8965__delegate;
    return G__8965
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8967 = pred;
        var G__8968 = cljs.core.next.call(null, coll);
        pred = G__8967;
        coll = G__8968;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____8970 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____8970)) {
        return or__3824__auto____8970
      }else {
        var G__8971 = pred;
        var G__8972 = cljs.core.next.call(null, coll);
        pred = G__8971;
        coll = G__8972;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8973 = null;
    var G__8973__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8973__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8973__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8973__3 = function() {
      var G__8974__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8974 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8974__delegate.call(this, x, y, zs)
      };
      G__8974.cljs$lang$maxFixedArity = 2;
      G__8974.cljs$lang$applyTo = function(arglist__8975) {
        var x = cljs.core.first(arglist__8975);
        var y = cljs.core.first(cljs.core.next(arglist__8975));
        var zs = cljs.core.rest(cljs.core.next(arglist__8975));
        return G__8974__delegate(x, y, zs)
      };
      G__8974.cljs$lang$arity$variadic = G__8974__delegate;
      return G__8974
    }();
    G__8973 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8973__0.call(this);
        case 1:
          return G__8973__1.call(this, x);
        case 2:
          return G__8973__2.call(this, x, y);
        default:
          return G__8973__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8973.cljs$lang$maxFixedArity = 2;
    G__8973.cljs$lang$applyTo = G__8973__3.cljs$lang$applyTo;
    return G__8973
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8976__delegate = function(args) {
      return x
    };
    var G__8976 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8976__delegate.call(this, args)
    };
    G__8976.cljs$lang$maxFixedArity = 0;
    G__8976.cljs$lang$applyTo = function(arglist__8977) {
      var args = cljs.core.seq(arglist__8977);
      return G__8976__delegate(args)
    };
    G__8976.cljs$lang$arity$variadic = G__8976__delegate;
    return G__8976
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8984 = null;
      var G__8984__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8984__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8984__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8984__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8984__4 = function() {
        var G__8985__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8985 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8985__delegate.call(this, x, y, z, args)
        };
        G__8985.cljs$lang$maxFixedArity = 3;
        G__8985.cljs$lang$applyTo = function(arglist__8986) {
          var x = cljs.core.first(arglist__8986);
          var y = cljs.core.first(cljs.core.next(arglist__8986));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8986)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8986)));
          return G__8985__delegate(x, y, z, args)
        };
        G__8985.cljs$lang$arity$variadic = G__8985__delegate;
        return G__8985
      }();
      G__8984 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8984__0.call(this);
          case 1:
            return G__8984__1.call(this, x);
          case 2:
            return G__8984__2.call(this, x, y);
          case 3:
            return G__8984__3.call(this, x, y, z);
          default:
            return G__8984__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8984.cljs$lang$maxFixedArity = 3;
      G__8984.cljs$lang$applyTo = G__8984__4.cljs$lang$applyTo;
      return G__8984
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8987 = null;
      var G__8987__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8987__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8987__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8987__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8987__4 = function() {
        var G__8988__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8988 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8988__delegate.call(this, x, y, z, args)
        };
        G__8988.cljs$lang$maxFixedArity = 3;
        G__8988.cljs$lang$applyTo = function(arglist__8989) {
          var x = cljs.core.first(arglist__8989);
          var y = cljs.core.first(cljs.core.next(arglist__8989));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8989)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8989)));
          return G__8988__delegate(x, y, z, args)
        };
        G__8988.cljs$lang$arity$variadic = G__8988__delegate;
        return G__8988
      }();
      G__8987 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8987__0.call(this);
          case 1:
            return G__8987__1.call(this, x);
          case 2:
            return G__8987__2.call(this, x, y);
          case 3:
            return G__8987__3.call(this, x, y, z);
          default:
            return G__8987__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8987.cljs$lang$maxFixedArity = 3;
      G__8987.cljs$lang$applyTo = G__8987__4.cljs$lang$applyTo;
      return G__8987
    }()
  };
  var comp__4 = function() {
    var G__8990__delegate = function(f1, f2, f3, fs) {
      var fs__8981 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8991__delegate = function(args) {
          var ret__8982 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8981), args);
          var fs__8983 = cljs.core.next.call(null, fs__8981);
          while(true) {
            if(fs__8983) {
              var G__8992 = cljs.core.first.call(null, fs__8983).call(null, ret__8982);
              var G__8993 = cljs.core.next.call(null, fs__8983);
              ret__8982 = G__8992;
              fs__8983 = G__8993;
              continue
            }else {
              return ret__8982
            }
            break
          }
        };
        var G__8991 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8991__delegate.call(this, args)
        };
        G__8991.cljs$lang$maxFixedArity = 0;
        G__8991.cljs$lang$applyTo = function(arglist__8994) {
          var args = cljs.core.seq(arglist__8994);
          return G__8991__delegate(args)
        };
        G__8991.cljs$lang$arity$variadic = G__8991__delegate;
        return G__8991
      }()
    };
    var G__8990 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8990__delegate.call(this, f1, f2, f3, fs)
    };
    G__8990.cljs$lang$maxFixedArity = 3;
    G__8990.cljs$lang$applyTo = function(arglist__8995) {
      var f1 = cljs.core.first(arglist__8995);
      var f2 = cljs.core.first(cljs.core.next(arglist__8995));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8995)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8995)));
      return G__8990__delegate(f1, f2, f3, fs)
    };
    G__8990.cljs$lang$arity$variadic = G__8990__delegate;
    return G__8990
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8996__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8996 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8996__delegate.call(this, args)
      };
      G__8996.cljs$lang$maxFixedArity = 0;
      G__8996.cljs$lang$applyTo = function(arglist__8997) {
        var args = cljs.core.seq(arglist__8997);
        return G__8996__delegate(args)
      };
      G__8996.cljs$lang$arity$variadic = G__8996__delegate;
      return G__8996
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8998__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8998 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8998__delegate.call(this, args)
      };
      G__8998.cljs$lang$maxFixedArity = 0;
      G__8998.cljs$lang$applyTo = function(arglist__8999) {
        var args = cljs.core.seq(arglist__8999);
        return G__8998__delegate(args)
      };
      G__8998.cljs$lang$arity$variadic = G__8998__delegate;
      return G__8998
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9000__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__9000 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9000__delegate.call(this, args)
      };
      G__9000.cljs$lang$maxFixedArity = 0;
      G__9000.cljs$lang$applyTo = function(arglist__9001) {
        var args = cljs.core.seq(arglist__9001);
        return G__9000__delegate(args)
      };
      G__9000.cljs$lang$arity$variadic = G__9000__delegate;
      return G__9000
    }()
  };
  var partial__5 = function() {
    var G__9002__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9003__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__9003 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9003__delegate.call(this, args)
        };
        G__9003.cljs$lang$maxFixedArity = 0;
        G__9003.cljs$lang$applyTo = function(arglist__9004) {
          var args = cljs.core.seq(arglist__9004);
          return G__9003__delegate(args)
        };
        G__9003.cljs$lang$arity$variadic = G__9003__delegate;
        return G__9003
      }()
    };
    var G__9002 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9002__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__9002.cljs$lang$maxFixedArity = 4;
    G__9002.cljs$lang$applyTo = function(arglist__9005) {
      var f = cljs.core.first(arglist__9005);
      var arg1 = cljs.core.first(cljs.core.next(arglist__9005));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9005)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9005))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9005))));
      return G__9002__delegate(f, arg1, arg2, arg3, more)
    };
    G__9002.cljs$lang$arity$variadic = G__9002__delegate;
    return G__9002
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9006 = null;
      var G__9006__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__9006__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__9006__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__9006__4 = function() {
        var G__9007__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__9007 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9007__delegate.call(this, a, b, c, ds)
        };
        G__9007.cljs$lang$maxFixedArity = 3;
        G__9007.cljs$lang$applyTo = function(arglist__9008) {
          var a = cljs.core.first(arglist__9008);
          var b = cljs.core.first(cljs.core.next(arglist__9008));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9008)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9008)));
          return G__9007__delegate(a, b, c, ds)
        };
        G__9007.cljs$lang$arity$variadic = G__9007__delegate;
        return G__9007
      }();
      G__9006 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9006__1.call(this, a);
          case 2:
            return G__9006__2.call(this, a, b);
          case 3:
            return G__9006__3.call(this, a, b, c);
          default:
            return G__9006__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9006.cljs$lang$maxFixedArity = 3;
      G__9006.cljs$lang$applyTo = G__9006__4.cljs$lang$applyTo;
      return G__9006
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9009 = null;
      var G__9009__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9009__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__9009__4 = function() {
        var G__9010__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__9010 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9010__delegate.call(this, a, b, c, ds)
        };
        G__9010.cljs$lang$maxFixedArity = 3;
        G__9010.cljs$lang$applyTo = function(arglist__9011) {
          var a = cljs.core.first(arglist__9011);
          var b = cljs.core.first(cljs.core.next(arglist__9011));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9011)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9011)));
          return G__9010__delegate(a, b, c, ds)
        };
        G__9010.cljs$lang$arity$variadic = G__9010__delegate;
        return G__9010
      }();
      G__9009 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9009__2.call(this, a, b);
          case 3:
            return G__9009__3.call(this, a, b, c);
          default:
            return G__9009__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9009.cljs$lang$maxFixedArity = 3;
      G__9009.cljs$lang$applyTo = G__9009__4.cljs$lang$applyTo;
      return G__9009
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9012 = null;
      var G__9012__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9012__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__9012__4 = function() {
        var G__9013__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__9013 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9013__delegate.call(this, a, b, c, ds)
        };
        G__9013.cljs$lang$maxFixedArity = 3;
        G__9013.cljs$lang$applyTo = function(arglist__9014) {
          var a = cljs.core.first(arglist__9014);
          var b = cljs.core.first(cljs.core.next(arglist__9014));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9014)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9014)));
          return G__9013__delegate(a, b, c, ds)
        };
        G__9013.cljs$lang$arity$variadic = G__9013__delegate;
        return G__9013
      }();
      G__9012 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9012__2.call(this, a, b);
          case 3:
            return G__9012__3.call(this, a, b, c);
          default:
            return G__9012__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9012.cljs$lang$maxFixedArity = 3;
      G__9012.cljs$lang$applyTo = G__9012__4.cljs$lang$applyTo;
      return G__9012
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__9030 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9038 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9038) {
        var s__9039 = temp__3974__auto____9038;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9039)) {
          var c__9040 = cljs.core.chunk_first.call(null, s__9039);
          var size__9041 = cljs.core.count.call(null, c__9040);
          var b__9042 = cljs.core.chunk_buffer.call(null, size__9041);
          var n__2527__auto____9043 = size__9041;
          var i__9044 = 0;
          while(true) {
            if(i__9044 < n__2527__auto____9043) {
              cljs.core.chunk_append.call(null, b__9042, f.call(null, idx + i__9044, cljs.core._nth.call(null, c__9040, i__9044)));
              var G__9045 = i__9044 + 1;
              i__9044 = G__9045;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9042), mapi.call(null, idx + size__9041, cljs.core.chunk_rest.call(null, s__9039)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__9039)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__9039)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__9030.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9055 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9055) {
      var s__9056 = temp__3974__auto____9055;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9056)) {
        var c__9057 = cljs.core.chunk_first.call(null, s__9056);
        var size__9058 = cljs.core.count.call(null, c__9057);
        var b__9059 = cljs.core.chunk_buffer.call(null, size__9058);
        var n__2527__auto____9060 = size__9058;
        var i__9061 = 0;
        while(true) {
          if(i__9061 < n__2527__auto____9060) {
            var x__9062 = f.call(null, cljs.core._nth.call(null, c__9057, i__9061));
            if(x__9062 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__9059, x__9062)
            }
            var G__9064 = i__9061 + 1;
            i__9061 = G__9064;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9059), keep.call(null, f, cljs.core.chunk_rest.call(null, s__9056)))
      }else {
        var x__9063 = f.call(null, cljs.core.first.call(null, s__9056));
        if(x__9063 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__9056))
        }else {
          return cljs.core.cons.call(null, x__9063, keep.call(null, f, cljs.core.rest.call(null, s__9056)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__9090 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9100 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9100) {
        var s__9101 = temp__3974__auto____9100;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9101)) {
          var c__9102 = cljs.core.chunk_first.call(null, s__9101);
          var size__9103 = cljs.core.count.call(null, c__9102);
          var b__9104 = cljs.core.chunk_buffer.call(null, size__9103);
          var n__2527__auto____9105 = size__9103;
          var i__9106 = 0;
          while(true) {
            if(i__9106 < n__2527__auto____9105) {
              var x__9107 = f.call(null, idx + i__9106, cljs.core._nth.call(null, c__9102, i__9106));
              if(x__9107 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__9104, x__9107)
              }
              var G__9109 = i__9106 + 1;
              i__9106 = G__9109;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9104), keepi.call(null, idx + size__9103, cljs.core.chunk_rest.call(null, s__9101)))
        }else {
          var x__9108 = f.call(null, idx, cljs.core.first.call(null, s__9101));
          if(x__9108 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9101))
          }else {
            return cljs.core.cons.call(null, x__9108, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9101)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__9090.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9195 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9195)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9195
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9196 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9196)) {
            var and__3822__auto____9197 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9197)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9197
            }
          }else {
            return and__3822__auto____9196
          }
        }())
      };
      var ep1__4 = function() {
        var G__9266__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9198 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9198)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9198
            }
          }())
        };
        var G__9266 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9266__delegate.call(this, x, y, z, args)
        };
        G__9266.cljs$lang$maxFixedArity = 3;
        G__9266.cljs$lang$applyTo = function(arglist__9267) {
          var x = cljs.core.first(arglist__9267);
          var y = cljs.core.first(cljs.core.next(arglist__9267));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9267)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9267)));
          return G__9266__delegate(x, y, z, args)
        };
        G__9266.cljs$lang$arity$variadic = G__9266__delegate;
        return G__9266
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9210 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9210)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9210
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9211 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9211)) {
            var and__3822__auto____9212 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9212)) {
              var and__3822__auto____9213 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9213)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9213
              }
            }else {
              return and__3822__auto____9212
            }
          }else {
            return and__3822__auto____9211
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9214 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9214)) {
            var and__3822__auto____9215 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9215)) {
              var and__3822__auto____9216 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9216)) {
                var and__3822__auto____9217 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9217)) {
                  var and__3822__auto____9218 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9218)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9218
                  }
                }else {
                  return and__3822__auto____9217
                }
              }else {
                return and__3822__auto____9216
              }
            }else {
              return and__3822__auto____9215
            }
          }else {
            return and__3822__auto____9214
          }
        }())
      };
      var ep2__4 = function() {
        var G__9268__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9219 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9219)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9065_SHARP_) {
                var and__3822__auto____9220 = p1.call(null, p1__9065_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9220)) {
                  return p2.call(null, p1__9065_SHARP_)
                }else {
                  return and__3822__auto____9220
                }
              }, args)
            }else {
              return and__3822__auto____9219
            }
          }())
        };
        var G__9268 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9268__delegate.call(this, x, y, z, args)
        };
        G__9268.cljs$lang$maxFixedArity = 3;
        G__9268.cljs$lang$applyTo = function(arglist__9269) {
          var x = cljs.core.first(arglist__9269);
          var y = cljs.core.first(cljs.core.next(arglist__9269));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9269)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9269)));
          return G__9268__delegate(x, y, z, args)
        };
        G__9268.cljs$lang$arity$variadic = G__9268__delegate;
        return G__9268
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9239 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9239)) {
            var and__3822__auto____9240 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9240)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9240
            }
          }else {
            return and__3822__auto____9239
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9241 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9241)) {
            var and__3822__auto____9242 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9242)) {
              var and__3822__auto____9243 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9243)) {
                var and__3822__auto____9244 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9244)) {
                  var and__3822__auto____9245 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9245)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9245
                  }
                }else {
                  return and__3822__auto____9244
                }
              }else {
                return and__3822__auto____9243
              }
            }else {
              return and__3822__auto____9242
            }
          }else {
            return and__3822__auto____9241
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9246 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9246)) {
            var and__3822__auto____9247 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9247)) {
              var and__3822__auto____9248 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9248)) {
                var and__3822__auto____9249 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9249)) {
                  var and__3822__auto____9250 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9250)) {
                    var and__3822__auto____9251 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9251)) {
                      var and__3822__auto____9252 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9252)) {
                        var and__3822__auto____9253 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9253)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9253
                        }
                      }else {
                        return and__3822__auto____9252
                      }
                    }else {
                      return and__3822__auto____9251
                    }
                  }else {
                    return and__3822__auto____9250
                  }
                }else {
                  return and__3822__auto____9249
                }
              }else {
                return and__3822__auto____9248
              }
            }else {
              return and__3822__auto____9247
            }
          }else {
            return and__3822__auto____9246
          }
        }())
      };
      var ep3__4 = function() {
        var G__9270__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9254 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9254)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9066_SHARP_) {
                var and__3822__auto____9255 = p1.call(null, p1__9066_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9255)) {
                  var and__3822__auto____9256 = p2.call(null, p1__9066_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9256)) {
                    return p3.call(null, p1__9066_SHARP_)
                  }else {
                    return and__3822__auto____9256
                  }
                }else {
                  return and__3822__auto____9255
                }
              }, args)
            }else {
              return and__3822__auto____9254
            }
          }())
        };
        var G__9270 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9270__delegate.call(this, x, y, z, args)
        };
        G__9270.cljs$lang$maxFixedArity = 3;
        G__9270.cljs$lang$applyTo = function(arglist__9271) {
          var x = cljs.core.first(arglist__9271);
          var y = cljs.core.first(cljs.core.next(arglist__9271));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9271)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9271)));
          return G__9270__delegate(x, y, z, args)
        };
        G__9270.cljs$lang$arity$variadic = G__9270__delegate;
        return G__9270
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9272__delegate = function(p1, p2, p3, ps) {
      var ps__9257 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__9067_SHARP_) {
            return p1__9067_SHARP_.call(null, x)
          }, ps__9257)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__9068_SHARP_) {
            var and__3822__auto____9262 = p1__9068_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9262)) {
              return p1__9068_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9262
            }
          }, ps__9257)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__9069_SHARP_) {
            var and__3822__auto____9263 = p1__9069_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9263)) {
              var and__3822__auto____9264 = p1__9069_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9264)) {
                return p1__9069_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9264
              }
            }else {
              return and__3822__auto____9263
            }
          }, ps__9257)
        };
        var epn__4 = function() {
          var G__9273__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9265 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9265)) {
                return cljs.core.every_QMARK_.call(null, function(p1__9070_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9070_SHARP_, args)
                }, ps__9257)
              }else {
                return and__3822__auto____9265
              }
            }())
          };
          var G__9273 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9273__delegate.call(this, x, y, z, args)
          };
          G__9273.cljs$lang$maxFixedArity = 3;
          G__9273.cljs$lang$applyTo = function(arglist__9274) {
            var x = cljs.core.first(arglist__9274);
            var y = cljs.core.first(cljs.core.next(arglist__9274));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9274)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9274)));
            return G__9273__delegate(x, y, z, args)
          };
          G__9273.cljs$lang$arity$variadic = G__9273__delegate;
          return G__9273
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9272 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9272__delegate.call(this, p1, p2, p3, ps)
    };
    G__9272.cljs$lang$maxFixedArity = 3;
    G__9272.cljs$lang$applyTo = function(arglist__9275) {
      var p1 = cljs.core.first(arglist__9275);
      var p2 = cljs.core.first(cljs.core.next(arglist__9275));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9275)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9275)));
      return G__9272__delegate(p1, p2, p3, ps)
    };
    G__9272.cljs$lang$arity$variadic = G__9272__delegate;
    return G__9272
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9356 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9356)) {
          return or__3824__auto____9356
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9357 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9357)) {
          return or__3824__auto____9357
        }else {
          var or__3824__auto____9358 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9358)) {
            return or__3824__auto____9358
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9427__delegate = function(x, y, z, args) {
          var or__3824__auto____9359 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9359)) {
            return or__3824__auto____9359
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9427 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9427__delegate.call(this, x, y, z, args)
        };
        G__9427.cljs$lang$maxFixedArity = 3;
        G__9427.cljs$lang$applyTo = function(arglist__9428) {
          var x = cljs.core.first(arglist__9428);
          var y = cljs.core.first(cljs.core.next(arglist__9428));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9428)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9428)));
          return G__9427__delegate(x, y, z, args)
        };
        G__9427.cljs$lang$arity$variadic = G__9427__delegate;
        return G__9427
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9371 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9371)) {
          return or__3824__auto____9371
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9372 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9372)) {
          return or__3824__auto____9372
        }else {
          var or__3824__auto____9373 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9373)) {
            return or__3824__auto____9373
          }else {
            var or__3824__auto____9374 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9374)) {
              return or__3824__auto____9374
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9375 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9375)) {
          return or__3824__auto____9375
        }else {
          var or__3824__auto____9376 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9376)) {
            return or__3824__auto____9376
          }else {
            var or__3824__auto____9377 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9377)) {
              return or__3824__auto____9377
            }else {
              var or__3824__auto____9378 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9378)) {
                return or__3824__auto____9378
              }else {
                var or__3824__auto____9379 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9379)) {
                  return or__3824__auto____9379
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9429__delegate = function(x, y, z, args) {
          var or__3824__auto____9380 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9380)) {
            return or__3824__auto____9380
          }else {
            return cljs.core.some.call(null, function(p1__9110_SHARP_) {
              var or__3824__auto____9381 = p1.call(null, p1__9110_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9381)) {
                return or__3824__auto____9381
              }else {
                return p2.call(null, p1__9110_SHARP_)
              }
            }, args)
          }
        };
        var G__9429 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9429__delegate.call(this, x, y, z, args)
        };
        G__9429.cljs$lang$maxFixedArity = 3;
        G__9429.cljs$lang$applyTo = function(arglist__9430) {
          var x = cljs.core.first(arglist__9430);
          var y = cljs.core.first(cljs.core.next(arglist__9430));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9430)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9430)));
          return G__9429__delegate(x, y, z, args)
        };
        G__9429.cljs$lang$arity$variadic = G__9429__delegate;
        return G__9429
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9400 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9400)) {
          return or__3824__auto____9400
        }else {
          var or__3824__auto____9401 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9401)) {
            return or__3824__auto____9401
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9402 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9402)) {
          return or__3824__auto____9402
        }else {
          var or__3824__auto____9403 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9403)) {
            return or__3824__auto____9403
          }else {
            var or__3824__auto____9404 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9404)) {
              return or__3824__auto____9404
            }else {
              var or__3824__auto____9405 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9405)) {
                return or__3824__auto____9405
              }else {
                var or__3824__auto____9406 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9406)) {
                  return or__3824__auto____9406
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9407 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9407)) {
          return or__3824__auto____9407
        }else {
          var or__3824__auto____9408 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9408)) {
            return or__3824__auto____9408
          }else {
            var or__3824__auto____9409 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9409)) {
              return or__3824__auto____9409
            }else {
              var or__3824__auto____9410 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9410)) {
                return or__3824__auto____9410
              }else {
                var or__3824__auto____9411 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9411)) {
                  return or__3824__auto____9411
                }else {
                  var or__3824__auto____9412 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9412)) {
                    return or__3824__auto____9412
                  }else {
                    var or__3824__auto____9413 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9413)) {
                      return or__3824__auto____9413
                    }else {
                      var or__3824__auto____9414 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9414)) {
                        return or__3824__auto____9414
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9431__delegate = function(x, y, z, args) {
          var or__3824__auto____9415 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9415)) {
            return or__3824__auto____9415
          }else {
            return cljs.core.some.call(null, function(p1__9111_SHARP_) {
              var or__3824__auto____9416 = p1.call(null, p1__9111_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9416)) {
                return or__3824__auto____9416
              }else {
                var or__3824__auto____9417 = p2.call(null, p1__9111_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9417)) {
                  return or__3824__auto____9417
                }else {
                  return p3.call(null, p1__9111_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9431 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9431__delegate.call(this, x, y, z, args)
        };
        G__9431.cljs$lang$maxFixedArity = 3;
        G__9431.cljs$lang$applyTo = function(arglist__9432) {
          var x = cljs.core.first(arglist__9432);
          var y = cljs.core.first(cljs.core.next(arglist__9432));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9432)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9432)));
          return G__9431__delegate(x, y, z, args)
        };
        G__9431.cljs$lang$arity$variadic = G__9431__delegate;
        return G__9431
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9433__delegate = function(p1, p2, p3, ps) {
      var ps__9418 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9112_SHARP_) {
            return p1__9112_SHARP_.call(null, x)
          }, ps__9418)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9113_SHARP_) {
            var or__3824__auto____9423 = p1__9113_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9423)) {
              return or__3824__auto____9423
            }else {
              return p1__9113_SHARP_.call(null, y)
            }
          }, ps__9418)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9114_SHARP_) {
            var or__3824__auto____9424 = p1__9114_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9424)) {
              return or__3824__auto____9424
            }else {
              var or__3824__auto____9425 = p1__9114_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9425)) {
                return or__3824__auto____9425
              }else {
                return p1__9114_SHARP_.call(null, z)
              }
            }
          }, ps__9418)
        };
        var spn__4 = function() {
          var G__9434__delegate = function(x, y, z, args) {
            var or__3824__auto____9426 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9426)) {
              return or__3824__auto____9426
            }else {
              return cljs.core.some.call(null, function(p1__9115_SHARP_) {
                return cljs.core.some.call(null, p1__9115_SHARP_, args)
              }, ps__9418)
            }
          };
          var G__9434 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9434__delegate.call(this, x, y, z, args)
          };
          G__9434.cljs$lang$maxFixedArity = 3;
          G__9434.cljs$lang$applyTo = function(arglist__9435) {
            var x = cljs.core.first(arglist__9435);
            var y = cljs.core.first(cljs.core.next(arglist__9435));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9435)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9435)));
            return G__9434__delegate(x, y, z, args)
          };
          G__9434.cljs$lang$arity$variadic = G__9434__delegate;
          return G__9434
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9433 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9433__delegate.call(this, p1, p2, p3, ps)
    };
    G__9433.cljs$lang$maxFixedArity = 3;
    G__9433.cljs$lang$applyTo = function(arglist__9436) {
      var p1 = cljs.core.first(arglist__9436);
      var p2 = cljs.core.first(cljs.core.next(arglist__9436));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9436)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9436)));
      return G__9433__delegate(p1, p2, p3, ps)
    };
    G__9433.cljs$lang$arity$variadic = G__9433__delegate;
    return G__9433
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9455 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9455) {
        var s__9456 = temp__3974__auto____9455;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9456)) {
          var c__9457 = cljs.core.chunk_first.call(null, s__9456);
          var size__9458 = cljs.core.count.call(null, c__9457);
          var b__9459 = cljs.core.chunk_buffer.call(null, size__9458);
          var n__2527__auto____9460 = size__9458;
          var i__9461 = 0;
          while(true) {
            if(i__9461 < n__2527__auto____9460) {
              cljs.core.chunk_append.call(null, b__9459, f.call(null, cljs.core._nth.call(null, c__9457, i__9461)));
              var G__9473 = i__9461 + 1;
              i__9461 = G__9473;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9459), map.call(null, f, cljs.core.chunk_rest.call(null, s__9456)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9456)), map.call(null, f, cljs.core.rest.call(null, s__9456)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9462 = cljs.core.seq.call(null, c1);
      var s2__9463 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9464 = s1__9462;
        if(and__3822__auto____9464) {
          return s2__9463
        }else {
          return and__3822__auto____9464
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9462), cljs.core.first.call(null, s2__9463)), map.call(null, f, cljs.core.rest.call(null, s1__9462), cljs.core.rest.call(null, s2__9463)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9465 = cljs.core.seq.call(null, c1);
      var s2__9466 = cljs.core.seq.call(null, c2);
      var s3__9467 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9468 = s1__9465;
        if(and__3822__auto____9468) {
          var and__3822__auto____9469 = s2__9466;
          if(and__3822__auto____9469) {
            return s3__9467
          }else {
            return and__3822__auto____9469
          }
        }else {
          return and__3822__auto____9468
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9465), cljs.core.first.call(null, s2__9466), cljs.core.first.call(null, s3__9467)), map.call(null, f, cljs.core.rest.call(null, s1__9465), cljs.core.rest.call(null, s2__9466), cljs.core.rest.call(null, s3__9467)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9474__delegate = function(f, c1, c2, c3, colls) {
      var step__9472 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9471 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9471)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9471), step.call(null, map.call(null, cljs.core.rest, ss__9471)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9276_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9276_SHARP_)
      }, step__9472.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9474 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9474__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9474.cljs$lang$maxFixedArity = 4;
    G__9474.cljs$lang$applyTo = function(arglist__9475) {
      var f = cljs.core.first(arglist__9475);
      var c1 = cljs.core.first(cljs.core.next(arglist__9475));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9475)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9475))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9475))));
      return G__9474__delegate(f, c1, c2, c3, colls)
    };
    G__9474.cljs$lang$arity$variadic = G__9474__delegate;
    return G__9474
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9478 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9478) {
        var s__9479 = temp__3974__auto____9478;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9479), take.call(null, n - 1, cljs.core.rest.call(null, s__9479)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9485 = function(n, coll) {
    while(true) {
      var s__9483 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9484 = n > 0;
        if(and__3822__auto____9484) {
          return s__9483
        }else {
          return and__3822__auto____9484
        }
      }())) {
        var G__9486 = n - 1;
        var G__9487 = cljs.core.rest.call(null, s__9483);
        n = G__9486;
        coll = G__9487;
        continue
      }else {
        return s__9483
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9485.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9490 = cljs.core.seq.call(null, coll);
  var lead__9491 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9491) {
      var G__9492 = cljs.core.next.call(null, s__9490);
      var G__9493 = cljs.core.next.call(null, lead__9491);
      s__9490 = G__9492;
      lead__9491 = G__9493;
      continue
    }else {
      return s__9490
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9499 = function(pred, coll) {
    while(true) {
      var s__9497 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9498 = s__9497;
        if(and__3822__auto____9498) {
          return pred.call(null, cljs.core.first.call(null, s__9497))
        }else {
          return and__3822__auto____9498
        }
      }())) {
        var G__9500 = pred;
        var G__9501 = cljs.core.rest.call(null, s__9497);
        pred = G__9500;
        coll = G__9501;
        continue
      }else {
        return s__9497
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9499.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9504 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9504) {
      var s__9505 = temp__3974__auto____9504;
      return cljs.core.concat.call(null, s__9505, cycle.call(null, s__9505))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9510 = cljs.core.seq.call(null, c1);
      var s2__9511 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9512 = s1__9510;
        if(and__3822__auto____9512) {
          return s2__9511
        }else {
          return and__3822__auto____9512
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9510), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9511), interleave.call(null, cljs.core.rest.call(null, s1__9510), cljs.core.rest.call(null, s2__9511))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9514__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9513 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9513)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9513), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9513)))
        }else {
          return null
        }
      }, null)
    };
    var G__9514 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9514__delegate.call(this, c1, c2, colls)
    };
    G__9514.cljs$lang$maxFixedArity = 2;
    G__9514.cljs$lang$applyTo = function(arglist__9515) {
      var c1 = cljs.core.first(arglist__9515);
      var c2 = cljs.core.first(cljs.core.next(arglist__9515));
      var colls = cljs.core.rest(cljs.core.next(arglist__9515));
      return G__9514__delegate(c1, c2, colls)
    };
    G__9514.cljs$lang$arity$variadic = G__9514__delegate;
    return G__9514
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9525 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9523 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9523) {
        var coll__9524 = temp__3971__auto____9523;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9524), cat.call(null, cljs.core.rest.call(null, coll__9524), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9525.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9526__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9526 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9526__delegate.call(this, f, coll, colls)
    };
    G__9526.cljs$lang$maxFixedArity = 2;
    G__9526.cljs$lang$applyTo = function(arglist__9527) {
      var f = cljs.core.first(arglist__9527);
      var coll = cljs.core.first(cljs.core.next(arglist__9527));
      var colls = cljs.core.rest(cljs.core.next(arglist__9527));
      return G__9526__delegate(f, coll, colls)
    };
    G__9526.cljs$lang$arity$variadic = G__9526__delegate;
    return G__9526
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9537 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9537) {
      var s__9538 = temp__3974__auto____9537;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9538)) {
        var c__9539 = cljs.core.chunk_first.call(null, s__9538);
        var size__9540 = cljs.core.count.call(null, c__9539);
        var b__9541 = cljs.core.chunk_buffer.call(null, size__9540);
        var n__2527__auto____9542 = size__9540;
        var i__9543 = 0;
        while(true) {
          if(i__9543 < n__2527__auto____9542) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9539, i__9543)))) {
              cljs.core.chunk_append.call(null, b__9541, cljs.core._nth.call(null, c__9539, i__9543))
            }else {
            }
            var G__9546 = i__9543 + 1;
            i__9543 = G__9546;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9541), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9538)))
      }else {
        var f__9544 = cljs.core.first.call(null, s__9538);
        var r__9545 = cljs.core.rest.call(null, s__9538);
        if(cljs.core.truth_(pred.call(null, f__9544))) {
          return cljs.core.cons.call(null, f__9544, filter.call(null, pred, r__9545))
        }else {
          return filter.call(null, pred, r__9545)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9549 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9549.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9547_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9547_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9553__9554 = to;
    if(G__9553__9554) {
      if(function() {
        var or__3824__auto____9555 = G__9553__9554.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____9555) {
          return or__3824__auto____9555
        }else {
          return G__9553__9554.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9553__9554.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9553__9554)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9553__9554)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9556__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9556 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9556__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9556.cljs$lang$maxFixedArity = 4;
    G__9556.cljs$lang$applyTo = function(arglist__9557) {
      var f = cljs.core.first(arglist__9557);
      var c1 = cljs.core.first(cljs.core.next(arglist__9557));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9557)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9557))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9557))));
      return G__9556__delegate(f, c1, c2, c3, colls)
    };
    G__9556.cljs$lang$arity$variadic = G__9556__delegate;
    return G__9556
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9564 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9564) {
        var s__9565 = temp__3974__auto____9564;
        var p__9566 = cljs.core.take.call(null, n, s__9565);
        if(n === cljs.core.count.call(null, p__9566)) {
          return cljs.core.cons.call(null, p__9566, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9565)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9567 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9567) {
        var s__9568 = temp__3974__auto____9567;
        var p__9569 = cljs.core.take.call(null, n, s__9568);
        if(n === cljs.core.count.call(null, p__9569)) {
          return cljs.core.cons.call(null, p__9569, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9568)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9569, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9574 = cljs.core.lookup_sentinel;
    var m__9575 = m;
    var ks__9576 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9576) {
        var m__9577 = cljs.core._lookup.call(null, m__9575, cljs.core.first.call(null, ks__9576), sentinel__9574);
        if(sentinel__9574 === m__9577) {
          return not_found
        }else {
          var G__9578 = sentinel__9574;
          var G__9579 = m__9577;
          var G__9580 = cljs.core.next.call(null, ks__9576);
          sentinel__9574 = G__9578;
          m__9575 = G__9579;
          ks__9576 = G__9580;
          continue
        }
      }else {
        return m__9575
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9581, v) {
  var vec__9586__9587 = p__9581;
  var k__9588 = cljs.core.nth.call(null, vec__9586__9587, 0, null);
  var ks__9589 = cljs.core.nthnext.call(null, vec__9586__9587, 1);
  if(cljs.core.truth_(ks__9589)) {
    return cljs.core.assoc.call(null, m, k__9588, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9588, null), ks__9589, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9588, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9590, f, args) {
    var vec__9595__9596 = p__9590;
    var k__9597 = cljs.core.nth.call(null, vec__9595__9596, 0, null);
    var ks__9598 = cljs.core.nthnext.call(null, vec__9595__9596, 1);
    if(cljs.core.truth_(ks__9598)) {
      return cljs.core.assoc.call(null, m, k__9597, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9597, null), ks__9598, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9597, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9597, null), args))
    }
  };
  var update_in = function(m, p__9590, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9590, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9599) {
    var m = cljs.core.first(arglist__9599);
    var p__9590 = cljs.core.first(cljs.core.next(arglist__9599));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9599)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9599)));
    return update_in__delegate(m, p__9590, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9602 = this;
  var h__2192__auto____9603 = this__9602.__hash;
  if(!(h__2192__auto____9603 == null)) {
    return h__2192__auto____9603
  }else {
    var h__2192__auto____9604 = cljs.core.hash_coll.call(null, coll);
    this__9602.__hash = h__2192__auto____9604;
    return h__2192__auto____9604
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9605 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9606 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9607 = this;
  var new_array__9608 = this__9607.array.slice();
  new_array__9608[k] = v;
  return new cljs.core.Vector(this__9607.meta, new_array__9608, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9639 = null;
  var G__9639__2 = function(this_sym9609, k) {
    var this__9611 = this;
    var this_sym9609__9612 = this;
    var coll__9613 = this_sym9609__9612;
    return coll__9613.cljs$core$ILookup$_lookup$arity$2(coll__9613, k)
  };
  var G__9639__3 = function(this_sym9610, k, not_found) {
    var this__9611 = this;
    var this_sym9610__9614 = this;
    var coll__9615 = this_sym9610__9614;
    return coll__9615.cljs$core$ILookup$_lookup$arity$3(coll__9615, k, not_found)
  };
  G__9639 = function(this_sym9610, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9639__2.call(this, this_sym9610, k);
      case 3:
        return G__9639__3.call(this, this_sym9610, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9639
}();
cljs.core.Vector.prototype.apply = function(this_sym9600, args9601) {
  var this__9616 = this;
  return this_sym9600.call.apply(this_sym9600, [this_sym9600].concat(args9601.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9617 = this;
  var new_array__9618 = this__9617.array.slice();
  new_array__9618.push(o);
  return new cljs.core.Vector(this__9617.meta, new_array__9618, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9619 = this;
  var this__9620 = this;
  return cljs.core.pr_str.call(null, this__9620)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9621 = this;
  return cljs.core.ci_reduce.call(null, this__9621.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9622 = this;
  return cljs.core.ci_reduce.call(null, this__9622.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9623 = this;
  if(this__9623.array.length > 0) {
    var vector_seq__9624 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9623.array.length) {
          return cljs.core.cons.call(null, this__9623.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9624.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9625 = this;
  return this__9625.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9626 = this;
  var count__9627 = this__9626.array.length;
  if(count__9627 > 0) {
    return this__9626.array[count__9627 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9628 = this;
  if(this__9628.array.length > 0) {
    var new_array__9629 = this__9628.array.slice();
    new_array__9629.pop();
    return new cljs.core.Vector(this__9628.meta, new_array__9629, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9630 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9631 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9632 = this;
  return new cljs.core.Vector(meta, this__9632.array, this__9632.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9633 = this;
  return this__9633.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9634 = this;
  if(function() {
    var and__3822__auto____9635 = 0 <= n;
    if(and__3822__auto____9635) {
      return n < this__9634.array.length
    }else {
      return and__3822__auto____9635
    }
  }()) {
    return this__9634.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9636 = this;
  if(function() {
    var and__3822__auto____9637 = 0 <= n;
    if(and__3822__auto____9637) {
      return n < this__9636.array.length
    }else {
      return and__3822__auto____9637
    }
  }()) {
    return this__9636.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9638 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9638.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9641 = pv.cnt;
  if(cnt__9641 < 32) {
    return 0
  }else {
    return cnt__9641 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9647 = level;
  var ret__9648 = node;
  while(true) {
    if(ll__9647 === 0) {
      return ret__9648
    }else {
      var embed__9649 = ret__9648;
      var r__9650 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9651 = cljs.core.pv_aset.call(null, r__9650, 0, embed__9649);
      var G__9652 = ll__9647 - 5;
      var G__9653 = r__9650;
      ll__9647 = G__9652;
      ret__9648 = G__9653;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9659 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9660 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9659, subidx__9660, tailnode);
    return ret__9659
  }else {
    var child__9661 = cljs.core.pv_aget.call(null, parent, subidx__9660);
    if(!(child__9661 == null)) {
      var node_to_insert__9662 = push_tail.call(null, pv, level - 5, child__9661, tailnode);
      cljs.core.pv_aset.call(null, ret__9659, subidx__9660, node_to_insert__9662);
      return ret__9659
    }else {
      var node_to_insert__9663 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9659, subidx__9660, node_to_insert__9663);
      return ret__9659
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9667 = 0 <= i;
    if(and__3822__auto____9667) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9667
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9668 = pv.root;
      var level__9669 = pv.shift;
      while(true) {
        if(level__9669 > 0) {
          var G__9670 = cljs.core.pv_aget.call(null, node__9668, i >>> level__9669 & 31);
          var G__9671 = level__9669 - 5;
          node__9668 = G__9670;
          level__9669 = G__9671;
          continue
        }else {
          return node__9668.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9674 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9674, i & 31, val);
    return ret__9674
  }else {
    var subidx__9675 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9674, subidx__9675, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9675), i, val));
    return ret__9674
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9681 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9682 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9681));
    if(function() {
      var and__3822__auto____9683 = new_child__9682 == null;
      if(and__3822__auto____9683) {
        return subidx__9681 === 0
      }else {
        return and__3822__auto____9683
      }
    }()) {
      return null
    }else {
      var ret__9684 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9684, subidx__9681, new_child__9682);
      return ret__9684
    }
  }else {
    if(subidx__9681 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9685 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9685, subidx__9681, null);
        return ret__9685
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9688 = this;
  return new cljs.core.TransientVector(this__9688.cnt, this__9688.shift, cljs.core.tv_editable_root.call(null, this__9688.root), cljs.core.tv_editable_tail.call(null, this__9688.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9689 = this;
  var h__2192__auto____9690 = this__9689.__hash;
  if(!(h__2192__auto____9690 == null)) {
    return h__2192__auto____9690
  }else {
    var h__2192__auto____9691 = cljs.core.hash_coll.call(null, coll);
    this__9689.__hash = h__2192__auto____9691;
    return h__2192__auto____9691
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9692 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9693 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9694 = this;
  if(function() {
    var and__3822__auto____9695 = 0 <= k;
    if(and__3822__auto____9695) {
      return k < this__9694.cnt
    }else {
      return and__3822__auto____9695
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9696 = this__9694.tail.slice();
      new_tail__9696[k & 31] = v;
      return new cljs.core.PersistentVector(this__9694.meta, this__9694.cnt, this__9694.shift, this__9694.root, new_tail__9696, null)
    }else {
      return new cljs.core.PersistentVector(this__9694.meta, this__9694.cnt, this__9694.shift, cljs.core.do_assoc.call(null, coll, this__9694.shift, this__9694.root, k, v), this__9694.tail, null)
    }
  }else {
    if(k === this__9694.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9694.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9744 = null;
  var G__9744__2 = function(this_sym9697, k) {
    var this__9699 = this;
    var this_sym9697__9700 = this;
    var coll__9701 = this_sym9697__9700;
    return coll__9701.cljs$core$ILookup$_lookup$arity$2(coll__9701, k)
  };
  var G__9744__3 = function(this_sym9698, k, not_found) {
    var this__9699 = this;
    var this_sym9698__9702 = this;
    var coll__9703 = this_sym9698__9702;
    return coll__9703.cljs$core$ILookup$_lookup$arity$3(coll__9703, k, not_found)
  };
  G__9744 = function(this_sym9698, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9744__2.call(this, this_sym9698, k);
      case 3:
        return G__9744__3.call(this, this_sym9698, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9744
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9686, args9687) {
  var this__9704 = this;
  return this_sym9686.call.apply(this_sym9686, [this_sym9686].concat(args9687.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9705 = this;
  var step_init__9706 = [0, init];
  var i__9707 = 0;
  while(true) {
    if(i__9707 < this__9705.cnt) {
      var arr__9708 = cljs.core.array_for.call(null, v, i__9707);
      var len__9709 = arr__9708.length;
      var init__9713 = function() {
        var j__9710 = 0;
        var init__9711 = step_init__9706[1];
        while(true) {
          if(j__9710 < len__9709) {
            var init__9712 = f.call(null, init__9711, j__9710 + i__9707, arr__9708[j__9710]);
            if(cljs.core.reduced_QMARK_.call(null, init__9712)) {
              return init__9712
            }else {
              var G__9745 = j__9710 + 1;
              var G__9746 = init__9712;
              j__9710 = G__9745;
              init__9711 = G__9746;
              continue
            }
          }else {
            step_init__9706[0] = len__9709;
            step_init__9706[1] = init__9711;
            return init__9711
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9713)) {
        return cljs.core.deref.call(null, init__9713)
      }else {
        var G__9747 = i__9707 + step_init__9706[0];
        i__9707 = G__9747;
        continue
      }
    }else {
      return step_init__9706[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9714 = this;
  if(this__9714.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9715 = this__9714.tail.slice();
    new_tail__9715.push(o);
    return new cljs.core.PersistentVector(this__9714.meta, this__9714.cnt + 1, this__9714.shift, this__9714.root, new_tail__9715, null)
  }else {
    var root_overflow_QMARK___9716 = this__9714.cnt >>> 5 > 1 << this__9714.shift;
    var new_shift__9717 = root_overflow_QMARK___9716 ? this__9714.shift + 5 : this__9714.shift;
    var new_root__9719 = root_overflow_QMARK___9716 ? function() {
      var n_r__9718 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9718, 0, this__9714.root);
      cljs.core.pv_aset.call(null, n_r__9718, 1, cljs.core.new_path.call(null, null, this__9714.shift, new cljs.core.VectorNode(null, this__9714.tail)));
      return n_r__9718
    }() : cljs.core.push_tail.call(null, coll, this__9714.shift, this__9714.root, new cljs.core.VectorNode(null, this__9714.tail));
    return new cljs.core.PersistentVector(this__9714.meta, this__9714.cnt + 1, new_shift__9717, new_root__9719, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9720 = this;
  if(this__9720.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9720.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9721 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9722 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9723 = this;
  var this__9724 = this;
  return cljs.core.pr_str.call(null, this__9724)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9725 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9726 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9727 = this;
  if(this__9727.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9728 = this;
  return this__9728.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9729 = this;
  if(this__9729.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9729.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9730 = this;
  if(this__9730.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9730.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9730.meta)
    }else {
      if(1 < this__9730.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9730.meta, this__9730.cnt - 1, this__9730.shift, this__9730.root, this__9730.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9731 = cljs.core.array_for.call(null, coll, this__9730.cnt - 2);
          var nr__9732 = cljs.core.pop_tail.call(null, coll, this__9730.shift, this__9730.root);
          var new_root__9733 = nr__9732 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9732;
          var cnt_1__9734 = this__9730.cnt - 1;
          if(function() {
            var and__3822__auto____9735 = 5 < this__9730.shift;
            if(and__3822__auto____9735) {
              return cljs.core.pv_aget.call(null, new_root__9733, 1) == null
            }else {
              return and__3822__auto____9735
            }
          }()) {
            return new cljs.core.PersistentVector(this__9730.meta, cnt_1__9734, this__9730.shift - 5, cljs.core.pv_aget.call(null, new_root__9733, 0), new_tail__9731, null)
          }else {
            return new cljs.core.PersistentVector(this__9730.meta, cnt_1__9734, this__9730.shift, new_root__9733, new_tail__9731, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9736 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9737 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9738 = this;
  return new cljs.core.PersistentVector(meta, this__9738.cnt, this__9738.shift, this__9738.root, this__9738.tail, this__9738.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9739 = this;
  return this__9739.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9740 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9741 = this;
  if(function() {
    var and__3822__auto____9742 = 0 <= n;
    if(and__3822__auto____9742) {
      return n < this__9741.cnt
    }else {
      return and__3822__auto____9742
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9743 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9743.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9748 = xs.length;
  var xs__9749 = no_clone === true ? xs : xs.slice();
  if(l__9748 < 32) {
    return new cljs.core.PersistentVector(null, l__9748, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9749, null)
  }else {
    var node__9750 = xs__9749.slice(0, 32);
    var v__9751 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9750, null);
    var i__9752 = 32;
    var out__9753 = cljs.core._as_transient.call(null, v__9751);
    while(true) {
      if(i__9752 < l__9748) {
        var G__9754 = i__9752 + 1;
        var G__9755 = cljs.core.conj_BANG_.call(null, out__9753, xs__9749[i__9752]);
        i__9752 = G__9754;
        out__9753 = G__9755;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9753)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9756) {
    var args = cljs.core.seq(arglist__9756);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9757 = this;
  if(this__9757.off + 1 < this__9757.node.length) {
    var s__9758 = cljs.core.chunked_seq.call(null, this__9757.vec, this__9757.node, this__9757.i, this__9757.off + 1);
    if(s__9758 == null) {
      return null
    }else {
      return s__9758
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9759 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9760 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9761 = this;
  return this__9761.node[this__9761.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9762 = this;
  if(this__9762.off + 1 < this__9762.node.length) {
    var s__9763 = cljs.core.chunked_seq.call(null, this__9762.vec, this__9762.node, this__9762.i, this__9762.off + 1);
    if(s__9763 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9763
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9764 = this;
  var l__9765 = this__9764.node.length;
  var s__9766 = this__9764.i + l__9765 < cljs.core._count.call(null, this__9764.vec) ? cljs.core.chunked_seq.call(null, this__9764.vec, this__9764.i + l__9765, 0) : null;
  if(s__9766 == null) {
    return null
  }else {
    return s__9766
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9767 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9768 = this;
  return cljs.core.chunked_seq.call(null, this__9768.vec, this__9768.node, this__9768.i, this__9768.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9769 = this;
  return this__9769.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9770 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9770.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9771 = this;
  return cljs.core.array_chunk.call(null, this__9771.node, this__9771.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9772 = this;
  var l__9773 = this__9772.node.length;
  var s__9774 = this__9772.i + l__9773 < cljs.core._count.call(null, this__9772.vec) ? cljs.core.chunked_seq.call(null, this__9772.vec, this__9772.i + l__9773, 0) : null;
  if(s__9774 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9774
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9777 = this;
  var h__2192__auto____9778 = this__9777.__hash;
  if(!(h__2192__auto____9778 == null)) {
    return h__2192__auto____9778
  }else {
    var h__2192__auto____9779 = cljs.core.hash_coll.call(null, coll);
    this__9777.__hash = h__2192__auto____9779;
    return h__2192__auto____9779
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9780 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9781 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9782 = this;
  var v_pos__9783 = this__9782.start + key;
  return new cljs.core.Subvec(this__9782.meta, cljs.core._assoc.call(null, this__9782.v, v_pos__9783, val), this__9782.start, this__9782.end > v_pos__9783 + 1 ? this__9782.end : v_pos__9783 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9809 = null;
  var G__9809__2 = function(this_sym9784, k) {
    var this__9786 = this;
    var this_sym9784__9787 = this;
    var coll__9788 = this_sym9784__9787;
    return coll__9788.cljs$core$ILookup$_lookup$arity$2(coll__9788, k)
  };
  var G__9809__3 = function(this_sym9785, k, not_found) {
    var this__9786 = this;
    var this_sym9785__9789 = this;
    var coll__9790 = this_sym9785__9789;
    return coll__9790.cljs$core$ILookup$_lookup$arity$3(coll__9790, k, not_found)
  };
  G__9809 = function(this_sym9785, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9809__2.call(this, this_sym9785, k);
      case 3:
        return G__9809__3.call(this, this_sym9785, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9809
}();
cljs.core.Subvec.prototype.apply = function(this_sym9775, args9776) {
  var this__9791 = this;
  return this_sym9775.call.apply(this_sym9775, [this_sym9775].concat(args9776.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9792 = this;
  return new cljs.core.Subvec(this__9792.meta, cljs.core._assoc_n.call(null, this__9792.v, this__9792.end, o), this__9792.start, this__9792.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9793 = this;
  var this__9794 = this;
  return cljs.core.pr_str.call(null, this__9794)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9795 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9796 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9797 = this;
  var subvec_seq__9798 = function subvec_seq(i) {
    if(i === this__9797.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9797.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9798.call(null, this__9797.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9799 = this;
  return this__9799.end - this__9799.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9800 = this;
  return cljs.core._nth.call(null, this__9800.v, this__9800.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9801 = this;
  if(this__9801.start === this__9801.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9801.meta, this__9801.v, this__9801.start, this__9801.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9802 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9803 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9804 = this;
  return new cljs.core.Subvec(meta, this__9804.v, this__9804.start, this__9804.end, this__9804.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9805 = this;
  return this__9805.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9806 = this;
  return cljs.core._nth.call(null, this__9806.v, this__9806.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9807 = this;
  return cljs.core._nth.call(null, this__9807.v, this__9807.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9808 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9808.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9811 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9811, 0, tl.length);
  return ret__9811
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9815 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9816 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9815, subidx__9816, level === 5 ? tail_node : function() {
    var child__9817 = cljs.core.pv_aget.call(null, ret__9815, subidx__9816);
    if(!(child__9817 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9817, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9815
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9822 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9823 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9824 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9822, subidx__9823));
    if(function() {
      var and__3822__auto____9825 = new_child__9824 == null;
      if(and__3822__auto____9825) {
        return subidx__9823 === 0
      }else {
        return and__3822__auto____9825
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9822, subidx__9823, new_child__9824);
      return node__9822
    }
  }else {
    if(subidx__9823 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9822, subidx__9823, null);
        return node__9822
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9830 = 0 <= i;
    if(and__3822__auto____9830) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9830
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9831 = tv.root;
      var node__9832 = root__9831;
      var level__9833 = tv.shift;
      while(true) {
        if(level__9833 > 0) {
          var G__9834 = cljs.core.tv_ensure_editable.call(null, root__9831.edit, cljs.core.pv_aget.call(null, node__9832, i >>> level__9833 & 31));
          var G__9835 = level__9833 - 5;
          node__9832 = G__9834;
          level__9833 = G__9835;
          continue
        }else {
          return node__9832.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9875 = null;
  var G__9875__2 = function(this_sym9838, k) {
    var this__9840 = this;
    var this_sym9838__9841 = this;
    var coll__9842 = this_sym9838__9841;
    return coll__9842.cljs$core$ILookup$_lookup$arity$2(coll__9842, k)
  };
  var G__9875__3 = function(this_sym9839, k, not_found) {
    var this__9840 = this;
    var this_sym9839__9843 = this;
    var coll__9844 = this_sym9839__9843;
    return coll__9844.cljs$core$ILookup$_lookup$arity$3(coll__9844, k, not_found)
  };
  G__9875 = function(this_sym9839, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9875__2.call(this, this_sym9839, k);
      case 3:
        return G__9875__3.call(this, this_sym9839, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9875
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9836, args9837) {
  var this__9845 = this;
  return this_sym9836.call.apply(this_sym9836, [this_sym9836].concat(args9837.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9846 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9847 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9848 = this;
  if(this__9848.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9849 = this;
  if(function() {
    var and__3822__auto____9850 = 0 <= n;
    if(and__3822__auto____9850) {
      return n < this__9849.cnt
    }else {
      return and__3822__auto____9850
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9851 = this;
  if(this__9851.root.edit) {
    return this__9851.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9852 = this;
  if(this__9852.root.edit) {
    if(function() {
      var and__3822__auto____9853 = 0 <= n;
      if(and__3822__auto____9853) {
        return n < this__9852.cnt
      }else {
        return and__3822__auto____9853
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9852.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9858 = function go(level, node) {
          var node__9856 = cljs.core.tv_ensure_editable.call(null, this__9852.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9856, n & 31, val);
            return node__9856
          }else {
            var subidx__9857 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9856, subidx__9857, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9856, subidx__9857)));
            return node__9856
          }
        }.call(null, this__9852.shift, this__9852.root);
        this__9852.root = new_root__9858;
        return tcoll
      }
    }else {
      if(n === this__9852.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9852.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9859 = this;
  if(this__9859.root.edit) {
    if(this__9859.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9859.cnt) {
        this__9859.cnt = 0;
        return tcoll
      }else {
        if((this__9859.cnt - 1 & 31) > 0) {
          this__9859.cnt = this__9859.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9860 = cljs.core.editable_array_for.call(null, tcoll, this__9859.cnt - 2);
            var new_root__9862 = function() {
              var nr__9861 = cljs.core.tv_pop_tail.call(null, tcoll, this__9859.shift, this__9859.root);
              if(!(nr__9861 == null)) {
                return nr__9861
              }else {
                return new cljs.core.VectorNode(this__9859.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9863 = 5 < this__9859.shift;
              if(and__3822__auto____9863) {
                return cljs.core.pv_aget.call(null, new_root__9862, 1) == null
              }else {
                return and__3822__auto____9863
              }
            }()) {
              var new_root__9864 = cljs.core.tv_ensure_editable.call(null, this__9859.root.edit, cljs.core.pv_aget.call(null, new_root__9862, 0));
              this__9859.root = new_root__9864;
              this__9859.shift = this__9859.shift - 5;
              this__9859.cnt = this__9859.cnt - 1;
              this__9859.tail = new_tail__9860;
              return tcoll
            }else {
              this__9859.root = new_root__9862;
              this__9859.cnt = this__9859.cnt - 1;
              this__9859.tail = new_tail__9860;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9865 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9866 = this;
  if(this__9866.root.edit) {
    if(this__9866.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9866.tail[this__9866.cnt & 31] = o;
      this__9866.cnt = this__9866.cnt + 1;
      return tcoll
    }else {
      var tail_node__9867 = new cljs.core.VectorNode(this__9866.root.edit, this__9866.tail);
      var new_tail__9868 = cljs.core.make_array.call(null, 32);
      new_tail__9868[0] = o;
      this__9866.tail = new_tail__9868;
      if(this__9866.cnt >>> 5 > 1 << this__9866.shift) {
        var new_root_array__9869 = cljs.core.make_array.call(null, 32);
        var new_shift__9870 = this__9866.shift + 5;
        new_root_array__9869[0] = this__9866.root;
        new_root_array__9869[1] = cljs.core.new_path.call(null, this__9866.root.edit, this__9866.shift, tail_node__9867);
        this__9866.root = new cljs.core.VectorNode(this__9866.root.edit, new_root_array__9869);
        this__9866.shift = new_shift__9870;
        this__9866.cnt = this__9866.cnt + 1;
        return tcoll
      }else {
        var new_root__9871 = cljs.core.tv_push_tail.call(null, tcoll, this__9866.shift, this__9866.root, tail_node__9867);
        this__9866.root = new_root__9871;
        this__9866.cnt = this__9866.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9872 = this;
  if(this__9872.root.edit) {
    this__9872.root.edit = null;
    var len__9873 = this__9872.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9874 = cljs.core.make_array.call(null, len__9873);
    cljs.core.array_copy.call(null, this__9872.tail, 0, trimmed_tail__9874, 0, len__9873);
    return new cljs.core.PersistentVector(null, this__9872.cnt, this__9872.shift, this__9872.root, trimmed_tail__9874, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9876 = this;
  var h__2192__auto____9877 = this__9876.__hash;
  if(!(h__2192__auto____9877 == null)) {
    return h__2192__auto____9877
  }else {
    var h__2192__auto____9878 = cljs.core.hash_coll.call(null, coll);
    this__9876.__hash = h__2192__auto____9878;
    return h__2192__auto____9878
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9879 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9880 = this;
  var this__9881 = this;
  return cljs.core.pr_str.call(null, this__9881)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9882 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9883 = this;
  return cljs.core._first.call(null, this__9883.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9884 = this;
  var temp__3971__auto____9885 = cljs.core.next.call(null, this__9884.front);
  if(temp__3971__auto____9885) {
    var f1__9886 = temp__3971__auto____9885;
    return new cljs.core.PersistentQueueSeq(this__9884.meta, f1__9886, this__9884.rear, null)
  }else {
    if(this__9884.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9884.meta, this__9884.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9887 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9888 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9888.front, this__9888.rear, this__9888.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9889 = this;
  return this__9889.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9890 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9890.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9891 = this;
  var h__2192__auto____9892 = this__9891.__hash;
  if(!(h__2192__auto____9892 == null)) {
    return h__2192__auto____9892
  }else {
    var h__2192__auto____9893 = cljs.core.hash_coll.call(null, coll);
    this__9891.__hash = h__2192__auto____9893;
    return h__2192__auto____9893
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9894 = this;
  if(cljs.core.truth_(this__9894.front)) {
    return new cljs.core.PersistentQueue(this__9894.meta, this__9894.count + 1, this__9894.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9895 = this__9894.rear;
      if(cljs.core.truth_(or__3824__auto____9895)) {
        return or__3824__auto____9895
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9894.meta, this__9894.count + 1, cljs.core.conj.call(null, this__9894.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9896 = this;
  var this__9897 = this;
  return cljs.core.pr_str.call(null, this__9897)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9898 = this;
  var rear__9899 = cljs.core.seq.call(null, this__9898.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9900 = this__9898.front;
    if(cljs.core.truth_(or__3824__auto____9900)) {
      return or__3824__auto____9900
    }else {
      return rear__9899
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9898.front, cljs.core.seq.call(null, rear__9899), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9901 = this;
  return this__9901.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9902 = this;
  return cljs.core._first.call(null, this__9902.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9903 = this;
  if(cljs.core.truth_(this__9903.front)) {
    var temp__3971__auto____9904 = cljs.core.next.call(null, this__9903.front);
    if(temp__3971__auto____9904) {
      var f1__9905 = temp__3971__auto____9904;
      return new cljs.core.PersistentQueue(this__9903.meta, this__9903.count - 1, f1__9905, this__9903.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9903.meta, this__9903.count - 1, cljs.core.seq.call(null, this__9903.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9906 = this;
  return cljs.core.first.call(null, this__9906.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9907 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9908 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9909 = this;
  return new cljs.core.PersistentQueue(meta, this__9909.count, this__9909.front, this__9909.rear, this__9909.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9910 = this;
  return this__9910.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9911 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9912 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9915 = array.length;
  var i__9916 = 0;
  while(true) {
    if(i__9916 < len__9915) {
      if(k === array[i__9916]) {
        return i__9916
      }else {
        var G__9917 = i__9916 + incr;
        i__9916 = G__9917;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9920 = cljs.core.hash.call(null, a);
  var b__9921 = cljs.core.hash.call(null, b);
  if(a__9920 < b__9921) {
    return-1
  }else {
    if(a__9920 > b__9921) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9929 = m.keys;
  var len__9930 = ks__9929.length;
  var so__9931 = m.strobj;
  var out__9932 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9933 = 0;
  var out__9934 = cljs.core.transient$.call(null, out__9932);
  while(true) {
    if(i__9933 < len__9930) {
      var k__9935 = ks__9929[i__9933];
      var G__9936 = i__9933 + 1;
      var G__9937 = cljs.core.assoc_BANG_.call(null, out__9934, k__9935, so__9931[k__9935]);
      i__9933 = G__9936;
      out__9934 = G__9937;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9934, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9943 = {};
  var l__9944 = ks.length;
  var i__9945 = 0;
  while(true) {
    if(i__9945 < l__9944) {
      var k__9946 = ks[i__9945];
      new_obj__9943[k__9946] = obj[k__9946];
      var G__9947 = i__9945 + 1;
      i__9945 = G__9947;
      continue
    }else {
    }
    break
  }
  return new_obj__9943
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9950 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9951 = this;
  var h__2192__auto____9952 = this__9951.__hash;
  if(!(h__2192__auto____9952 == null)) {
    return h__2192__auto____9952
  }else {
    var h__2192__auto____9953 = cljs.core.hash_imap.call(null, coll);
    this__9951.__hash = h__2192__auto____9953;
    return h__2192__auto____9953
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9954 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9955 = this;
  if(function() {
    var and__3822__auto____9956 = goog.isString(k);
    if(and__3822__auto____9956) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9955.keys) == null)
    }else {
      return and__3822__auto____9956
    }
  }()) {
    return this__9955.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9957 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____9958 = this__9957.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____9958) {
        return or__3824__auto____9958
      }else {
        return this__9957.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9957.keys) == null)) {
        var new_strobj__9959 = cljs.core.obj_clone.call(null, this__9957.strobj, this__9957.keys);
        new_strobj__9959[k] = v;
        return new cljs.core.ObjMap(this__9957.meta, this__9957.keys, new_strobj__9959, this__9957.update_count + 1, null)
      }else {
        var new_strobj__9960 = cljs.core.obj_clone.call(null, this__9957.strobj, this__9957.keys);
        var new_keys__9961 = this__9957.keys.slice();
        new_strobj__9960[k] = v;
        new_keys__9961.push(k);
        return new cljs.core.ObjMap(this__9957.meta, new_keys__9961, new_strobj__9960, this__9957.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9962 = this;
  if(function() {
    var and__3822__auto____9963 = goog.isString(k);
    if(and__3822__auto____9963) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9962.keys) == null)
    }else {
      return and__3822__auto____9963
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9985 = null;
  var G__9985__2 = function(this_sym9964, k) {
    var this__9966 = this;
    var this_sym9964__9967 = this;
    var coll__9968 = this_sym9964__9967;
    return coll__9968.cljs$core$ILookup$_lookup$arity$2(coll__9968, k)
  };
  var G__9985__3 = function(this_sym9965, k, not_found) {
    var this__9966 = this;
    var this_sym9965__9969 = this;
    var coll__9970 = this_sym9965__9969;
    return coll__9970.cljs$core$ILookup$_lookup$arity$3(coll__9970, k, not_found)
  };
  G__9985 = function(this_sym9965, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9985__2.call(this, this_sym9965, k);
      case 3:
        return G__9985__3.call(this, this_sym9965, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9985
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9948, args9949) {
  var this__9971 = this;
  return this_sym9948.call.apply(this_sym9948, [this_sym9948].concat(args9949.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9972 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9973 = this;
  var this__9974 = this;
  return cljs.core.pr_str.call(null, this__9974)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9975 = this;
  if(this__9975.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9938_SHARP_) {
      return cljs.core.vector.call(null, p1__9938_SHARP_, this__9975.strobj[p1__9938_SHARP_])
    }, this__9975.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9976 = this;
  return this__9976.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9977 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9978 = this;
  return new cljs.core.ObjMap(meta, this__9978.keys, this__9978.strobj, this__9978.update_count, this__9978.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9979 = this;
  return this__9979.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9980 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9980.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9981 = this;
  if(function() {
    var and__3822__auto____9982 = goog.isString(k);
    if(and__3822__auto____9982) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9981.keys) == null)
    }else {
      return and__3822__auto____9982
    }
  }()) {
    var new_keys__9983 = this__9981.keys.slice();
    var new_strobj__9984 = cljs.core.obj_clone.call(null, this__9981.strobj, this__9981.keys);
    new_keys__9983.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9983), 1);
    cljs.core.js_delete.call(null, new_strobj__9984, k);
    return new cljs.core.ObjMap(this__9981.meta, new_keys__9983, new_strobj__9984, this__9981.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9989 = this;
  var h__2192__auto____9990 = this__9989.__hash;
  if(!(h__2192__auto____9990 == null)) {
    return h__2192__auto____9990
  }else {
    var h__2192__auto____9991 = cljs.core.hash_imap.call(null, coll);
    this__9989.__hash = h__2192__auto____9991;
    return h__2192__auto____9991
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9992 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9993 = this;
  var bucket__9994 = this__9993.hashobj[cljs.core.hash.call(null, k)];
  var i__9995 = cljs.core.truth_(bucket__9994) ? cljs.core.scan_array.call(null, 2, k, bucket__9994) : null;
  if(cljs.core.truth_(i__9995)) {
    return bucket__9994[i__9995 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9996 = this;
  var h__9997 = cljs.core.hash.call(null, k);
  var bucket__9998 = this__9996.hashobj[h__9997];
  if(cljs.core.truth_(bucket__9998)) {
    var new_bucket__9999 = bucket__9998.slice();
    var new_hashobj__10000 = goog.object.clone(this__9996.hashobj);
    new_hashobj__10000[h__9997] = new_bucket__9999;
    var temp__3971__auto____10001 = cljs.core.scan_array.call(null, 2, k, new_bucket__9999);
    if(cljs.core.truth_(temp__3971__auto____10001)) {
      var i__10002 = temp__3971__auto____10001;
      new_bucket__9999[i__10002 + 1] = v;
      return new cljs.core.HashMap(this__9996.meta, this__9996.count, new_hashobj__10000, null)
    }else {
      new_bucket__9999.push(k, v);
      return new cljs.core.HashMap(this__9996.meta, this__9996.count + 1, new_hashobj__10000, null)
    }
  }else {
    var new_hashobj__10003 = goog.object.clone(this__9996.hashobj);
    new_hashobj__10003[h__9997] = [k, v];
    return new cljs.core.HashMap(this__9996.meta, this__9996.count + 1, new_hashobj__10003, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10004 = this;
  var bucket__10005 = this__10004.hashobj[cljs.core.hash.call(null, k)];
  var i__10006 = cljs.core.truth_(bucket__10005) ? cljs.core.scan_array.call(null, 2, k, bucket__10005) : null;
  if(cljs.core.truth_(i__10006)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__10031 = null;
  var G__10031__2 = function(this_sym10007, k) {
    var this__10009 = this;
    var this_sym10007__10010 = this;
    var coll__10011 = this_sym10007__10010;
    return coll__10011.cljs$core$ILookup$_lookup$arity$2(coll__10011, k)
  };
  var G__10031__3 = function(this_sym10008, k, not_found) {
    var this__10009 = this;
    var this_sym10008__10012 = this;
    var coll__10013 = this_sym10008__10012;
    return coll__10013.cljs$core$ILookup$_lookup$arity$3(coll__10013, k, not_found)
  };
  G__10031 = function(this_sym10008, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10031__2.call(this, this_sym10008, k);
      case 3:
        return G__10031__3.call(this, this_sym10008, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10031
}();
cljs.core.HashMap.prototype.apply = function(this_sym9987, args9988) {
  var this__10014 = this;
  return this_sym9987.call.apply(this_sym9987, [this_sym9987].concat(args9988.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10015 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__10016 = this;
  var this__10017 = this;
  return cljs.core.pr_str.call(null, this__10017)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10018 = this;
  if(this__10018.count > 0) {
    var hashes__10019 = cljs.core.js_keys.call(null, this__10018.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9986_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__10018.hashobj[p1__9986_SHARP_]))
    }, hashes__10019)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10020 = this;
  return this__10020.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10021 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10022 = this;
  return new cljs.core.HashMap(meta, this__10022.count, this__10022.hashobj, this__10022.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10023 = this;
  return this__10023.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10024 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__10024.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10025 = this;
  var h__10026 = cljs.core.hash.call(null, k);
  var bucket__10027 = this__10025.hashobj[h__10026];
  var i__10028 = cljs.core.truth_(bucket__10027) ? cljs.core.scan_array.call(null, 2, k, bucket__10027) : null;
  if(cljs.core.not.call(null, i__10028)) {
    return coll
  }else {
    var new_hashobj__10029 = goog.object.clone(this__10025.hashobj);
    if(3 > bucket__10027.length) {
      cljs.core.js_delete.call(null, new_hashobj__10029, h__10026)
    }else {
      var new_bucket__10030 = bucket__10027.slice();
      new_bucket__10030.splice(i__10028, 2);
      new_hashobj__10029[h__10026] = new_bucket__10030
    }
    return new cljs.core.HashMap(this__10025.meta, this__10025.count - 1, new_hashobj__10029, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__10032 = ks.length;
  var i__10033 = 0;
  var out__10034 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__10033 < len__10032) {
      var G__10035 = i__10033 + 1;
      var G__10036 = cljs.core.assoc.call(null, out__10034, ks[i__10033], vs[i__10033]);
      i__10033 = G__10035;
      out__10034 = G__10036;
      continue
    }else {
      return out__10034
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__10040 = m.arr;
  var len__10041 = arr__10040.length;
  var i__10042 = 0;
  while(true) {
    if(len__10041 <= i__10042) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__10040[i__10042], k)) {
        return i__10042
      }else {
        if("\ufdd0'else") {
          var G__10043 = i__10042 + 2;
          i__10042 = G__10043;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10046 = this;
  return new cljs.core.TransientArrayMap({}, this__10046.arr.length, this__10046.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10047 = this;
  var h__2192__auto____10048 = this__10047.__hash;
  if(!(h__2192__auto____10048 == null)) {
    return h__2192__auto____10048
  }else {
    var h__2192__auto____10049 = cljs.core.hash_imap.call(null, coll);
    this__10047.__hash = h__2192__auto____10049;
    return h__2192__auto____10049
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10050 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10051 = this;
  var idx__10052 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10052 === -1) {
    return not_found
  }else {
    return this__10051.arr[idx__10052 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10053 = this;
  var idx__10054 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10054 === -1) {
    if(this__10053.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__10053.meta, this__10053.cnt + 1, function() {
        var G__10055__10056 = this__10053.arr.slice();
        G__10055__10056.push(k);
        G__10055__10056.push(v);
        return G__10055__10056
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__10053.arr[idx__10054 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__10053.meta, this__10053.cnt, function() {
          var G__10057__10058 = this__10053.arr.slice();
          G__10057__10058[idx__10054 + 1] = v;
          return G__10057__10058
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10059 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10091 = null;
  var G__10091__2 = function(this_sym10060, k) {
    var this__10062 = this;
    var this_sym10060__10063 = this;
    var coll__10064 = this_sym10060__10063;
    return coll__10064.cljs$core$ILookup$_lookup$arity$2(coll__10064, k)
  };
  var G__10091__3 = function(this_sym10061, k, not_found) {
    var this__10062 = this;
    var this_sym10061__10065 = this;
    var coll__10066 = this_sym10061__10065;
    return coll__10066.cljs$core$ILookup$_lookup$arity$3(coll__10066, k, not_found)
  };
  G__10091 = function(this_sym10061, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10091__2.call(this, this_sym10061, k);
      case 3:
        return G__10091__3.call(this, this_sym10061, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10091
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym10044, args10045) {
  var this__10067 = this;
  return this_sym10044.call.apply(this_sym10044, [this_sym10044].concat(args10045.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10068 = this;
  var len__10069 = this__10068.arr.length;
  var i__10070 = 0;
  var init__10071 = init;
  while(true) {
    if(i__10070 < len__10069) {
      var init__10072 = f.call(null, init__10071, this__10068.arr[i__10070], this__10068.arr[i__10070 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__10072)) {
        return cljs.core.deref.call(null, init__10072)
      }else {
        var G__10092 = i__10070 + 2;
        var G__10093 = init__10072;
        i__10070 = G__10092;
        init__10071 = G__10093;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10073 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__10074 = this;
  var this__10075 = this;
  return cljs.core.pr_str.call(null, this__10075)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10076 = this;
  if(this__10076.cnt > 0) {
    var len__10077 = this__10076.arr.length;
    var array_map_seq__10078 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__10077) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__10076.arr[i], this__10076.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__10078.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10079 = this;
  return this__10079.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10080 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10081 = this;
  return new cljs.core.PersistentArrayMap(meta, this__10081.cnt, this__10081.arr, this__10081.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10082 = this;
  return this__10082.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10083 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10083.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10084 = this;
  var idx__10085 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10085 >= 0) {
    var len__10086 = this__10084.arr.length;
    var new_len__10087 = len__10086 - 2;
    if(new_len__10087 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__10088 = cljs.core.make_array.call(null, new_len__10087);
      var s__10089 = 0;
      var d__10090 = 0;
      while(true) {
        if(s__10089 >= len__10086) {
          return new cljs.core.PersistentArrayMap(this__10084.meta, this__10084.cnt - 1, new_arr__10088, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__10084.arr[s__10089])) {
            var G__10094 = s__10089 + 2;
            var G__10095 = d__10090;
            s__10089 = G__10094;
            d__10090 = G__10095;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__10088[d__10090] = this__10084.arr[s__10089];
              new_arr__10088[d__10090 + 1] = this__10084.arr[s__10089 + 1];
              var G__10096 = s__10089 + 2;
              var G__10097 = d__10090 + 2;
              s__10089 = G__10096;
              d__10090 = G__10097;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__10098 = cljs.core.count.call(null, ks);
  var i__10099 = 0;
  var out__10100 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__10099 < len__10098) {
      var G__10101 = i__10099 + 1;
      var G__10102 = cljs.core.assoc_BANG_.call(null, out__10100, ks[i__10099], vs[i__10099]);
      i__10099 = G__10101;
      out__10100 = G__10102;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10100)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10103 = this;
  if(cljs.core.truth_(this__10103.editable_QMARK_)) {
    var idx__10104 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10104 >= 0) {
      this__10103.arr[idx__10104] = this__10103.arr[this__10103.len - 2];
      this__10103.arr[idx__10104 + 1] = this__10103.arr[this__10103.len - 1];
      var G__10105__10106 = this__10103.arr;
      G__10105__10106.pop();
      G__10105__10106.pop();
      G__10105__10106;
      this__10103.len = this__10103.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10107 = this;
  if(cljs.core.truth_(this__10107.editable_QMARK_)) {
    var idx__10108 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10108 === -1) {
      if(this__10107.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__10107.len = this__10107.len + 2;
        this__10107.arr.push(key);
        this__10107.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__10107.len, this__10107.arr), key, val)
      }
    }else {
      if(val === this__10107.arr[idx__10108 + 1]) {
        return tcoll
      }else {
        this__10107.arr[idx__10108 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10109 = this;
  if(cljs.core.truth_(this__10109.editable_QMARK_)) {
    if(function() {
      var G__10110__10111 = o;
      if(G__10110__10111) {
        if(function() {
          var or__3824__auto____10112 = G__10110__10111.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10112) {
            return or__3824__auto____10112
          }else {
            return G__10110__10111.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10110__10111.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10110__10111)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10110__10111)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10113 = cljs.core.seq.call(null, o);
      var tcoll__10114 = tcoll;
      while(true) {
        var temp__3971__auto____10115 = cljs.core.first.call(null, es__10113);
        if(cljs.core.truth_(temp__3971__auto____10115)) {
          var e__10116 = temp__3971__auto____10115;
          var G__10122 = cljs.core.next.call(null, es__10113);
          var G__10123 = tcoll__10114.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__10114, cljs.core.key.call(null, e__10116), cljs.core.val.call(null, e__10116));
          es__10113 = G__10122;
          tcoll__10114 = G__10123;
          continue
        }else {
          return tcoll__10114
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10117 = this;
  if(cljs.core.truth_(this__10117.editable_QMARK_)) {
    this__10117.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__10117.len, 2), this__10117.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10118 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10119 = this;
  if(cljs.core.truth_(this__10119.editable_QMARK_)) {
    var idx__10120 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__10120 === -1) {
      return not_found
    }else {
      return this__10119.arr[idx__10120 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10121 = this;
  if(cljs.core.truth_(this__10121.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__10121.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__10126 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__10127 = 0;
  while(true) {
    if(i__10127 < len) {
      var G__10128 = cljs.core.assoc_BANG_.call(null, out__10126, arr[i__10127], arr[i__10127 + 1]);
      var G__10129 = i__10127 + 2;
      out__10126 = G__10128;
      i__10127 = G__10129;
      continue
    }else {
      return out__10126
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10134__10135 = arr.slice();
    G__10134__10135[i] = a;
    return G__10134__10135
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10136__10137 = arr.slice();
    G__10136__10137[i] = a;
    G__10136__10137[j] = b;
    return G__10136__10137
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__10139 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__10139, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__10139, 2 * i, new_arr__10139.length - 2 * i);
  return new_arr__10139
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__10142 = inode.ensure_editable(edit);
    editable__10142.arr[i] = a;
    return editable__10142
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__10143 = inode.ensure_editable(edit);
    editable__10143.arr[i] = a;
    editable__10143.arr[j] = b;
    return editable__10143
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__10150 = arr.length;
  var i__10151 = 0;
  var init__10152 = init;
  while(true) {
    if(i__10151 < len__10150) {
      var init__10155 = function() {
        var k__10153 = arr[i__10151];
        if(!(k__10153 == null)) {
          return f.call(null, init__10152, k__10153, arr[i__10151 + 1])
        }else {
          var node__10154 = arr[i__10151 + 1];
          if(!(node__10154 == null)) {
            return node__10154.kv_reduce(f, init__10152)
          }else {
            return init__10152
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10155)) {
        return cljs.core.deref.call(null, init__10155)
      }else {
        var G__10156 = i__10151 + 2;
        var G__10157 = init__10155;
        i__10151 = G__10156;
        init__10152 = G__10157;
        continue
      }
    }else {
      return init__10152
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__10158 = this;
  var inode__10159 = this;
  if(this__10158.bitmap === bit) {
    return null
  }else {
    var editable__10160 = inode__10159.ensure_editable(e);
    var earr__10161 = editable__10160.arr;
    var len__10162 = earr__10161.length;
    editable__10160.bitmap = bit ^ editable__10160.bitmap;
    cljs.core.array_copy.call(null, earr__10161, 2 * (i + 1), earr__10161, 2 * i, len__10162 - 2 * (i + 1));
    earr__10161[len__10162 - 2] = null;
    earr__10161[len__10162 - 1] = null;
    return editable__10160
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10163 = this;
  var inode__10164 = this;
  var bit__10165 = 1 << (hash >>> shift & 31);
  var idx__10166 = cljs.core.bitmap_indexed_node_index.call(null, this__10163.bitmap, bit__10165);
  if((this__10163.bitmap & bit__10165) === 0) {
    var n__10167 = cljs.core.bit_count.call(null, this__10163.bitmap);
    if(2 * n__10167 < this__10163.arr.length) {
      var editable__10168 = inode__10164.ensure_editable(edit);
      var earr__10169 = editable__10168.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10169, 2 * idx__10166, earr__10169, 2 * (idx__10166 + 1), 2 * (n__10167 - idx__10166));
      earr__10169[2 * idx__10166] = key;
      earr__10169[2 * idx__10166 + 1] = val;
      editable__10168.bitmap = editable__10168.bitmap | bit__10165;
      return editable__10168
    }else {
      if(n__10167 >= 16) {
        var nodes__10170 = cljs.core.make_array.call(null, 32);
        var jdx__10171 = hash >>> shift & 31;
        nodes__10170[jdx__10171] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10172 = 0;
        var j__10173 = 0;
        while(true) {
          if(i__10172 < 32) {
            if((this__10163.bitmap >>> i__10172 & 1) === 0) {
              var G__10226 = i__10172 + 1;
              var G__10227 = j__10173;
              i__10172 = G__10226;
              j__10173 = G__10227;
              continue
            }else {
              nodes__10170[i__10172] = !(this__10163.arr[j__10173] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10163.arr[j__10173]), this__10163.arr[j__10173], this__10163.arr[j__10173 + 1], added_leaf_QMARK_) : this__10163.arr[j__10173 + 1];
              var G__10228 = i__10172 + 1;
              var G__10229 = j__10173 + 2;
              i__10172 = G__10228;
              j__10173 = G__10229;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10167 + 1, nodes__10170)
      }else {
        if("\ufdd0'else") {
          var new_arr__10174 = cljs.core.make_array.call(null, 2 * (n__10167 + 4));
          cljs.core.array_copy.call(null, this__10163.arr, 0, new_arr__10174, 0, 2 * idx__10166);
          new_arr__10174[2 * idx__10166] = key;
          new_arr__10174[2 * idx__10166 + 1] = val;
          cljs.core.array_copy.call(null, this__10163.arr, 2 * idx__10166, new_arr__10174, 2 * (idx__10166 + 1), 2 * (n__10167 - idx__10166));
          added_leaf_QMARK_.val = true;
          var editable__10175 = inode__10164.ensure_editable(edit);
          editable__10175.arr = new_arr__10174;
          editable__10175.bitmap = editable__10175.bitmap | bit__10165;
          return editable__10175
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10176 = this__10163.arr[2 * idx__10166];
    var val_or_node__10177 = this__10163.arr[2 * idx__10166 + 1];
    if(key_or_nil__10176 == null) {
      var n__10178 = val_or_node__10177.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10178 === val_or_node__10177) {
        return inode__10164
      }else {
        return cljs.core.edit_and_set.call(null, inode__10164, edit, 2 * idx__10166 + 1, n__10178)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10176)) {
        if(val === val_or_node__10177) {
          return inode__10164
        }else {
          return cljs.core.edit_and_set.call(null, inode__10164, edit, 2 * idx__10166 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10164, edit, 2 * idx__10166, null, 2 * idx__10166 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10176, val_or_node__10177, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10179 = this;
  var inode__10180 = this;
  return cljs.core.create_inode_seq.call(null, this__10179.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10181 = this;
  var inode__10182 = this;
  var bit__10183 = 1 << (hash >>> shift & 31);
  if((this__10181.bitmap & bit__10183) === 0) {
    return inode__10182
  }else {
    var idx__10184 = cljs.core.bitmap_indexed_node_index.call(null, this__10181.bitmap, bit__10183);
    var key_or_nil__10185 = this__10181.arr[2 * idx__10184];
    var val_or_node__10186 = this__10181.arr[2 * idx__10184 + 1];
    if(key_or_nil__10185 == null) {
      var n__10187 = val_or_node__10186.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10187 === val_or_node__10186) {
        return inode__10182
      }else {
        if(!(n__10187 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10182, edit, 2 * idx__10184 + 1, n__10187)
        }else {
          if(this__10181.bitmap === bit__10183) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10182.edit_and_remove_pair(edit, bit__10183, idx__10184)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10185)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10182.edit_and_remove_pair(edit, bit__10183, idx__10184)
      }else {
        if("\ufdd0'else") {
          return inode__10182
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10188 = this;
  var inode__10189 = this;
  if(e === this__10188.edit) {
    return inode__10189
  }else {
    var n__10190 = cljs.core.bit_count.call(null, this__10188.bitmap);
    var new_arr__10191 = cljs.core.make_array.call(null, n__10190 < 0 ? 4 : 2 * (n__10190 + 1));
    cljs.core.array_copy.call(null, this__10188.arr, 0, new_arr__10191, 0, 2 * n__10190);
    return new cljs.core.BitmapIndexedNode(e, this__10188.bitmap, new_arr__10191)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10192 = this;
  var inode__10193 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10192.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10194 = this;
  var inode__10195 = this;
  var bit__10196 = 1 << (hash >>> shift & 31);
  if((this__10194.bitmap & bit__10196) === 0) {
    return not_found
  }else {
    var idx__10197 = cljs.core.bitmap_indexed_node_index.call(null, this__10194.bitmap, bit__10196);
    var key_or_nil__10198 = this__10194.arr[2 * idx__10197];
    var val_or_node__10199 = this__10194.arr[2 * idx__10197 + 1];
    if(key_or_nil__10198 == null) {
      return val_or_node__10199.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10198)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10198, val_or_node__10199], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10200 = this;
  var inode__10201 = this;
  var bit__10202 = 1 << (hash >>> shift & 31);
  if((this__10200.bitmap & bit__10202) === 0) {
    return inode__10201
  }else {
    var idx__10203 = cljs.core.bitmap_indexed_node_index.call(null, this__10200.bitmap, bit__10202);
    var key_or_nil__10204 = this__10200.arr[2 * idx__10203];
    var val_or_node__10205 = this__10200.arr[2 * idx__10203 + 1];
    if(key_or_nil__10204 == null) {
      var n__10206 = val_or_node__10205.inode_without(shift + 5, hash, key);
      if(n__10206 === val_or_node__10205) {
        return inode__10201
      }else {
        if(!(n__10206 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10200.bitmap, cljs.core.clone_and_set.call(null, this__10200.arr, 2 * idx__10203 + 1, n__10206))
        }else {
          if(this__10200.bitmap === bit__10202) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10200.bitmap ^ bit__10202, cljs.core.remove_pair.call(null, this__10200.arr, idx__10203))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10204)) {
        return new cljs.core.BitmapIndexedNode(null, this__10200.bitmap ^ bit__10202, cljs.core.remove_pair.call(null, this__10200.arr, idx__10203))
      }else {
        if("\ufdd0'else") {
          return inode__10201
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10207 = this;
  var inode__10208 = this;
  var bit__10209 = 1 << (hash >>> shift & 31);
  var idx__10210 = cljs.core.bitmap_indexed_node_index.call(null, this__10207.bitmap, bit__10209);
  if((this__10207.bitmap & bit__10209) === 0) {
    var n__10211 = cljs.core.bit_count.call(null, this__10207.bitmap);
    if(n__10211 >= 16) {
      var nodes__10212 = cljs.core.make_array.call(null, 32);
      var jdx__10213 = hash >>> shift & 31;
      nodes__10212[jdx__10213] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10214 = 0;
      var j__10215 = 0;
      while(true) {
        if(i__10214 < 32) {
          if((this__10207.bitmap >>> i__10214 & 1) === 0) {
            var G__10230 = i__10214 + 1;
            var G__10231 = j__10215;
            i__10214 = G__10230;
            j__10215 = G__10231;
            continue
          }else {
            nodes__10212[i__10214] = !(this__10207.arr[j__10215] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10207.arr[j__10215]), this__10207.arr[j__10215], this__10207.arr[j__10215 + 1], added_leaf_QMARK_) : this__10207.arr[j__10215 + 1];
            var G__10232 = i__10214 + 1;
            var G__10233 = j__10215 + 2;
            i__10214 = G__10232;
            j__10215 = G__10233;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10211 + 1, nodes__10212)
    }else {
      var new_arr__10216 = cljs.core.make_array.call(null, 2 * (n__10211 + 1));
      cljs.core.array_copy.call(null, this__10207.arr, 0, new_arr__10216, 0, 2 * idx__10210);
      new_arr__10216[2 * idx__10210] = key;
      new_arr__10216[2 * idx__10210 + 1] = val;
      cljs.core.array_copy.call(null, this__10207.arr, 2 * idx__10210, new_arr__10216, 2 * (idx__10210 + 1), 2 * (n__10211 - idx__10210));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10207.bitmap | bit__10209, new_arr__10216)
    }
  }else {
    var key_or_nil__10217 = this__10207.arr[2 * idx__10210];
    var val_or_node__10218 = this__10207.arr[2 * idx__10210 + 1];
    if(key_or_nil__10217 == null) {
      var n__10219 = val_or_node__10218.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10219 === val_or_node__10218) {
        return inode__10208
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10207.bitmap, cljs.core.clone_and_set.call(null, this__10207.arr, 2 * idx__10210 + 1, n__10219))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10217)) {
        if(val === val_or_node__10218) {
          return inode__10208
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10207.bitmap, cljs.core.clone_and_set.call(null, this__10207.arr, 2 * idx__10210 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10207.bitmap, cljs.core.clone_and_set.call(null, this__10207.arr, 2 * idx__10210, null, 2 * idx__10210 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10217, val_or_node__10218, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10220 = this;
  var inode__10221 = this;
  var bit__10222 = 1 << (hash >>> shift & 31);
  if((this__10220.bitmap & bit__10222) === 0) {
    return not_found
  }else {
    var idx__10223 = cljs.core.bitmap_indexed_node_index.call(null, this__10220.bitmap, bit__10222);
    var key_or_nil__10224 = this__10220.arr[2 * idx__10223];
    var val_or_node__10225 = this__10220.arr[2 * idx__10223 + 1];
    if(key_or_nil__10224 == null) {
      return val_or_node__10225.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10224)) {
        return val_or_node__10225
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10241 = array_node.arr;
  var len__10242 = 2 * (array_node.cnt - 1);
  var new_arr__10243 = cljs.core.make_array.call(null, len__10242);
  var i__10244 = 0;
  var j__10245 = 1;
  var bitmap__10246 = 0;
  while(true) {
    if(i__10244 < len__10242) {
      if(function() {
        var and__3822__auto____10247 = !(i__10244 === idx);
        if(and__3822__auto____10247) {
          return!(arr__10241[i__10244] == null)
        }else {
          return and__3822__auto____10247
        }
      }()) {
        new_arr__10243[j__10245] = arr__10241[i__10244];
        var G__10248 = i__10244 + 1;
        var G__10249 = j__10245 + 2;
        var G__10250 = bitmap__10246 | 1 << i__10244;
        i__10244 = G__10248;
        j__10245 = G__10249;
        bitmap__10246 = G__10250;
        continue
      }else {
        var G__10251 = i__10244 + 1;
        var G__10252 = j__10245;
        var G__10253 = bitmap__10246;
        i__10244 = G__10251;
        j__10245 = G__10252;
        bitmap__10246 = G__10253;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10246, new_arr__10243)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10254 = this;
  var inode__10255 = this;
  var idx__10256 = hash >>> shift & 31;
  var node__10257 = this__10254.arr[idx__10256];
  if(node__10257 == null) {
    var editable__10258 = cljs.core.edit_and_set.call(null, inode__10255, edit, idx__10256, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10258.cnt = editable__10258.cnt + 1;
    return editable__10258
  }else {
    var n__10259 = node__10257.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10259 === node__10257) {
      return inode__10255
    }else {
      return cljs.core.edit_and_set.call(null, inode__10255, edit, idx__10256, n__10259)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10260 = this;
  var inode__10261 = this;
  return cljs.core.create_array_node_seq.call(null, this__10260.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10262 = this;
  var inode__10263 = this;
  var idx__10264 = hash >>> shift & 31;
  var node__10265 = this__10262.arr[idx__10264];
  if(node__10265 == null) {
    return inode__10263
  }else {
    var n__10266 = node__10265.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10266 === node__10265) {
      return inode__10263
    }else {
      if(n__10266 == null) {
        if(this__10262.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10263, edit, idx__10264)
        }else {
          var editable__10267 = cljs.core.edit_and_set.call(null, inode__10263, edit, idx__10264, n__10266);
          editable__10267.cnt = editable__10267.cnt - 1;
          return editable__10267
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10263, edit, idx__10264, n__10266)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10268 = this;
  var inode__10269 = this;
  if(e === this__10268.edit) {
    return inode__10269
  }else {
    return new cljs.core.ArrayNode(e, this__10268.cnt, this__10268.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10270 = this;
  var inode__10271 = this;
  var len__10272 = this__10270.arr.length;
  var i__10273 = 0;
  var init__10274 = init;
  while(true) {
    if(i__10273 < len__10272) {
      var node__10275 = this__10270.arr[i__10273];
      if(!(node__10275 == null)) {
        var init__10276 = node__10275.kv_reduce(f, init__10274);
        if(cljs.core.reduced_QMARK_.call(null, init__10276)) {
          return cljs.core.deref.call(null, init__10276)
        }else {
          var G__10295 = i__10273 + 1;
          var G__10296 = init__10276;
          i__10273 = G__10295;
          init__10274 = G__10296;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10274
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10277 = this;
  var inode__10278 = this;
  var idx__10279 = hash >>> shift & 31;
  var node__10280 = this__10277.arr[idx__10279];
  if(!(node__10280 == null)) {
    return node__10280.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10281 = this;
  var inode__10282 = this;
  var idx__10283 = hash >>> shift & 31;
  var node__10284 = this__10281.arr[idx__10283];
  if(!(node__10284 == null)) {
    var n__10285 = node__10284.inode_without(shift + 5, hash, key);
    if(n__10285 === node__10284) {
      return inode__10282
    }else {
      if(n__10285 == null) {
        if(this__10281.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10282, null, idx__10283)
        }else {
          return new cljs.core.ArrayNode(null, this__10281.cnt - 1, cljs.core.clone_and_set.call(null, this__10281.arr, idx__10283, n__10285))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10281.cnt, cljs.core.clone_and_set.call(null, this__10281.arr, idx__10283, n__10285))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10282
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10286 = this;
  var inode__10287 = this;
  var idx__10288 = hash >>> shift & 31;
  var node__10289 = this__10286.arr[idx__10288];
  if(node__10289 == null) {
    return new cljs.core.ArrayNode(null, this__10286.cnt + 1, cljs.core.clone_and_set.call(null, this__10286.arr, idx__10288, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10290 = node__10289.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10290 === node__10289) {
      return inode__10287
    }else {
      return new cljs.core.ArrayNode(null, this__10286.cnt, cljs.core.clone_and_set.call(null, this__10286.arr, idx__10288, n__10290))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10291 = this;
  var inode__10292 = this;
  var idx__10293 = hash >>> shift & 31;
  var node__10294 = this__10291.arr[idx__10293];
  if(!(node__10294 == null)) {
    return node__10294.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10299 = 2 * cnt;
  var i__10300 = 0;
  while(true) {
    if(i__10300 < lim__10299) {
      if(cljs.core.key_test.call(null, key, arr[i__10300])) {
        return i__10300
      }else {
        var G__10301 = i__10300 + 2;
        i__10300 = G__10301;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10302 = this;
  var inode__10303 = this;
  if(hash === this__10302.collision_hash) {
    var idx__10304 = cljs.core.hash_collision_node_find_index.call(null, this__10302.arr, this__10302.cnt, key);
    if(idx__10304 === -1) {
      if(this__10302.arr.length > 2 * this__10302.cnt) {
        var editable__10305 = cljs.core.edit_and_set.call(null, inode__10303, edit, 2 * this__10302.cnt, key, 2 * this__10302.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10305.cnt = editable__10305.cnt + 1;
        return editable__10305
      }else {
        var len__10306 = this__10302.arr.length;
        var new_arr__10307 = cljs.core.make_array.call(null, len__10306 + 2);
        cljs.core.array_copy.call(null, this__10302.arr, 0, new_arr__10307, 0, len__10306);
        new_arr__10307[len__10306] = key;
        new_arr__10307[len__10306 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10303.ensure_editable_array(edit, this__10302.cnt + 1, new_arr__10307)
      }
    }else {
      if(this__10302.arr[idx__10304 + 1] === val) {
        return inode__10303
      }else {
        return cljs.core.edit_and_set.call(null, inode__10303, edit, idx__10304 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10302.collision_hash >>> shift & 31), [null, inode__10303, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10308 = this;
  var inode__10309 = this;
  return cljs.core.create_inode_seq.call(null, this__10308.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10310 = this;
  var inode__10311 = this;
  var idx__10312 = cljs.core.hash_collision_node_find_index.call(null, this__10310.arr, this__10310.cnt, key);
  if(idx__10312 === -1) {
    return inode__10311
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10310.cnt === 1) {
      return null
    }else {
      var editable__10313 = inode__10311.ensure_editable(edit);
      var earr__10314 = editable__10313.arr;
      earr__10314[idx__10312] = earr__10314[2 * this__10310.cnt - 2];
      earr__10314[idx__10312 + 1] = earr__10314[2 * this__10310.cnt - 1];
      earr__10314[2 * this__10310.cnt - 1] = null;
      earr__10314[2 * this__10310.cnt - 2] = null;
      editable__10313.cnt = editable__10313.cnt - 1;
      return editable__10313
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10315 = this;
  var inode__10316 = this;
  if(e === this__10315.edit) {
    return inode__10316
  }else {
    var new_arr__10317 = cljs.core.make_array.call(null, 2 * (this__10315.cnt + 1));
    cljs.core.array_copy.call(null, this__10315.arr, 0, new_arr__10317, 0, 2 * this__10315.cnt);
    return new cljs.core.HashCollisionNode(e, this__10315.collision_hash, this__10315.cnt, new_arr__10317)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10318 = this;
  var inode__10319 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10318.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10320 = this;
  var inode__10321 = this;
  var idx__10322 = cljs.core.hash_collision_node_find_index.call(null, this__10320.arr, this__10320.cnt, key);
  if(idx__10322 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10320.arr[idx__10322])) {
      return cljs.core.PersistentVector.fromArray([this__10320.arr[idx__10322], this__10320.arr[idx__10322 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10323 = this;
  var inode__10324 = this;
  var idx__10325 = cljs.core.hash_collision_node_find_index.call(null, this__10323.arr, this__10323.cnt, key);
  if(idx__10325 === -1) {
    return inode__10324
  }else {
    if(this__10323.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10323.collision_hash, this__10323.cnt - 1, cljs.core.remove_pair.call(null, this__10323.arr, cljs.core.quot.call(null, idx__10325, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10326 = this;
  var inode__10327 = this;
  if(hash === this__10326.collision_hash) {
    var idx__10328 = cljs.core.hash_collision_node_find_index.call(null, this__10326.arr, this__10326.cnt, key);
    if(idx__10328 === -1) {
      var len__10329 = this__10326.arr.length;
      var new_arr__10330 = cljs.core.make_array.call(null, len__10329 + 2);
      cljs.core.array_copy.call(null, this__10326.arr, 0, new_arr__10330, 0, len__10329);
      new_arr__10330[len__10329] = key;
      new_arr__10330[len__10329 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10326.collision_hash, this__10326.cnt + 1, new_arr__10330)
    }else {
      if(cljs.core._EQ_.call(null, this__10326.arr[idx__10328], val)) {
        return inode__10327
      }else {
        return new cljs.core.HashCollisionNode(null, this__10326.collision_hash, this__10326.cnt, cljs.core.clone_and_set.call(null, this__10326.arr, idx__10328 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10326.collision_hash >>> shift & 31), [null, inode__10327])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10331 = this;
  var inode__10332 = this;
  var idx__10333 = cljs.core.hash_collision_node_find_index.call(null, this__10331.arr, this__10331.cnt, key);
  if(idx__10333 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10331.arr[idx__10333])) {
      return this__10331.arr[idx__10333 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10334 = this;
  var inode__10335 = this;
  if(e === this__10334.edit) {
    this__10334.arr = array;
    this__10334.cnt = count;
    return inode__10335
  }else {
    return new cljs.core.HashCollisionNode(this__10334.edit, this__10334.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10340 = cljs.core.hash.call(null, key1);
    if(key1hash__10340 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10340, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10341 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10340, key1, val1, added_leaf_QMARK___10341).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10341)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10342 = cljs.core.hash.call(null, key1);
    if(key1hash__10342 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10342, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10343 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10342, key1, val1, added_leaf_QMARK___10343).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10343)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10344 = this;
  var h__2192__auto____10345 = this__10344.__hash;
  if(!(h__2192__auto____10345 == null)) {
    return h__2192__auto____10345
  }else {
    var h__2192__auto____10346 = cljs.core.hash_coll.call(null, coll);
    this__10344.__hash = h__2192__auto____10346;
    return h__2192__auto____10346
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10347 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10348 = this;
  var this__10349 = this;
  return cljs.core.pr_str.call(null, this__10349)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10350 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10351 = this;
  if(this__10351.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10351.nodes[this__10351.i], this__10351.nodes[this__10351.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10351.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10352 = this;
  if(this__10352.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10352.nodes, this__10352.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10352.nodes, this__10352.i, cljs.core.next.call(null, this__10352.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10353 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10354 = this;
  return new cljs.core.NodeSeq(meta, this__10354.nodes, this__10354.i, this__10354.s, this__10354.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10355 = this;
  return this__10355.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10356 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10356.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10363 = nodes.length;
      var j__10364 = i;
      while(true) {
        if(j__10364 < len__10363) {
          if(!(nodes[j__10364] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10364, null, null)
          }else {
            var temp__3971__auto____10365 = nodes[j__10364 + 1];
            if(cljs.core.truth_(temp__3971__auto____10365)) {
              var node__10366 = temp__3971__auto____10365;
              var temp__3971__auto____10367 = node__10366.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10367)) {
                var node_seq__10368 = temp__3971__auto____10367;
                return new cljs.core.NodeSeq(null, nodes, j__10364 + 2, node_seq__10368, null)
              }else {
                var G__10369 = j__10364 + 2;
                j__10364 = G__10369;
                continue
              }
            }else {
              var G__10370 = j__10364 + 2;
              j__10364 = G__10370;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10371 = this;
  var h__2192__auto____10372 = this__10371.__hash;
  if(!(h__2192__auto____10372 == null)) {
    return h__2192__auto____10372
  }else {
    var h__2192__auto____10373 = cljs.core.hash_coll.call(null, coll);
    this__10371.__hash = h__2192__auto____10373;
    return h__2192__auto____10373
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10374 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10375 = this;
  var this__10376 = this;
  return cljs.core.pr_str.call(null, this__10376)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10377 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10378 = this;
  return cljs.core.first.call(null, this__10378.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10379 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10379.nodes, this__10379.i, cljs.core.next.call(null, this__10379.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10380 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10381 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10381.nodes, this__10381.i, this__10381.s, this__10381.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10382 = this;
  return this__10382.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10383 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10383.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10390 = nodes.length;
      var j__10391 = i;
      while(true) {
        if(j__10391 < len__10390) {
          var temp__3971__auto____10392 = nodes[j__10391];
          if(cljs.core.truth_(temp__3971__auto____10392)) {
            var nj__10393 = temp__3971__auto____10392;
            var temp__3971__auto____10394 = nj__10393.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10394)) {
              var ns__10395 = temp__3971__auto____10394;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10391 + 1, ns__10395, null)
            }else {
              var G__10396 = j__10391 + 1;
              j__10391 = G__10396;
              continue
            }
          }else {
            var G__10397 = j__10391 + 1;
            j__10391 = G__10397;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10400 = this;
  return new cljs.core.TransientHashMap({}, this__10400.root, this__10400.cnt, this__10400.has_nil_QMARK_, this__10400.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10401 = this;
  var h__2192__auto____10402 = this__10401.__hash;
  if(!(h__2192__auto____10402 == null)) {
    return h__2192__auto____10402
  }else {
    var h__2192__auto____10403 = cljs.core.hash_imap.call(null, coll);
    this__10401.__hash = h__2192__auto____10403;
    return h__2192__auto____10403
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10404 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10405 = this;
  if(k == null) {
    if(this__10405.has_nil_QMARK_) {
      return this__10405.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10405.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10405.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10406 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10407 = this__10406.has_nil_QMARK_;
      if(and__3822__auto____10407) {
        return v === this__10406.nil_val
      }else {
        return and__3822__auto____10407
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10406.meta, this__10406.has_nil_QMARK_ ? this__10406.cnt : this__10406.cnt + 1, this__10406.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10408 = new cljs.core.Box(false);
    var new_root__10409 = (this__10406.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10406.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10408);
    if(new_root__10409 === this__10406.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10406.meta, added_leaf_QMARK___10408.val ? this__10406.cnt + 1 : this__10406.cnt, new_root__10409, this__10406.has_nil_QMARK_, this__10406.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10410 = this;
  if(k == null) {
    return this__10410.has_nil_QMARK_
  }else {
    if(this__10410.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10410.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10433 = null;
  var G__10433__2 = function(this_sym10411, k) {
    var this__10413 = this;
    var this_sym10411__10414 = this;
    var coll__10415 = this_sym10411__10414;
    return coll__10415.cljs$core$ILookup$_lookup$arity$2(coll__10415, k)
  };
  var G__10433__3 = function(this_sym10412, k, not_found) {
    var this__10413 = this;
    var this_sym10412__10416 = this;
    var coll__10417 = this_sym10412__10416;
    return coll__10417.cljs$core$ILookup$_lookup$arity$3(coll__10417, k, not_found)
  };
  G__10433 = function(this_sym10412, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10433__2.call(this, this_sym10412, k);
      case 3:
        return G__10433__3.call(this, this_sym10412, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10433
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10398, args10399) {
  var this__10418 = this;
  return this_sym10398.call.apply(this_sym10398, [this_sym10398].concat(args10399.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10419 = this;
  var init__10420 = this__10419.has_nil_QMARK_ ? f.call(null, init, null, this__10419.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10420)) {
    return cljs.core.deref.call(null, init__10420)
  }else {
    if(!(this__10419.root == null)) {
      return this__10419.root.kv_reduce(f, init__10420)
    }else {
      if("\ufdd0'else") {
        return init__10420
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10421 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10422 = this;
  var this__10423 = this;
  return cljs.core.pr_str.call(null, this__10423)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10424 = this;
  if(this__10424.cnt > 0) {
    var s__10425 = !(this__10424.root == null) ? this__10424.root.inode_seq() : null;
    if(this__10424.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10424.nil_val], true), s__10425)
    }else {
      return s__10425
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10426 = this;
  return this__10426.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10427 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10428 = this;
  return new cljs.core.PersistentHashMap(meta, this__10428.cnt, this__10428.root, this__10428.has_nil_QMARK_, this__10428.nil_val, this__10428.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10429 = this;
  return this__10429.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10430 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10430.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10431 = this;
  if(k == null) {
    if(this__10431.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10431.meta, this__10431.cnt - 1, this__10431.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10431.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10432 = this__10431.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10432 === this__10431.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10431.meta, this__10431.cnt - 1, new_root__10432, this__10431.has_nil_QMARK_, this__10431.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10434 = ks.length;
  var i__10435 = 0;
  var out__10436 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10435 < len__10434) {
      var G__10437 = i__10435 + 1;
      var G__10438 = cljs.core.assoc_BANG_.call(null, out__10436, ks[i__10435], vs[i__10435]);
      i__10435 = G__10437;
      out__10436 = G__10438;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10436)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10439 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10440 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10441 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10442 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10443 = this;
  if(k == null) {
    if(this__10443.has_nil_QMARK_) {
      return this__10443.nil_val
    }else {
      return null
    }
  }else {
    if(this__10443.root == null) {
      return null
    }else {
      return this__10443.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10444 = this;
  if(k == null) {
    if(this__10444.has_nil_QMARK_) {
      return this__10444.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10444.root == null) {
      return not_found
    }else {
      return this__10444.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10445 = this;
  if(this__10445.edit) {
    return this__10445.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10446 = this;
  var tcoll__10447 = this;
  if(this__10446.edit) {
    if(function() {
      var G__10448__10449 = o;
      if(G__10448__10449) {
        if(function() {
          var or__3824__auto____10450 = G__10448__10449.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10450) {
            return or__3824__auto____10450
          }else {
            return G__10448__10449.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10448__10449.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10448__10449)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10448__10449)
      }
    }()) {
      return tcoll__10447.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10451 = cljs.core.seq.call(null, o);
      var tcoll__10452 = tcoll__10447;
      while(true) {
        var temp__3971__auto____10453 = cljs.core.first.call(null, es__10451);
        if(cljs.core.truth_(temp__3971__auto____10453)) {
          var e__10454 = temp__3971__auto____10453;
          var G__10465 = cljs.core.next.call(null, es__10451);
          var G__10466 = tcoll__10452.assoc_BANG_(cljs.core.key.call(null, e__10454), cljs.core.val.call(null, e__10454));
          es__10451 = G__10465;
          tcoll__10452 = G__10466;
          continue
        }else {
          return tcoll__10452
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10455 = this;
  var tcoll__10456 = this;
  if(this__10455.edit) {
    if(k == null) {
      if(this__10455.nil_val === v) {
      }else {
        this__10455.nil_val = v
      }
      if(this__10455.has_nil_QMARK_) {
      }else {
        this__10455.count = this__10455.count + 1;
        this__10455.has_nil_QMARK_ = true
      }
      return tcoll__10456
    }else {
      var added_leaf_QMARK___10457 = new cljs.core.Box(false);
      var node__10458 = (this__10455.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10455.root).inode_assoc_BANG_(this__10455.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10457);
      if(node__10458 === this__10455.root) {
      }else {
        this__10455.root = node__10458
      }
      if(added_leaf_QMARK___10457.val) {
        this__10455.count = this__10455.count + 1
      }else {
      }
      return tcoll__10456
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10459 = this;
  var tcoll__10460 = this;
  if(this__10459.edit) {
    if(k == null) {
      if(this__10459.has_nil_QMARK_) {
        this__10459.has_nil_QMARK_ = false;
        this__10459.nil_val = null;
        this__10459.count = this__10459.count - 1;
        return tcoll__10460
      }else {
        return tcoll__10460
      }
    }else {
      if(this__10459.root == null) {
        return tcoll__10460
      }else {
        var removed_leaf_QMARK___10461 = new cljs.core.Box(false);
        var node__10462 = this__10459.root.inode_without_BANG_(this__10459.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10461);
        if(node__10462 === this__10459.root) {
        }else {
          this__10459.root = node__10462
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10461[0])) {
          this__10459.count = this__10459.count - 1
        }else {
        }
        return tcoll__10460
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10463 = this;
  var tcoll__10464 = this;
  if(this__10463.edit) {
    this__10463.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10463.count, this__10463.root, this__10463.has_nil_QMARK_, this__10463.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10469 = node;
  var stack__10470 = stack;
  while(true) {
    if(!(t__10469 == null)) {
      var G__10471 = ascending_QMARK_ ? t__10469.left : t__10469.right;
      var G__10472 = cljs.core.conj.call(null, stack__10470, t__10469);
      t__10469 = G__10471;
      stack__10470 = G__10472;
      continue
    }else {
      return stack__10470
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10473 = this;
  var h__2192__auto____10474 = this__10473.__hash;
  if(!(h__2192__auto____10474 == null)) {
    return h__2192__auto____10474
  }else {
    var h__2192__auto____10475 = cljs.core.hash_coll.call(null, coll);
    this__10473.__hash = h__2192__auto____10475;
    return h__2192__auto____10475
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10476 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10477 = this;
  var this__10478 = this;
  return cljs.core.pr_str.call(null, this__10478)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10479 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10480 = this;
  if(this__10480.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10480.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10481 = this;
  return cljs.core.peek.call(null, this__10481.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10482 = this;
  var t__10483 = cljs.core.first.call(null, this__10482.stack);
  var next_stack__10484 = cljs.core.tree_map_seq_push.call(null, this__10482.ascending_QMARK_ ? t__10483.right : t__10483.left, cljs.core.next.call(null, this__10482.stack), this__10482.ascending_QMARK_);
  if(!(next_stack__10484 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10484, this__10482.ascending_QMARK_, this__10482.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10485 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10486 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10486.stack, this__10486.ascending_QMARK_, this__10486.cnt, this__10486.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10487 = this;
  return this__10487.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10489 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10489) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10489
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10491 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10491) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10491
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10495 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10495)) {
    return cljs.core.deref.call(null, init__10495)
  }else {
    var init__10496 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10495) : init__10495;
    if(cljs.core.reduced_QMARK_.call(null, init__10496)) {
      return cljs.core.deref.call(null, init__10496)
    }else {
      var init__10497 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10496) : init__10496;
      if(cljs.core.reduced_QMARK_.call(null, init__10497)) {
        return cljs.core.deref.call(null, init__10497)
      }else {
        return init__10497
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10500 = this;
  var h__2192__auto____10501 = this__10500.__hash;
  if(!(h__2192__auto____10501 == null)) {
    return h__2192__auto____10501
  }else {
    var h__2192__auto____10502 = cljs.core.hash_coll.call(null, coll);
    this__10500.__hash = h__2192__auto____10502;
    return h__2192__auto____10502
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10503 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10504 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10505 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10505.key, this__10505.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10553 = null;
  var G__10553__2 = function(this_sym10506, k) {
    var this__10508 = this;
    var this_sym10506__10509 = this;
    var node__10510 = this_sym10506__10509;
    return node__10510.cljs$core$ILookup$_lookup$arity$2(node__10510, k)
  };
  var G__10553__3 = function(this_sym10507, k, not_found) {
    var this__10508 = this;
    var this_sym10507__10511 = this;
    var node__10512 = this_sym10507__10511;
    return node__10512.cljs$core$ILookup$_lookup$arity$3(node__10512, k, not_found)
  };
  G__10553 = function(this_sym10507, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10553__2.call(this, this_sym10507, k);
      case 3:
        return G__10553__3.call(this, this_sym10507, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10553
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10498, args10499) {
  var this__10513 = this;
  return this_sym10498.call.apply(this_sym10498, [this_sym10498].concat(args10499.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10514 = this;
  return cljs.core.PersistentVector.fromArray([this__10514.key, this__10514.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10515 = this;
  return this__10515.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10516 = this;
  return this__10516.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10517 = this;
  var node__10518 = this;
  return ins.balance_right(node__10518)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10519 = this;
  var node__10520 = this;
  return new cljs.core.RedNode(this__10519.key, this__10519.val, this__10519.left, this__10519.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10521 = this;
  var node__10522 = this;
  return cljs.core.balance_right_del.call(null, this__10521.key, this__10521.val, this__10521.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10523 = this;
  var node__10524 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10525 = this;
  var node__10526 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10526, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10527 = this;
  var node__10528 = this;
  return cljs.core.balance_left_del.call(null, this__10527.key, this__10527.val, del, this__10527.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10529 = this;
  var node__10530 = this;
  return ins.balance_left(node__10530)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10531 = this;
  var node__10532 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10532, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10554 = null;
  var G__10554__0 = function() {
    var this__10533 = this;
    var this__10535 = this;
    return cljs.core.pr_str.call(null, this__10535)
  };
  G__10554 = function() {
    switch(arguments.length) {
      case 0:
        return G__10554__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10554
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10536 = this;
  var node__10537 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10537, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10538 = this;
  var node__10539 = this;
  return node__10539
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10540 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10541 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10542 = this;
  return cljs.core.list.call(null, this__10542.key, this__10542.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10543 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10544 = this;
  return this__10544.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10545 = this;
  return cljs.core.PersistentVector.fromArray([this__10545.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10546 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10546.key, this__10546.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10547 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10548 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10548.key, this__10548.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10549 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10550 = this;
  if(n === 0) {
    return this__10550.key
  }else {
    if(n === 1) {
      return this__10550.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10551 = this;
  if(n === 0) {
    return this__10551.key
  }else {
    if(n === 1) {
      return this__10551.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10552 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10557 = this;
  var h__2192__auto____10558 = this__10557.__hash;
  if(!(h__2192__auto____10558 == null)) {
    return h__2192__auto____10558
  }else {
    var h__2192__auto____10559 = cljs.core.hash_coll.call(null, coll);
    this__10557.__hash = h__2192__auto____10559;
    return h__2192__auto____10559
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10560 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10561 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10562 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10562.key, this__10562.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10610 = null;
  var G__10610__2 = function(this_sym10563, k) {
    var this__10565 = this;
    var this_sym10563__10566 = this;
    var node__10567 = this_sym10563__10566;
    return node__10567.cljs$core$ILookup$_lookup$arity$2(node__10567, k)
  };
  var G__10610__3 = function(this_sym10564, k, not_found) {
    var this__10565 = this;
    var this_sym10564__10568 = this;
    var node__10569 = this_sym10564__10568;
    return node__10569.cljs$core$ILookup$_lookup$arity$3(node__10569, k, not_found)
  };
  G__10610 = function(this_sym10564, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10610__2.call(this, this_sym10564, k);
      case 3:
        return G__10610__3.call(this, this_sym10564, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10610
}();
cljs.core.RedNode.prototype.apply = function(this_sym10555, args10556) {
  var this__10570 = this;
  return this_sym10555.call.apply(this_sym10555, [this_sym10555].concat(args10556.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10571 = this;
  return cljs.core.PersistentVector.fromArray([this__10571.key, this__10571.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10572 = this;
  return this__10572.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10573 = this;
  return this__10573.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10574 = this;
  var node__10575 = this;
  return new cljs.core.RedNode(this__10574.key, this__10574.val, this__10574.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10576 = this;
  var node__10577 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10578 = this;
  var node__10579 = this;
  return new cljs.core.RedNode(this__10578.key, this__10578.val, this__10578.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10580 = this;
  var node__10581 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10582 = this;
  var node__10583 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10583, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10584 = this;
  var node__10585 = this;
  return new cljs.core.RedNode(this__10584.key, this__10584.val, del, this__10584.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10586 = this;
  var node__10587 = this;
  return new cljs.core.RedNode(this__10586.key, this__10586.val, ins, this__10586.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10588 = this;
  var node__10589 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10588.left)) {
    return new cljs.core.RedNode(this__10588.key, this__10588.val, this__10588.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10588.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10588.right)) {
      return new cljs.core.RedNode(this__10588.right.key, this__10588.right.val, new cljs.core.BlackNode(this__10588.key, this__10588.val, this__10588.left, this__10588.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10588.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10589, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10611 = null;
  var G__10611__0 = function() {
    var this__10590 = this;
    var this__10592 = this;
    return cljs.core.pr_str.call(null, this__10592)
  };
  G__10611 = function() {
    switch(arguments.length) {
      case 0:
        return G__10611__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10611
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10593 = this;
  var node__10594 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10593.right)) {
    return new cljs.core.RedNode(this__10593.key, this__10593.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10593.left, null), this__10593.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10593.left)) {
      return new cljs.core.RedNode(this__10593.left.key, this__10593.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10593.left.left, null), new cljs.core.BlackNode(this__10593.key, this__10593.val, this__10593.left.right, this__10593.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10594, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10595 = this;
  var node__10596 = this;
  return new cljs.core.BlackNode(this__10595.key, this__10595.val, this__10595.left, this__10595.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10597 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10598 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10599 = this;
  return cljs.core.list.call(null, this__10599.key, this__10599.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10600 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10601 = this;
  return this__10601.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10602 = this;
  return cljs.core.PersistentVector.fromArray([this__10602.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10603 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10603.key, this__10603.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10604 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10605 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10605.key, this__10605.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10606 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10607 = this;
  if(n === 0) {
    return this__10607.key
  }else {
    if(n === 1) {
      return this__10607.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10608 = this;
  if(n === 0) {
    return this__10608.key
  }else {
    if(n === 1) {
      return this__10608.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10609 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10615 = comp.call(null, k, tree.key);
    if(c__10615 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10615 < 0) {
        var ins__10616 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10616 == null)) {
          return tree.add_left(ins__10616)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10617 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10617 == null)) {
            return tree.add_right(ins__10617)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10620 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10620)) {
            return new cljs.core.RedNode(app__10620.key, app__10620.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10620.left, null), new cljs.core.RedNode(right.key, right.val, app__10620.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10620, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10621 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10621)) {
              return new cljs.core.RedNode(app__10621.key, app__10621.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10621.left, null), new cljs.core.BlackNode(right.key, right.val, app__10621.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10621, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10627 = comp.call(null, k, tree.key);
    if(c__10627 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10627 < 0) {
        var del__10628 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____10629 = !(del__10628 == null);
          if(or__3824__auto____10629) {
            return or__3824__auto____10629
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10628, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10628, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10630 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____10631 = !(del__10630 == null);
            if(or__3824__auto____10631) {
              return or__3824__auto____10631
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10630)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10630, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10634 = tree.key;
  var c__10635 = comp.call(null, k, tk__10634);
  if(c__10635 === 0) {
    return tree.replace(tk__10634, v, tree.left, tree.right)
  }else {
    if(c__10635 < 0) {
      return tree.replace(tk__10634, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10634, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10638 = this;
  var h__2192__auto____10639 = this__10638.__hash;
  if(!(h__2192__auto____10639 == null)) {
    return h__2192__auto____10639
  }else {
    var h__2192__auto____10640 = cljs.core.hash_imap.call(null, coll);
    this__10638.__hash = h__2192__auto____10640;
    return h__2192__auto____10640
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10641 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10642 = this;
  var n__10643 = coll.entry_at(k);
  if(!(n__10643 == null)) {
    return n__10643.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10644 = this;
  var found__10645 = [null];
  var t__10646 = cljs.core.tree_map_add.call(null, this__10644.comp, this__10644.tree, k, v, found__10645);
  if(t__10646 == null) {
    var found_node__10647 = cljs.core.nth.call(null, found__10645, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10647.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10644.comp, cljs.core.tree_map_replace.call(null, this__10644.comp, this__10644.tree, k, v), this__10644.cnt, this__10644.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10644.comp, t__10646.blacken(), this__10644.cnt + 1, this__10644.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10648 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10682 = null;
  var G__10682__2 = function(this_sym10649, k) {
    var this__10651 = this;
    var this_sym10649__10652 = this;
    var coll__10653 = this_sym10649__10652;
    return coll__10653.cljs$core$ILookup$_lookup$arity$2(coll__10653, k)
  };
  var G__10682__3 = function(this_sym10650, k, not_found) {
    var this__10651 = this;
    var this_sym10650__10654 = this;
    var coll__10655 = this_sym10650__10654;
    return coll__10655.cljs$core$ILookup$_lookup$arity$3(coll__10655, k, not_found)
  };
  G__10682 = function(this_sym10650, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10682__2.call(this, this_sym10650, k);
      case 3:
        return G__10682__3.call(this, this_sym10650, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10682
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10636, args10637) {
  var this__10656 = this;
  return this_sym10636.call.apply(this_sym10636, [this_sym10636].concat(args10637.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10657 = this;
  if(!(this__10657.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10657.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10658 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10659 = this;
  if(this__10659.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10659.tree, false, this__10659.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10660 = this;
  var this__10661 = this;
  return cljs.core.pr_str.call(null, this__10661)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10662 = this;
  var coll__10663 = this;
  var t__10664 = this__10662.tree;
  while(true) {
    if(!(t__10664 == null)) {
      var c__10665 = this__10662.comp.call(null, k, t__10664.key);
      if(c__10665 === 0) {
        return t__10664
      }else {
        if(c__10665 < 0) {
          var G__10683 = t__10664.left;
          t__10664 = G__10683;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10684 = t__10664.right;
            t__10664 = G__10684;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10666 = this;
  if(this__10666.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10666.tree, ascending_QMARK_, this__10666.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10667 = this;
  if(this__10667.cnt > 0) {
    var stack__10668 = null;
    var t__10669 = this__10667.tree;
    while(true) {
      if(!(t__10669 == null)) {
        var c__10670 = this__10667.comp.call(null, k, t__10669.key);
        if(c__10670 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10668, t__10669), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10670 < 0) {
              var G__10685 = cljs.core.conj.call(null, stack__10668, t__10669);
              var G__10686 = t__10669.left;
              stack__10668 = G__10685;
              t__10669 = G__10686;
              continue
            }else {
              var G__10687 = stack__10668;
              var G__10688 = t__10669.right;
              stack__10668 = G__10687;
              t__10669 = G__10688;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10670 > 0) {
                var G__10689 = cljs.core.conj.call(null, stack__10668, t__10669);
                var G__10690 = t__10669.right;
                stack__10668 = G__10689;
                t__10669 = G__10690;
                continue
              }else {
                var G__10691 = stack__10668;
                var G__10692 = t__10669.left;
                stack__10668 = G__10691;
                t__10669 = G__10692;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10668 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10668, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10671 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10672 = this;
  return this__10672.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10673 = this;
  if(this__10673.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10673.tree, true, this__10673.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10674 = this;
  return this__10674.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10675 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10676 = this;
  return new cljs.core.PersistentTreeMap(this__10676.comp, this__10676.tree, this__10676.cnt, meta, this__10676.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10677 = this;
  return this__10677.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10678 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10678.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10679 = this;
  var found__10680 = [null];
  var t__10681 = cljs.core.tree_map_remove.call(null, this__10679.comp, this__10679.tree, k, found__10680);
  if(t__10681 == null) {
    if(cljs.core.nth.call(null, found__10680, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10679.comp, null, 0, this__10679.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10679.comp, t__10681.blacken(), this__10679.cnt - 1, this__10679.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10695 = cljs.core.seq.call(null, keyvals);
    var out__10696 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10695) {
        var G__10697 = cljs.core.nnext.call(null, in__10695);
        var G__10698 = cljs.core.assoc_BANG_.call(null, out__10696, cljs.core.first.call(null, in__10695), cljs.core.second.call(null, in__10695));
        in__10695 = G__10697;
        out__10696 = G__10698;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10696)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10699) {
    var keyvals = cljs.core.seq(arglist__10699);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10700) {
    var keyvals = cljs.core.seq(arglist__10700);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10704 = [];
    var obj__10705 = {};
    var kvs__10706 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10706) {
        ks__10704.push(cljs.core.first.call(null, kvs__10706));
        obj__10705[cljs.core.first.call(null, kvs__10706)] = cljs.core.second.call(null, kvs__10706);
        var G__10707 = cljs.core.nnext.call(null, kvs__10706);
        kvs__10706 = G__10707;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10704, obj__10705)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10708) {
    var keyvals = cljs.core.seq(arglist__10708);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10711 = cljs.core.seq.call(null, keyvals);
    var out__10712 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10711) {
        var G__10713 = cljs.core.nnext.call(null, in__10711);
        var G__10714 = cljs.core.assoc.call(null, out__10712, cljs.core.first.call(null, in__10711), cljs.core.second.call(null, in__10711));
        in__10711 = G__10713;
        out__10712 = G__10714;
        continue
      }else {
        return out__10712
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10715) {
    var keyvals = cljs.core.seq(arglist__10715);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10718 = cljs.core.seq.call(null, keyvals);
    var out__10719 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10718) {
        var G__10720 = cljs.core.nnext.call(null, in__10718);
        var G__10721 = cljs.core.assoc.call(null, out__10719, cljs.core.first.call(null, in__10718), cljs.core.second.call(null, in__10718));
        in__10718 = G__10720;
        out__10719 = G__10721;
        continue
      }else {
        return out__10719
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10722) {
    var comparator = cljs.core.first(arglist__10722);
    var keyvals = cljs.core.rest(arglist__10722);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10723_SHARP_, p2__10724_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10726 = p1__10723_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10726)) {
            return or__3824__auto____10726
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10724_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10727) {
    var maps = cljs.core.seq(arglist__10727);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10735 = function(m, e) {
        var k__10733 = cljs.core.first.call(null, e);
        var v__10734 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10733)) {
          return cljs.core.assoc.call(null, m, k__10733, f.call(null, cljs.core._lookup.call(null, m, k__10733, null), v__10734))
        }else {
          return cljs.core.assoc.call(null, m, k__10733, v__10734)
        }
      };
      var merge2__10737 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10735, function() {
          var or__3824__auto____10736 = m1;
          if(cljs.core.truth_(or__3824__auto____10736)) {
            return or__3824__auto____10736
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10737, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10738) {
    var f = cljs.core.first(arglist__10738);
    var maps = cljs.core.rest(arglist__10738);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10743 = cljs.core.ObjMap.EMPTY;
  var keys__10744 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10744) {
      var key__10745 = cljs.core.first.call(null, keys__10744);
      var entry__10746 = cljs.core._lookup.call(null, map, key__10745, "\ufdd0'cljs.core/not-found");
      var G__10747 = cljs.core.not_EQ_.call(null, entry__10746, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10743, key__10745, entry__10746) : ret__10743;
      var G__10748 = cljs.core.next.call(null, keys__10744);
      ret__10743 = G__10747;
      keys__10744 = G__10748;
      continue
    }else {
      return ret__10743
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10752 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10752.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10753 = this;
  var h__2192__auto____10754 = this__10753.__hash;
  if(!(h__2192__auto____10754 == null)) {
    return h__2192__auto____10754
  }else {
    var h__2192__auto____10755 = cljs.core.hash_iset.call(null, coll);
    this__10753.__hash = h__2192__auto____10755;
    return h__2192__auto____10755
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10756 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10757 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10757.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10778 = null;
  var G__10778__2 = function(this_sym10758, k) {
    var this__10760 = this;
    var this_sym10758__10761 = this;
    var coll__10762 = this_sym10758__10761;
    return coll__10762.cljs$core$ILookup$_lookup$arity$2(coll__10762, k)
  };
  var G__10778__3 = function(this_sym10759, k, not_found) {
    var this__10760 = this;
    var this_sym10759__10763 = this;
    var coll__10764 = this_sym10759__10763;
    return coll__10764.cljs$core$ILookup$_lookup$arity$3(coll__10764, k, not_found)
  };
  G__10778 = function(this_sym10759, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10778__2.call(this, this_sym10759, k);
      case 3:
        return G__10778__3.call(this, this_sym10759, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10778
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10750, args10751) {
  var this__10765 = this;
  return this_sym10750.call.apply(this_sym10750, [this_sym10750].concat(args10751.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10766 = this;
  return new cljs.core.PersistentHashSet(this__10766.meta, cljs.core.assoc.call(null, this__10766.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10767 = this;
  var this__10768 = this;
  return cljs.core.pr_str.call(null, this__10768)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10769 = this;
  return cljs.core.keys.call(null, this__10769.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10770 = this;
  return new cljs.core.PersistentHashSet(this__10770.meta, cljs.core.dissoc.call(null, this__10770.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10771 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10772 = this;
  var and__3822__auto____10773 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10773) {
    var and__3822__auto____10774 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10774) {
      return cljs.core.every_QMARK_.call(null, function(p1__10749_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10749_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10774
    }
  }else {
    return and__3822__auto____10773
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10775 = this;
  return new cljs.core.PersistentHashSet(meta, this__10775.hash_map, this__10775.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10776 = this;
  return this__10776.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10777 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10777.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10779 = cljs.core.count.call(null, items);
  var i__10780 = 0;
  var out__10781 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10780 < len__10779) {
      var G__10782 = i__10780 + 1;
      var G__10783 = cljs.core.conj_BANG_.call(null, out__10781, items[i__10780]);
      i__10780 = G__10782;
      out__10781 = G__10783;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10781)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10801 = null;
  var G__10801__2 = function(this_sym10787, k) {
    var this__10789 = this;
    var this_sym10787__10790 = this;
    var tcoll__10791 = this_sym10787__10790;
    if(cljs.core._lookup.call(null, this__10789.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10801__3 = function(this_sym10788, k, not_found) {
    var this__10789 = this;
    var this_sym10788__10792 = this;
    var tcoll__10793 = this_sym10788__10792;
    if(cljs.core._lookup.call(null, this__10789.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10801 = function(this_sym10788, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10801__2.call(this, this_sym10788, k);
      case 3:
        return G__10801__3.call(this, this_sym10788, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10801
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10785, args10786) {
  var this__10794 = this;
  return this_sym10785.call.apply(this_sym10785, [this_sym10785].concat(args10786.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10795 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10796 = this;
  if(cljs.core._lookup.call(null, this__10796.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10797 = this;
  return cljs.core.count.call(null, this__10797.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10798 = this;
  this__10798.transient_map = cljs.core.dissoc_BANG_.call(null, this__10798.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10799 = this;
  this__10799.transient_map = cljs.core.assoc_BANG_.call(null, this__10799.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10800 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10800.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10804 = this;
  var h__2192__auto____10805 = this__10804.__hash;
  if(!(h__2192__auto____10805 == null)) {
    return h__2192__auto____10805
  }else {
    var h__2192__auto____10806 = cljs.core.hash_iset.call(null, coll);
    this__10804.__hash = h__2192__auto____10806;
    return h__2192__auto____10806
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10807 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10808 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10808.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10834 = null;
  var G__10834__2 = function(this_sym10809, k) {
    var this__10811 = this;
    var this_sym10809__10812 = this;
    var coll__10813 = this_sym10809__10812;
    return coll__10813.cljs$core$ILookup$_lookup$arity$2(coll__10813, k)
  };
  var G__10834__3 = function(this_sym10810, k, not_found) {
    var this__10811 = this;
    var this_sym10810__10814 = this;
    var coll__10815 = this_sym10810__10814;
    return coll__10815.cljs$core$ILookup$_lookup$arity$3(coll__10815, k, not_found)
  };
  G__10834 = function(this_sym10810, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10834__2.call(this, this_sym10810, k);
      case 3:
        return G__10834__3.call(this, this_sym10810, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10834
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10802, args10803) {
  var this__10816 = this;
  return this_sym10802.call.apply(this_sym10802, [this_sym10802].concat(args10803.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10817 = this;
  return new cljs.core.PersistentTreeSet(this__10817.meta, cljs.core.assoc.call(null, this__10817.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10818 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10818.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10819 = this;
  var this__10820 = this;
  return cljs.core.pr_str.call(null, this__10820)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10821 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10821.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10822 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10822.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10823 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10824 = this;
  return cljs.core._comparator.call(null, this__10824.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10825 = this;
  return cljs.core.keys.call(null, this__10825.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10826 = this;
  return new cljs.core.PersistentTreeSet(this__10826.meta, cljs.core.dissoc.call(null, this__10826.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10827 = this;
  return cljs.core.count.call(null, this__10827.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10828 = this;
  var and__3822__auto____10829 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10829) {
    var and__3822__auto____10830 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10830) {
      return cljs.core.every_QMARK_.call(null, function(p1__10784_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10784_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10830
    }
  }else {
    return and__3822__auto____10829
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10831 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10831.tree_map, this__10831.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10832 = this;
  return this__10832.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10833 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10833.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10839__delegate = function(keys) {
      var in__10837 = cljs.core.seq.call(null, keys);
      var out__10838 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10837)) {
          var G__10840 = cljs.core.next.call(null, in__10837);
          var G__10841 = cljs.core.conj_BANG_.call(null, out__10838, cljs.core.first.call(null, in__10837));
          in__10837 = G__10840;
          out__10838 = G__10841;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10838)
        }
        break
      }
    };
    var G__10839 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10839__delegate.call(this, keys)
    };
    G__10839.cljs$lang$maxFixedArity = 0;
    G__10839.cljs$lang$applyTo = function(arglist__10842) {
      var keys = cljs.core.seq(arglist__10842);
      return G__10839__delegate(keys)
    };
    G__10839.cljs$lang$arity$variadic = G__10839__delegate;
    return G__10839
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10843) {
    var keys = cljs.core.seq(arglist__10843);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10845) {
    var comparator = cljs.core.first(arglist__10845);
    var keys = cljs.core.rest(arglist__10845);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10851 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10852 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10852)) {
        var e__10853 = temp__3971__auto____10852;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10853))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10851, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10844_SHARP_) {
      var temp__3971__auto____10854 = cljs.core.find.call(null, smap, p1__10844_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10854)) {
        var e__10855 = temp__3971__auto____10854;
        return cljs.core.second.call(null, e__10855)
      }else {
        return p1__10844_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10885 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10878, seen) {
        while(true) {
          var vec__10879__10880 = p__10878;
          var f__10881 = cljs.core.nth.call(null, vec__10879__10880, 0, null);
          var xs__10882 = vec__10879__10880;
          var temp__3974__auto____10883 = cljs.core.seq.call(null, xs__10882);
          if(temp__3974__auto____10883) {
            var s__10884 = temp__3974__auto____10883;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10881)) {
              var G__10886 = cljs.core.rest.call(null, s__10884);
              var G__10887 = seen;
              p__10878 = G__10886;
              seen = G__10887;
              continue
            }else {
              return cljs.core.cons.call(null, f__10881, step.call(null, cljs.core.rest.call(null, s__10884), cljs.core.conj.call(null, seen, f__10881)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10885.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10890 = cljs.core.PersistentVector.EMPTY;
  var s__10891 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10891)) {
      var G__10892 = cljs.core.conj.call(null, ret__10890, cljs.core.first.call(null, s__10891));
      var G__10893 = cljs.core.next.call(null, s__10891);
      ret__10890 = G__10892;
      s__10891 = G__10893;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10890)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10896 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10896) {
        return or__3824__auto____10896
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10897 = x.lastIndexOf("/");
      if(i__10897 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10897 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10900 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10900) {
      return or__3824__auto____10900
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10901 = x.lastIndexOf("/");
    if(i__10901 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10901)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10908 = cljs.core.ObjMap.EMPTY;
  var ks__10909 = cljs.core.seq.call(null, keys);
  var vs__10910 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10911 = ks__10909;
      if(and__3822__auto____10911) {
        return vs__10910
      }else {
        return and__3822__auto____10911
      }
    }()) {
      var G__10912 = cljs.core.assoc.call(null, map__10908, cljs.core.first.call(null, ks__10909), cljs.core.first.call(null, vs__10910));
      var G__10913 = cljs.core.next.call(null, ks__10909);
      var G__10914 = cljs.core.next.call(null, vs__10910);
      map__10908 = G__10912;
      ks__10909 = G__10913;
      vs__10910 = G__10914;
      continue
    }else {
      return map__10908
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10917__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10902_SHARP_, p2__10903_SHARP_) {
        return max_key.call(null, k, p1__10902_SHARP_, p2__10903_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10917 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10917__delegate.call(this, k, x, y, more)
    };
    G__10917.cljs$lang$maxFixedArity = 3;
    G__10917.cljs$lang$applyTo = function(arglist__10918) {
      var k = cljs.core.first(arglist__10918);
      var x = cljs.core.first(cljs.core.next(arglist__10918));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10918)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10918)));
      return G__10917__delegate(k, x, y, more)
    };
    G__10917.cljs$lang$arity$variadic = G__10917__delegate;
    return G__10917
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10919__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10915_SHARP_, p2__10916_SHARP_) {
        return min_key.call(null, k, p1__10915_SHARP_, p2__10916_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10919 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10919__delegate.call(this, k, x, y, more)
    };
    G__10919.cljs$lang$maxFixedArity = 3;
    G__10919.cljs$lang$applyTo = function(arglist__10920) {
      var k = cljs.core.first(arglist__10920);
      var x = cljs.core.first(cljs.core.next(arglist__10920));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10920)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10920)));
      return G__10919__delegate(k, x, y, more)
    };
    G__10919.cljs$lang$arity$variadic = G__10919__delegate;
    return G__10919
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10923 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10923) {
        var s__10924 = temp__3974__auto____10923;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10924), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10924)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10927 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10927) {
      var s__10928 = temp__3974__auto____10927;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10928)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10928), take_while.call(null, pred, cljs.core.rest.call(null, s__10928)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10930 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10930.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10942 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____10943 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____10943)) {
        var vec__10944__10945 = temp__3974__auto____10943;
        var e__10946 = cljs.core.nth.call(null, vec__10944__10945, 0, null);
        var s__10947 = vec__10944__10945;
        if(cljs.core.truth_(include__10942.call(null, e__10946))) {
          return s__10947
        }else {
          return cljs.core.next.call(null, s__10947)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10942, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10948 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____10948)) {
      var vec__10949__10950 = temp__3974__auto____10948;
      var e__10951 = cljs.core.nth.call(null, vec__10949__10950, 0, null);
      var s__10952 = vec__10949__10950;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10951)) ? s__10952 : cljs.core.next.call(null, s__10952))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10964 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____10965 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____10965)) {
        var vec__10966__10967 = temp__3974__auto____10965;
        var e__10968 = cljs.core.nth.call(null, vec__10966__10967, 0, null);
        var s__10969 = vec__10966__10967;
        if(cljs.core.truth_(include__10964.call(null, e__10968))) {
          return s__10969
        }else {
          return cljs.core.next.call(null, s__10969)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10964, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10970 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____10970)) {
      var vec__10971__10972 = temp__3974__auto____10970;
      var e__10973 = cljs.core.nth.call(null, vec__10971__10972, 0, null);
      var s__10974 = vec__10971__10972;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10973)) ? s__10974 : cljs.core.next.call(null, s__10974))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10975 = this;
  var h__2192__auto____10976 = this__10975.__hash;
  if(!(h__2192__auto____10976 == null)) {
    return h__2192__auto____10976
  }else {
    var h__2192__auto____10977 = cljs.core.hash_coll.call(null, rng);
    this__10975.__hash = h__2192__auto____10977;
    return h__2192__auto____10977
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10978 = this;
  if(this__10978.step > 0) {
    if(this__10978.start + this__10978.step < this__10978.end) {
      return new cljs.core.Range(this__10978.meta, this__10978.start + this__10978.step, this__10978.end, this__10978.step, null)
    }else {
      return null
    }
  }else {
    if(this__10978.start + this__10978.step > this__10978.end) {
      return new cljs.core.Range(this__10978.meta, this__10978.start + this__10978.step, this__10978.end, this__10978.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10979 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10980 = this;
  var this__10981 = this;
  return cljs.core.pr_str.call(null, this__10981)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10982 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10983 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10984 = this;
  if(this__10984.step > 0) {
    if(this__10984.start < this__10984.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10984.start > this__10984.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10985 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10985.end - this__10985.start) / this__10985.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10986 = this;
  return this__10986.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10987 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10987.meta, this__10987.start + this__10987.step, this__10987.end, this__10987.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10988 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10989 = this;
  return new cljs.core.Range(meta, this__10989.start, this__10989.end, this__10989.step, this__10989.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10990 = this;
  return this__10990.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10991 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10991.start + n * this__10991.step
  }else {
    if(function() {
      var and__3822__auto____10992 = this__10991.start > this__10991.end;
      if(and__3822__auto____10992) {
        return this__10991.step === 0
      }else {
        return and__3822__auto____10992
      }
    }()) {
      return this__10991.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10993 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10993.start + n * this__10993.step
  }else {
    if(function() {
      var and__3822__auto____10994 = this__10993.start > this__10993.end;
      if(and__3822__auto____10994) {
        return this__10993.step === 0
      }else {
        return and__3822__auto____10994
      }
    }()) {
      return this__10993.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10995 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10995.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10998 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10998) {
      var s__10999 = temp__3974__auto____10998;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10999), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10999)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11006 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11006) {
      var s__11007 = temp__3974__auto____11006;
      var fst__11008 = cljs.core.first.call(null, s__11007);
      var fv__11009 = f.call(null, fst__11008);
      var run__11010 = cljs.core.cons.call(null, fst__11008, cljs.core.take_while.call(null, function(p1__11000_SHARP_) {
        return cljs.core._EQ_.call(null, fv__11009, f.call(null, p1__11000_SHARP_))
      }, cljs.core.next.call(null, s__11007)));
      return cljs.core.cons.call(null, run__11010, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__11010), s__11007))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____11025 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____11025) {
        var s__11026 = temp__3971__auto____11025;
        return reductions.call(null, f, cljs.core.first.call(null, s__11026), cljs.core.rest.call(null, s__11026))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11027 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11027) {
        var s__11028 = temp__3974__auto____11027;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__11028)), cljs.core.rest.call(null, s__11028))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11031 = null;
      var G__11031__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__11031__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__11031__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__11031__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__11031__4 = function() {
        var G__11032__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__11032 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11032__delegate.call(this, x, y, z, args)
        };
        G__11032.cljs$lang$maxFixedArity = 3;
        G__11032.cljs$lang$applyTo = function(arglist__11033) {
          var x = cljs.core.first(arglist__11033);
          var y = cljs.core.first(cljs.core.next(arglist__11033));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11033)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11033)));
          return G__11032__delegate(x, y, z, args)
        };
        G__11032.cljs$lang$arity$variadic = G__11032__delegate;
        return G__11032
      }();
      G__11031 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11031__0.call(this);
          case 1:
            return G__11031__1.call(this, x);
          case 2:
            return G__11031__2.call(this, x, y);
          case 3:
            return G__11031__3.call(this, x, y, z);
          default:
            return G__11031__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11031.cljs$lang$maxFixedArity = 3;
      G__11031.cljs$lang$applyTo = G__11031__4.cljs$lang$applyTo;
      return G__11031
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11034 = null;
      var G__11034__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__11034__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__11034__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__11034__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__11034__4 = function() {
        var G__11035__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__11035 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11035__delegate.call(this, x, y, z, args)
        };
        G__11035.cljs$lang$maxFixedArity = 3;
        G__11035.cljs$lang$applyTo = function(arglist__11036) {
          var x = cljs.core.first(arglist__11036);
          var y = cljs.core.first(cljs.core.next(arglist__11036));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11036)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11036)));
          return G__11035__delegate(x, y, z, args)
        };
        G__11035.cljs$lang$arity$variadic = G__11035__delegate;
        return G__11035
      }();
      G__11034 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11034__0.call(this);
          case 1:
            return G__11034__1.call(this, x);
          case 2:
            return G__11034__2.call(this, x, y);
          case 3:
            return G__11034__3.call(this, x, y, z);
          default:
            return G__11034__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11034.cljs$lang$maxFixedArity = 3;
      G__11034.cljs$lang$applyTo = G__11034__4.cljs$lang$applyTo;
      return G__11034
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11037 = null;
      var G__11037__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__11037__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__11037__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__11037__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__11037__4 = function() {
        var G__11038__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__11038 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11038__delegate.call(this, x, y, z, args)
        };
        G__11038.cljs$lang$maxFixedArity = 3;
        G__11038.cljs$lang$applyTo = function(arglist__11039) {
          var x = cljs.core.first(arglist__11039);
          var y = cljs.core.first(cljs.core.next(arglist__11039));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11039)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11039)));
          return G__11038__delegate(x, y, z, args)
        };
        G__11038.cljs$lang$arity$variadic = G__11038__delegate;
        return G__11038
      }();
      G__11037 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11037__0.call(this);
          case 1:
            return G__11037__1.call(this, x);
          case 2:
            return G__11037__2.call(this, x, y);
          case 3:
            return G__11037__3.call(this, x, y, z);
          default:
            return G__11037__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11037.cljs$lang$maxFixedArity = 3;
      G__11037.cljs$lang$applyTo = G__11037__4.cljs$lang$applyTo;
      return G__11037
    }()
  };
  var juxt__4 = function() {
    var G__11040__delegate = function(f, g, h, fs) {
      var fs__11030 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__11041 = null;
        var G__11041__0 = function() {
          return cljs.core.reduce.call(null, function(p1__11011_SHARP_, p2__11012_SHARP_) {
            return cljs.core.conj.call(null, p1__11011_SHARP_, p2__11012_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__11030)
        };
        var G__11041__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__11013_SHARP_, p2__11014_SHARP_) {
            return cljs.core.conj.call(null, p1__11013_SHARP_, p2__11014_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__11030)
        };
        var G__11041__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__11015_SHARP_, p2__11016_SHARP_) {
            return cljs.core.conj.call(null, p1__11015_SHARP_, p2__11016_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__11030)
        };
        var G__11041__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__11017_SHARP_, p2__11018_SHARP_) {
            return cljs.core.conj.call(null, p1__11017_SHARP_, p2__11018_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__11030)
        };
        var G__11041__4 = function() {
          var G__11042__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__11019_SHARP_, p2__11020_SHARP_) {
              return cljs.core.conj.call(null, p1__11019_SHARP_, cljs.core.apply.call(null, p2__11020_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__11030)
          };
          var G__11042 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11042__delegate.call(this, x, y, z, args)
          };
          G__11042.cljs$lang$maxFixedArity = 3;
          G__11042.cljs$lang$applyTo = function(arglist__11043) {
            var x = cljs.core.first(arglist__11043);
            var y = cljs.core.first(cljs.core.next(arglist__11043));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11043)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11043)));
            return G__11042__delegate(x, y, z, args)
          };
          G__11042.cljs$lang$arity$variadic = G__11042__delegate;
          return G__11042
        }();
        G__11041 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__11041__0.call(this);
            case 1:
              return G__11041__1.call(this, x);
            case 2:
              return G__11041__2.call(this, x, y);
            case 3:
              return G__11041__3.call(this, x, y, z);
            default:
              return G__11041__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__11041.cljs$lang$maxFixedArity = 3;
        G__11041.cljs$lang$applyTo = G__11041__4.cljs$lang$applyTo;
        return G__11041
      }()
    };
    var G__11040 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11040__delegate.call(this, f, g, h, fs)
    };
    G__11040.cljs$lang$maxFixedArity = 3;
    G__11040.cljs$lang$applyTo = function(arglist__11044) {
      var f = cljs.core.first(arglist__11044);
      var g = cljs.core.first(cljs.core.next(arglist__11044));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11044)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11044)));
      return G__11040__delegate(f, g, h, fs)
    };
    G__11040.cljs$lang$arity$variadic = G__11040__delegate;
    return G__11040
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__11047 = cljs.core.next.call(null, coll);
        coll = G__11047;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____11046 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____11046) {
          return n > 0
        }else {
          return and__3822__auto____11046
        }
      }())) {
        var G__11048 = n - 1;
        var G__11049 = cljs.core.next.call(null, coll);
        n = G__11048;
        coll = G__11049;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__11051 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__11051), s)) {
    if(cljs.core.count.call(null, matches__11051) === 1) {
      return cljs.core.first.call(null, matches__11051)
    }else {
      return cljs.core.vec.call(null, matches__11051)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__11053 = re.exec(s);
  if(matches__11053 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__11053) === 1) {
      return cljs.core.first.call(null, matches__11053)
    }else {
      return cljs.core.vec.call(null, matches__11053)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__11058 = cljs.core.re_find.call(null, re, s);
  var match_idx__11059 = s.search(re);
  var match_str__11060 = cljs.core.coll_QMARK_.call(null, match_data__11058) ? cljs.core.first.call(null, match_data__11058) : match_data__11058;
  var post_match__11061 = cljs.core.subs.call(null, s, match_idx__11059 + cljs.core.count.call(null, match_str__11060));
  if(cljs.core.truth_(match_data__11058)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__11058, re_seq.call(null, re, post_match__11061))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11068__11069 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___11070 = cljs.core.nth.call(null, vec__11068__11069, 0, null);
  var flags__11071 = cljs.core.nth.call(null, vec__11068__11069, 1, null);
  var pattern__11072 = cljs.core.nth.call(null, vec__11068__11069, 2, null);
  return new RegExp(pattern__11072, flags__11071)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__11062_SHARP_) {
    return print_one.call(null, p1__11062_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____11082 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11082)) {
            var and__3822__auto____11086 = function() {
              var G__11083__11084 = obj;
              if(G__11083__11084) {
                if(function() {
                  var or__3824__auto____11085 = G__11083__11084.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11085) {
                    return or__3824__auto____11085
                  }else {
                    return G__11083__11084.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11083__11084.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11083__11084)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11083__11084)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11086)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11086
            }
          }else {
            return and__3822__auto____11082
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____11087 = !(obj == null);
          if(and__3822__auto____11087) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11087
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__11088__11089 = obj;
          if(G__11088__11089) {
            if(function() {
              var or__3824__auto____11090 = G__11088__11089.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____11090) {
                return or__3824__auto____11090
              }else {
                return G__11088__11089.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__11088__11089.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11088__11089)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11088__11089)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__11110 = new goog.string.StringBuffer;
  var G__11111__11112 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11111__11112) {
    var string__11113 = cljs.core.first.call(null, G__11111__11112);
    var G__11111__11114 = G__11111__11112;
    while(true) {
      sb__11110.append(string__11113);
      var temp__3974__auto____11115 = cljs.core.next.call(null, G__11111__11114);
      if(temp__3974__auto____11115) {
        var G__11111__11116 = temp__3974__auto____11115;
        var G__11129 = cljs.core.first.call(null, G__11111__11116);
        var G__11130 = G__11111__11116;
        string__11113 = G__11129;
        G__11111__11114 = G__11130;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11117__11118 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11117__11118) {
    var obj__11119 = cljs.core.first.call(null, G__11117__11118);
    var G__11117__11120 = G__11117__11118;
    while(true) {
      sb__11110.append(" ");
      var G__11121__11122 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11119, opts));
      if(G__11121__11122) {
        var string__11123 = cljs.core.first.call(null, G__11121__11122);
        var G__11121__11124 = G__11121__11122;
        while(true) {
          sb__11110.append(string__11123);
          var temp__3974__auto____11125 = cljs.core.next.call(null, G__11121__11124);
          if(temp__3974__auto____11125) {
            var G__11121__11126 = temp__3974__auto____11125;
            var G__11131 = cljs.core.first.call(null, G__11121__11126);
            var G__11132 = G__11121__11126;
            string__11123 = G__11131;
            G__11121__11124 = G__11132;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11127 = cljs.core.next.call(null, G__11117__11120);
      if(temp__3974__auto____11127) {
        var G__11117__11128 = temp__3974__auto____11127;
        var G__11133 = cljs.core.first.call(null, G__11117__11128);
        var G__11134 = G__11117__11128;
        obj__11119 = G__11133;
        G__11117__11120 = G__11134;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__11110
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__11136 = cljs.core.pr_sb.call(null, objs, opts);
  sb__11136.append("\n");
  return[cljs.core.str(sb__11136)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__11155__11156 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11155__11156) {
    var string__11157 = cljs.core.first.call(null, G__11155__11156);
    var G__11155__11158 = G__11155__11156;
    while(true) {
      cljs.core.string_print.call(null, string__11157);
      var temp__3974__auto____11159 = cljs.core.next.call(null, G__11155__11158);
      if(temp__3974__auto____11159) {
        var G__11155__11160 = temp__3974__auto____11159;
        var G__11173 = cljs.core.first.call(null, G__11155__11160);
        var G__11174 = G__11155__11160;
        string__11157 = G__11173;
        G__11155__11158 = G__11174;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11161__11162 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11161__11162) {
    var obj__11163 = cljs.core.first.call(null, G__11161__11162);
    var G__11161__11164 = G__11161__11162;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__11165__11166 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11163, opts));
      if(G__11165__11166) {
        var string__11167 = cljs.core.first.call(null, G__11165__11166);
        var G__11165__11168 = G__11165__11166;
        while(true) {
          cljs.core.string_print.call(null, string__11167);
          var temp__3974__auto____11169 = cljs.core.next.call(null, G__11165__11168);
          if(temp__3974__auto____11169) {
            var G__11165__11170 = temp__3974__auto____11169;
            var G__11175 = cljs.core.first.call(null, G__11165__11170);
            var G__11176 = G__11165__11170;
            string__11167 = G__11175;
            G__11165__11168 = G__11176;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11171 = cljs.core.next.call(null, G__11161__11164);
      if(temp__3974__auto____11171) {
        var G__11161__11172 = temp__3974__auto____11171;
        var G__11177 = cljs.core.first.call(null, G__11161__11172);
        var G__11178 = G__11161__11172;
        obj__11163 = G__11177;
        G__11161__11164 = G__11178;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11179) {
    var objs = cljs.core.seq(arglist__11179);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11180) {
    var objs = cljs.core.seq(arglist__11180);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11181) {
    var objs = cljs.core.seq(arglist__11181);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11182) {
    var objs = cljs.core.seq(arglist__11182);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11183) {
    var objs = cljs.core.seq(arglist__11183);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11184) {
    var objs = cljs.core.seq(arglist__11184);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11185) {
    var objs = cljs.core.seq(arglist__11185);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11186) {
    var objs = cljs.core.seq(arglist__11186);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__11187) {
    var fmt = cljs.core.first(arglist__11187);
    var args = cljs.core.rest(arglist__11187);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11188 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11188, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11189 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11189, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11190 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11190, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____11191 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11191)) {
        var nspc__11192 = temp__3974__auto____11191;
        return[cljs.core.str(nspc__11192), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11193 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11193)) {
          var nspc__11194 = temp__3974__auto____11193;
          return[cljs.core.str(nspc__11194), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11195 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11195, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11197 = function(n, len) {
    var ns__11196 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11196) < len) {
        var G__11199 = [cljs.core.str("0"), cljs.core.str(ns__11196)].join("");
        ns__11196 = G__11199;
        continue
      }else {
        return ns__11196
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11197.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11197.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11197.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11197.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11197.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11197.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11198 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11198, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11200 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11201 = this;
  var G__11202__11203 = cljs.core.seq.call(null, this__11201.watches);
  if(G__11202__11203) {
    var G__11205__11207 = cljs.core.first.call(null, G__11202__11203);
    var vec__11206__11208 = G__11205__11207;
    var key__11209 = cljs.core.nth.call(null, vec__11206__11208, 0, null);
    var f__11210 = cljs.core.nth.call(null, vec__11206__11208, 1, null);
    var G__11202__11211 = G__11202__11203;
    var G__11205__11212 = G__11205__11207;
    var G__11202__11213 = G__11202__11211;
    while(true) {
      var vec__11214__11215 = G__11205__11212;
      var key__11216 = cljs.core.nth.call(null, vec__11214__11215, 0, null);
      var f__11217 = cljs.core.nth.call(null, vec__11214__11215, 1, null);
      var G__11202__11218 = G__11202__11213;
      f__11217.call(null, key__11216, this$, oldval, newval);
      var temp__3974__auto____11219 = cljs.core.next.call(null, G__11202__11218);
      if(temp__3974__auto____11219) {
        var G__11202__11220 = temp__3974__auto____11219;
        var G__11227 = cljs.core.first.call(null, G__11202__11220);
        var G__11228 = G__11202__11220;
        G__11205__11212 = G__11227;
        G__11202__11213 = G__11228;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11221 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11221.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11222 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11222.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11223 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11223.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11224 = this;
  return this__11224.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11225 = this;
  return this__11225.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11226 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11240__delegate = function(x, p__11229) {
      var map__11235__11236 = p__11229;
      var map__11235__11237 = cljs.core.seq_QMARK_.call(null, map__11235__11236) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11235__11236) : map__11235__11236;
      var validator__11238 = cljs.core._lookup.call(null, map__11235__11237, "\ufdd0'validator", null);
      var meta__11239 = cljs.core._lookup.call(null, map__11235__11237, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11239, validator__11238, null)
    };
    var G__11240 = function(x, var_args) {
      var p__11229 = null;
      if(goog.isDef(var_args)) {
        p__11229 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11240__delegate.call(this, x, p__11229)
    };
    G__11240.cljs$lang$maxFixedArity = 1;
    G__11240.cljs$lang$applyTo = function(arglist__11241) {
      var x = cljs.core.first(arglist__11241);
      var p__11229 = cljs.core.rest(arglist__11241);
      return G__11240__delegate(x, p__11229)
    };
    G__11240.cljs$lang$arity$variadic = G__11240__delegate;
    return G__11240
  }();
  atom = function(x, var_args) {
    var p__11229 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11245 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11245)) {
    var validate__11246 = temp__3974__auto____11245;
    if(cljs.core.truth_(validate__11246.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__11247 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11247, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11248__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11248 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11248__delegate.call(this, a, f, x, y, z, more)
    };
    G__11248.cljs$lang$maxFixedArity = 5;
    G__11248.cljs$lang$applyTo = function(arglist__11249) {
      var a = cljs.core.first(arglist__11249);
      var f = cljs.core.first(cljs.core.next(arglist__11249));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11249)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11249))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11249)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11249)))));
      return G__11248__delegate(a, f, x, y, z, more)
    };
    G__11248.cljs$lang$arity$variadic = G__11248__delegate;
    return G__11248
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11250) {
    var iref = cljs.core.first(arglist__11250);
    var f = cljs.core.first(cljs.core.next(arglist__11250));
    var args = cljs.core.rest(cljs.core.next(arglist__11250));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11251 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11251.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11252 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11252.state, function(p__11253) {
    var map__11254__11255 = p__11253;
    var map__11254__11256 = cljs.core.seq_QMARK_.call(null, map__11254__11255) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11254__11255) : map__11254__11255;
    var curr_state__11257 = map__11254__11256;
    var done__11258 = cljs.core._lookup.call(null, map__11254__11256, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11258)) {
      return curr_state__11257
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11252.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11279__11280 = options;
    var map__11279__11281 = cljs.core.seq_QMARK_.call(null, map__11279__11280) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11279__11280) : map__11279__11280;
    var keywordize_keys__11282 = cljs.core._lookup.call(null, map__11279__11281, "\ufdd0'keywordize-keys", null);
    var keyfn__11283 = cljs.core.truth_(keywordize_keys__11282) ? cljs.core.keyword : cljs.core.str;
    var f__11298 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____11297 = function iter__11291(s__11292) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11292__11295 = s__11292;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11292__11295)) {
                        var k__11296 = cljs.core.first.call(null, s__11292__11295);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11283.call(null, k__11296), thisfn.call(null, x[k__11296])], true), iter__11291.call(null, cljs.core.rest.call(null, s__11292__11295)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____11297.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11298.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11299) {
    var x = cljs.core.first(arglist__11299);
    var options = cljs.core.rest(arglist__11299);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11304 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11308__delegate = function(args) {
      var temp__3971__auto____11305 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11304), args, null);
      if(cljs.core.truth_(temp__3971__auto____11305)) {
        var v__11306 = temp__3971__auto____11305;
        return v__11306
      }else {
        var ret__11307 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11304, cljs.core.assoc, args, ret__11307);
        return ret__11307
      }
    };
    var G__11308 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11308__delegate.call(this, args)
    };
    G__11308.cljs$lang$maxFixedArity = 0;
    G__11308.cljs$lang$applyTo = function(arglist__11309) {
      var args = cljs.core.seq(arglist__11309);
      return G__11308__delegate(args)
    };
    G__11308.cljs$lang$arity$variadic = G__11308__delegate;
    return G__11308
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11311 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11311)) {
        var G__11312 = ret__11311;
        f = G__11312;
        continue
      }else {
        return ret__11311
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11313__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11313 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11313__delegate.call(this, f, args)
    };
    G__11313.cljs$lang$maxFixedArity = 1;
    G__11313.cljs$lang$applyTo = function(arglist__11314) {
      var f = cljs.core.first(arglist__11314);
      var args = cljs.core.rest(arglist__11314);
      return G__11313__delegate(f, args)
    };
    G__11313.cljs$lang$arity$variadic = G__11313__delegate;
    return G__11313
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11316 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11316, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11316, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11325 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11325) {
      return or__3824__auto____11325
    }else {
      var or__3824__auto____11326 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11326) {
        return or__3824__auto____11326
      }else {
        var and__3822__auto____11327 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11327) {
          var and__3822__auto____11328 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11328) {
            var and__3822__auto____11329 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11329) {
              var ret__11330 = true;
              var i__11331 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11332 = cljs.core.not.call(null, ret__11330);
                  if(or__3824__auto____11332) {
                    return or__3824__auto____11332
                  }else {
                    return i__11331 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11330
                }else {
                  var G__11333 = isa_QMARK_.call(null, h, child.call(null, i__11331), parent.call(null, i__11331));
                  var G__11334 = i__11331 + 1;
                  ret__11330 = G__11333;
                  i__11331 = G__11334;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11329
            }
          }else {
            return and__3822__auto____11328
          }
        }else {
          return and__3822__auto____11327
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__11343 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11344 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11345 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11346 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11347 = cljs.core.contains_QMARK_.call(null, tp__11343.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11345.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11345.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11343, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11346.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11344, parent, ta__11345), "\ufdd0'descendants":tf__11346.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11345, tag, td__11344)})
    }();
    if(cljs.core.truth_(or__3824__auto____11347)) {
      return or__3824__auto____11347
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11352 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11353 = cljs.core.truth_(parentMap__11352.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11352.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11354 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11353)) ? cljs.core.assoc.call(null, parentMap__11352, tag, childsParents__11353) : cljs.core.dissoc.call(null, parentMap__11352, tag);
    var deriv_seq__11355 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11335_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11335_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11335_SHARP_), cljs.core.second.call(null, p1__11335_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11354)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11352.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11336_SHARP_, p2__11337_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11336_SHARP_, p2__11337_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11355))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11363 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11365 = cljs.core.truth_(function() {
    var and__3822__auto____11364 = xprefs__11363;
    if(cljs.core.truth_(and__3822__auto____11364)) {
      return xprefs__11363.call(null, y)
    }else {
      return and__3822__auto____11364
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11365)) {
    return or__3824__auto____11365
  }else {
    var or__3824__auto____11367 = function() {
      var ps__11366 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11366) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11366), prefer_table))) {
          }else {
          }
          var G__11370 = cljs.core.rest.call(null, ps__11366);
          ps__11366 = G__11370;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11367)) {
      return or__3824__auto____11367
    }else {
      var or__3824__auto____11369 = function() {
        var ps__11368 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11368) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11368), y, prefer_table))) {
            }else {
            }
            var G__11371 = cljs.core.rest.call(null, ps__11368);
            ps__11368 = G__11371;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11369)) {
        return or__3824__auto____11369
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11373 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11373)) {
    return or__3824__auto____11373
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11391 = cljs.core.reduce.call(null, function(be, p__11383) {
    var vec__11384__11385 = p__11383;
    var k__11386 = cljs.core.nth.call(null, vec__11384__11385, 0, null);
    var ___11387 = cljs.core.nth.call(null, vec__11384__11385, 1, null);
    var e__11388 = vec__11384__11385;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11386)) {
      var be2__11390 = cljs.core.truth_(function() {
        var or__3824__auto____11389 = be == null;
        if(or__3824__auto____11389) {
          return or__3824__auto____11389
        }else {
          return cljs.core.dominates.call(null, k__11386, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11388 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11390), k__11386, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11386), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11390)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11390
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11391)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11391));
      return cljs.core.second.call(null, best_entry__11391)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11396 = mf;
    if(and__3822__auto____11396) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11396
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____11397 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11398 = cljs.core._reset[goog.typeOf(x__2363__auto____11397)];
      if(or__3824__auto____11398) {
        return or__3824__auto____11398
      }else {
        var or__3824__auto____11399 = cljs.core._reset["_"];
        if(or__3824__auto____11399) {
          return or__3824__auto____11399
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11404 = mf;
    if(and__3822__auto____11404) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11404
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____11405 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11406 = cljs.core._add_method[goog.typeOf(x__2363__auto____11405)];
      if(or__3824__auto____11406) {
        return or__3824__auto____11406
      }else {
        var or__3824__auto____11407 = cljs.core._add_method["_"];
        if(or__3824__auto____11407) {
          return or__3824__auto____11407
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11412 = mf;
    if(and__3822__auto____11412) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11412
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____11413 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11414 = cljs.core._remove_method[goog.typeOf(x__2363__auto____11413)];
      if(or__3824__auto____11414) {
        return or__3824__auto____11414
      }else {
        var or__3824__auto____11415 = cljs.core._remove_method["_"];
        if(or__3824__auto____11415) {
          return or__3824__auto____11415
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11420 = mf;
    if(and__3822__auto____11420) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11420
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____11421 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11422 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____11421)];
      if(or__3824__auto____11422) {
        return or__3824__auto____11422
      }else {
        var or__3824__auto____11423 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11423) {
          return or__3824__auto____11423
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11428 = mf;
    if(and__3822__auto____11428) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11428
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____11429 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11430 = cljs.core._get_method[goog.typeOf(x__2363__auto____11429)];
      if(or__3824__auto____11430) {
        return or__3824__auto____11430
      }else {
        var or__3824__auto____11431 = cljs.core._get_method["_"];
        if(or__3824__auto____11431) {
          return or__3824__auto____11431
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11436 = mf;
    if(and__3822__auto____11436) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11436
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____11437 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11438 = cljs.core._methods[goog.typeOf(x__2363__auto____11437)];
      if(or__3824__auto____11438) {
        return or__3824__auto____11438
      }else {
        var or__3824__auto____11439 = cljs.core._methods["_"];
        if(or__3824__auto____11439) {
          return or__3824__auto____11439
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11444 = mf;
    if(and__3822__auto____11444) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11444
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____11445 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11446 = cljs.core._prefers[goog.typeOf(x__2363__auto____11445)];
      if(or__3824__auto____11446) {
        return or__3824__auto____11446
      }else {
        var or__3824__auto____11447 = cljs.core._prefers["_"];
        if(or__3824__auto____11447) {
          return or__3824__auto____11447
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11452 = mf;
    if(and__3822__auto____11452) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11452
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____11453 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11454 = cljs.core._dispatch[goog.typeOf(x__2363__auto____11453)];
      if(or__3824__auto____11454) {
        return or__3824__auto____11454
      }else {
        var or__3824__auto____11455 = cljs.core._dispatch["_"];
        if(or__3824__auto____11455) {
          return or__3824__auto____11455
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11458 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11459 = cljs.core._get_method.call(null, mf, dispatch_val__11458);
  if(cljs.core.truth_(target_fn__11459)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11458)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11459, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11460 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11461 = this;
  cljs.core.swap_BANG_.call(null, this__11461.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11461.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11461.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11461.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11462 = this;
  cljs.core.swap_BANG_.call(null, this__11462.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11462.method_cache, this__11462.method_table, this__11462.cached_hierarchy, this__11462.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11463 = this;
  cljs.core.swap_BANG_.call(null, this__11463.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11463.method_cache, this__11463.method_table, this__11463.cached_hierarchy, this__11463.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11464 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11464.cached_hierarchy), cljs.core.deref.call(null, this__11464.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11464.method_cache, this__11464.method_table, this__11464.cached_hierarchy, this__11464.hierarchy)
  }
  var temp__3971__auto____11465 = cljs.core.deref.call(null, this__11464.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11465)) {
    var target_fn__11466 = temp__3971__auto____11465;
    return target_fn__11466
  }else {
    var temp__3971__auto____11467 = cljs.core.find_and_cache_best_method.call(null, this__11464.name, dispatch_val, this__11464.hierarchy, this__11464.method_table, this__11464.prefer_table, this__11464.method_cache, this__11464.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11467)) {
      var target_fn__11468 = temp__3971__auto____11467;
      return target_fn__11468
    }else {
      return cljs.core.deref.call(null, this__11464.method_table).call(null, this__11464.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11469 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11469.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11469.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11469.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11469.method_cache, this__11469.method_table, this__11469.cached_hierarchy, this__11469.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11470 = this;
  return cljs.core.deref.call(null, this__11470.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11471 = this;
  return cljs.core.deref.call(null, this__11471.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11472 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11472.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11474__delegate = function(_, args) {
    var self__11473 = this;
    return cljs.core._dispatch.call(null, self__11473, args)
  };
  var G__11474 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11474__delegate.call(this, _, args)
  };
  G__11474.cljs$lang$maxFixedArity = 1;
  G__11474.cljs$lang$applyTo = function(arglist__11475) {
    var _ = cljs.core.first(arglist__11475);
    var args = cljs.core.rest(arglist__11475);
    return G__11474__delegate(_, args)
  };
  G__11474.cljs$lang$arity$variadic = G__11474__delegate;
  return G__11474
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11476 = this;
  return cljs.core._dispatch.call(null, self__11476, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11477 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11479, _) {
  var this__11478 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11478.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11480 = this;
  var and__3822__auto____11481 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____11481) {
    return this__11480.uuid === other.uuid
  }else {
    return and__3822__auto____11481
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11482 = this;
  var this__11483 = this;
  return cljs.core.pr_str.call(null, this__11483)
};
cljs.core.UUID;
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this)
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = ">~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "=") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$=":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~=":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|=":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if(">" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|=") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return query
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.require("goog.userAgent");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.events.EventTarget.call(this);
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
  if(this.isPollingRequired_()) {
    this.windowSizePollInterval_ = window.setInterval(goog.bind(this.checkForSizeChange_, this), goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE)
  }
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow)
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE = 500;
goog.dom.ViewportSizeMonitor.prototype.listenerKey_ = null;
goog.dom.ViewportSizeMonitor.prototype.window_ = null;
goog.dom.ViewportSizeMonitor.prototype.size_ = null;
goog.dom.ViewportSizeMonitor.prototype.windowSizePollInterval_ = null;
goog.dom.ViewportSizeMonitor.prototype.isPollingRequired_ = function() {
  return goog.userAgent.WEBKIT && goog.userAgent.WINDOWS || goog.userAgent.OPERA && this.window_.self != this.window_.top
};
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if(this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null
  }
  if(this.windowSizePollInterval_) {
    window.clearInterval(this.windowSizePollInterval_);
    this.windowSizePollInterval_ = null
  }
  this.window_ = null;
  this.size_ = null
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  this.checkForSizeChange_()
};
goog.dom.ViewportSizeMonitor.prototype.checkForSizeChange_ = function() {
  var size = goog.dom.getViewportSize(this.window_);
  if(!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE)
  }
};
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_string = function sel_to_string(item) {
  if(cljs.core.keyword_QMARK_.call(null, item)) {
    return cljs.core.name.call(null, item)
  }else {
    if(cljs.core.string_QMARK_.call(null, item)) {
      return item
    }else {
      if(cljs.core.coll_QMARK_.call(null, item)) {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12541_SHARP_) {
          return sel_to_string.call(null, p1__12541_SHARP_)
        }, item))
      }else {
        return null
      }
    }
  }
};
enfocus.enlive.syntax.convert = function convert(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.map.call(null, enfocus.enlive.syntax.sel_to_string, sel)))
  }
};
enfocus.enlive.syntax.attr_pairs = function attr_pairs(op, elms) {
  var ts__12554 = function(p__12549) {
    var vec__12550__12551 = p__12549;
    var x__12552 = cljs.core.nth.call(null, vec__12550__12551, 0, null);
    var y__12553 = cljs.core.nth.call(null, vec__12550__12551, 1, null);
    return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x__12552)), cljs.core.str(op), cljs.core.str("='"), cljs.core.str(y__12553), cljs.core.str("']")].join("")
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts__12554, cljs.core.partition.call(null, 2, elms)))
};
enfocus.enlive.syntax.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(elms) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12542_SHARP_) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, p1__12542_SHARP_)), cljs.core.str("]")].join("")
    }, elms))
  };
  var attr_QMARK_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_QMARK___delegate.call(this, elms)
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__12555) {
    var elms = cljs.core.seq(arglist__12555);
    return attr_QMARK___delegate(elms)
  };
  attr_QMARK_.cljs$lang$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_
}();
enfocus.enlive.syntax.attr_EQ_ = function() {
  var attr_EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "", elms)
  };
  var attr_EQ_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_EQ___delegate.call(this, elms)
  };
  attr_EQ_.cljs$lang$maxFixedArity = 0;
  attr_EQ_.cljs$lang$applyTo = function(arglist__12556) {
    var elms = cljs.core.seq(arglist__12556);
    return attr_EQ___delegate(elms)
  };
  attr_EQ_.cljs$lang$arity$variadic = attr_EQ___delegate;
  return attr_EQ_
}();
enfocus.enlive.syntax.attr_has = function() {
  var attr_has__delegate = function(x, vals) {
    var ts__12558 = function(y) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str("~='"), cljs.core.str(y), cljs.core.str("']")].join("")
    };
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts__12558, vals))
  };
  var attr_has = function(x, var_args) {
    var vals = null;
    if(goog.isDef(var_args)) {
      vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return attr_has__delegate.call(this, x, vals)
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__12559) {
    var x = cljs.core.first(arglist__12559);
    var vals = cljs.core.rest(arglist__12559);
    return attr_has__delegate(x, vals)
  };
  attr_has.cljs$lang$arity$variadic = attr_has__delegate;
  return attr_has
}();
enfocus.enlive.syntax.attr_starts = function() {
  var attr_starts__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "^", elms)
  };
  var attr_starts = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_starts__delegate.call(this, elms)
  };
  attr_starts.cljs$lang$maxFixedArity = 0;
  attr_starts.cljs$lang$applyTo = function(arglist__12560) {
    var elms = cljs.core.seq(arglist__12560);
    return attr_starts__delegate(elms)
  };
  attr_starts.cljs$lang$arity$variadic = attr_starts__delegate;
  return attr_starts
}();
enfocus.enlive.syntax.attr_ends = function() {
  var attr_ends__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "$", elms)
  };
  var attr_ends = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_ends__delegate.call(this, elms)
  };
  attr_ends.cljs$lang$maxFixedArity = 0;
  attr_ends.cljs$lang$applyTo = function(arglist__12561) {
    var elms = cljs.core.seq(arglist__12561);
    return attr_ends__delegate(elms)
  };
  attr_ends.cljs$lang$arity$variadic = attr_ends__delegate;
  return attr_ends
}();
enfocus.enlive.syntax.attr_contains = function() {
  var attr_contains__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "*", elms)
  };
  var attr_contains = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_contains__delegate.call(this, elms)
  };
  attr_contains.cljs$lang$maxFixedArity = 0;
  attr_contains.cljs$lang$applyTo = function(arglist__12562) {
    var elms = cljs.core.seq(arglist__12562);
    return attr_contains__delegate(elms)
  };
  attr_contains.cljs$lang$arity$variadic = attr_contains__delegate;
  return attr_contains
}();
enfocus.enlive.syntax.attr_BAR__EQ_ = function() {
  var attr_BAR__EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "|", elms)
  };
  var attr_BAR__EQ_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_BAR__EQ___delegate.call(this, elms)
  };
  attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
  attr_BAR__EQ_.cljs$lang$applyTo = function(arglist__12563) {
    var elms = cljs.core.seq(arglist__12563);
    return attr_BAR__EQ___delegate(elms)
  };
  attr_BAR__EQ_.cljs$lang$arity$variadic = attr_BAR__EQ___delegate;
  return attr_BAR__EQ_
}();
enfocus.enlive.syntax.nth_op = function() {
  var nth_op = null;
  var nth_op__2 = function(op, x) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str(")")].join("")
  };
  var nth_op__3 = function(op, x, y) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str("n"), cljs.core.str(y > 0 ? "+" : null), cljs.core.str(y)].join("")
  };
  nth_op = function(op, x, y) {
    switch(arguments.length) {
      case 2:
        return nth_op__2.call(this, op, x);
      case 3:
        return nth_op__3.call(this, op, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_op.cljs$lang$arity$2 = nth_op__2;
  nth_op.cljs$lang$arity$3 = nth_op__3;
  return nth_op
}();
enfocus.enlive.syntax.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x)
  };
  var nth_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x, y)
  };
  nth_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, x);
      case 2:
        return nth_child__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_child.cljs$lang$arity$1 = nth_child__1;
  nth_child.cljs$lang$arity$2 = nth_child__2;
  return nth_child
}();
enfocus.enlive.syntax.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x)
  };
  var nth_last_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x, y)
  };
  nth_last_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, x);
      case 2:
        return nth_last_child__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_child.cljs$lang$arity$1 = nth_last_child__1;
  nth_last_child.cljs$lang$arity$2 = nth_last_child__2;
  return nth_last_child
}();
enfocus.enlive.syntax.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x)
  };
  var nth_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x, y)
  };
  nth_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, x);
      case 2:
        return nth_of_type__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_of_type.cljs$lang$arity$1 = nth_of_type__1;
  nth_of_type.cljs$lang$arity$2 = nth_of_type__2;
  return nth_of_type
}();
enfocus.enlive.syntax.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x)
  };
  var nth_last_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x, y)
  };
  nth_last_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, x);
      case 2:
        return nth_last_of_type__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_of_type.cljs$lang$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$lang$arity$2 = nth_last_of_type__2;
  return nth_last_of_type
}();
enfocus.enlive.syntax.but = function() {
  var but__delegate = function(sel) {
    return[cljs.core.str("not("), cljs.core.str(enfocus.enlive.syntax.convert.call(null, sel)), cljs.core.str(")")].join("")
  };
  var but = function(var_args) {
    var sel = null;
    if(goog.isDef(var_args)) {
      sel = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return but__delegate.call(this, sel)
  };
  but.cljs$lang$maxFixedArity = 0;
  but.cljs$lang$applyTo = function(arglist__12564) {
    var sel = cljs.core.seq(arglist__12564);
    return but__delegate(sel)
  };
  but.cljs$lang$arity$variadic = but__delegate;
  return but
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__12506 = s;
      var limit__12507 = limit;
      var parts__12508 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__12507, 1)) {
          return cljs.core.conj.call(null, parts__12508, s__12506)
        }else {
          var temp__3971__auto____12509 = cljs.core.re_find.call(null, re, s__12506);
          if(cljs.core.truth_(temp__3971__auto____12509)) {
            var m__12510 = temp__3971__auto____12509;
            var index__12511 = s__12506.indexOf(m__12510);
            var G__12512 = s__12506.substring(index__12511 + cljs.core.count.call(null, m__12510));
            var G__12513 = limit__12507 - 1;
            var G__12514 = cljs.core.conj.call(null, parts__12508, s__12506.substring(0, index__12511));
            s__12506 = G__12512;
            limit__12507 = G__12513;
            parts__12508 = G__12514;
            continue
          }else {
            return cljs.core.conj.call(null, parts__12508, s__12506)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__12518 = s.length;
  while(true) {
    if(index__12518 === 0) {
      return""
    }else {
      var ch__12519 = cljs.core._lookup.call(null, s, index__12518 - 1, null);
      if(function() {
        var or__3824__auto____12520 = cljs.core._EQ_.call(null, ch__12519, "\n");
        if(or__3824__auto____12520) {
          return or__3824__auto____12520
        }else {
          return cljs.core._EQ_.call(null, ch__12519, "\r")
        }
      }()) {
        var G__12521 = index__12518 - 1;
        index__12518 = G__12521;
        continue
      }else {
        return s.substring(0, index__12518)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__12525 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____12526 = cljs.core.not.call(null, s__12525);
    if(or__3824__auto____12526) {
      return or__3824__auto____12526
    }else {
      var or__3824__auto____12527 = cljs.core._EQ_.call(null, "", s__12525);
      if(or__3824__auto____12527) {
        return or__3824__auto____12527
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__12525)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__12534 = new goog.string.StringBuffer;
  var length__12535 = s.length;
  var index__12536 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__12535, index__12536)) {
      return buffer__12534.toString()
    }else {
      var ch__12537 = s.charAt(index__12536);
      var temp__3971__auto____12538 = cljs.core._lookup.call(null, cmap, ch__12537, null);
      if(cljs.core.truth_(temp__3971__auto____12538)) {
        var replacement__12539 = temp__3971__auto____12538;
        buffer__12534.append([cljs.core.str(replacement__12539)].join(""))
      }else {
        buffer__12534.append(ch__12537)
      }
      var G__12540 = index__12536 + 1;
      index__12536 = G__12540;
      continue
    }
    break
  }
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370d8", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#d87093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1.0E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependPoundIfNecessary_(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessary_(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessary_(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessary_(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessary_ = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependPoundIfNecessary_ = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.object");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.events.EventTarget.call(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = []
};
goog.inherits(goog.fx.Animation, goog.events.EventTarget);
goog.fx.Animation.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause", ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.Animation.TIMEOUT = 20;
goog.fx.Animation.activeAnimations_ = {};
goog.fx.Animation.globalTimer_ = null;
goog.fx.Animation.cycleAnimations_ = function() {
  goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
  var now = goog.now();
  for(var uid in goog.fx.Animation.activeAnimations_) {
    goog.fx.Animation.activeAnimations_[uid].cycle(now)
  }
  goog.fx.Animation.globalTimer_ = goog.object.isEmpty(goog.fx.Animation.activeAnimations_) ? null : goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
};
goog.fx.Animation.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.Animation.activeAnimations_)) {
    goog.fx.Animation.activeAnimations_[uid] = animation
  }
  if(!goog.fx.Animation.globalTimer_) {
    goog.fx.Animation.globalTimer_ = goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
  }
};
goog.fx.Animation.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.Animation.activeAnimations_[uid];
  if(goog.fx.Animation.globalTimer_ && goog.object.isEmpty(goog.fx.Animation.activeAnimations_)) {
    goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
    goog.fx.Animation.globalTimer_ = null
  }
};
goog.fx.Animation.prototype.state_ = goog.fx.Animation.State.STOPPED;
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.startTime = null;
goog.fx.Animation.prototype.endTime = null;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.state_ == goog.fx.Animation.State.STOPPED) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      return false
    }
  }
  goog.fx.Animation.unregisterAnimation(this);
  this.startTime = goog.now();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.onResume()
  }
  this.state_ = goog.fx.Animation.State.PLAYING;
  goog.fx.Animation.registerAnimation(this);
  this.cycle(this.startTime);
  return true
};
goog.fx.Animation.prototype.stop = function(gotoEnd) {
  goog.fx.Animation.unregisterAnimation(this);
  this.state_ = goog.fx.Animation.State.STOPPED;
  if(gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.state_ == goog.fx.Animation.State.PLAYING) {
    goog.fx.Animation.unregisterAnimation(this);
    this.state_ = goog.fx.Animation.State.PAUSED;
    this.onPause()
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(this.state_ != goog.fx.Animation.State.STOPPED) {
    this.stop(false)
  }
  this.onDestroy();
  goog.fx.Animation.superClass_.disposeInternal.call(this)
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  if(goog.isFunction(this.accel_)) {
    this.updateCoords_(this.accel_(this.progress))
  }else {
    this.updateCoords_(this.progress)
  }
  if(this.progress == 1) {
    this.state_ = goog.fx.Animation.State.STOPPED;
    goog.fx.Animation.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onBegin = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.BEGIN)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.onEnd = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.END)
};
goog.fx.Animation.prototype.onFinish = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.FINISH)
};
goog.fx.Animation.prototype.onPause = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PAUSE)
};
goog.fx.Animation.prototype.onPlay = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PLAY)
};
goog.fx.Animation.prototype.onResume = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.RESUME)
};
goog.fx.Animation.prototype.onStop = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.STOP)
};
goog.fx.Animation.prototype.dispatchAnimationEvent_ = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.events.Event.call(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.progress;
  this.fps = anim.fps_;
  this.state = anim.state_;
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.style");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  this.element.style.left = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var start = [element.offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  this.startPoint = [this.element.offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  this.element.style.marginLeft = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  this.element.scrollLeft = Math.round(this.coords[0]);
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__12498 = document.createElement("div");
var test_html__12499 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__12498.innerHTML = test_html__12499;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__12498.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__12498.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__12498.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__12091 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__12092 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__12093 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__12092, "caption":table_section_wrapper__12092, "optgroup":opt_wrapper__12091, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__12093, "thead":table_section_wrapper__12092, "th":cell_wrapper__12093, "option":opt_wrapper__12091, "tbody":table_section_wrapper__12092, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__12092});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___12106 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__12110 = function() {
    var and__3822__auto____12107 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____12107) {
      return no_tbody_QMARK___12106
    }else {
      return and__3822__auto____12107
    }
  }() ? function() {
    var and__3822__auto____12108 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____12108)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____12108
    }
  }() : function() {
    var and__3822__auto____12109 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____12109) {
      return no_tbody_QMARK___12106
    }else {
      return and__3822__auto____12109
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__12111__12112 = cljs.core.seq.call(null, tbody__12110);
  if(G__12111__12112) {
    var child__12113 = cljs.core.first.call(null, G__12111__12112);
    var G__12111__12114 = G__12111__12112;
    while(true) {
      if(function() {
        var and__3822__auto____12115 = cljs.core._EQ_.call(null, child__12113.nodeName, "tbody");
        if(and__3822__auto____12115) {
          return cljs.core._EQ_.call(null, child__12113.childNodes.length, 0)
        }else {
          return and__3822__auto____12115
        }
      }()) {
        child__12113.parentNode.removeChild(child__12113)
      }else {
      }
      var temp__3974__auto____12116 = cljs.core.next.call(null, G__12111__12114);
      if(temp__3974__auto____12116) {
        var G__12111__12117 = temp__3974__auto____12116;
        var G__12118 = cljs.core.first.call(null, G__12111__12117);
        var G__12119 = G__12111__12117;
        child__12113 = G__12118;
        G__12111__12114 = G__12119;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__12133 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__12134 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__12133)))].join("").toLowerCase();
  var vec__12132__12135 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__12134, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__12136 = cljs.core.nth.call(null, vec__12132__12135, 0, null);
  var start_wrap__12137 = cljs.core.nth.call(null, vec__12132__12135, 1, null);
  var end_wrap__12138 = cljs.core.nth.call(null, vec__12132__12135, 2, null);
  var div__12142 = function() {
    var wrapper__12140 = function() {
      var div__12139 = document.createElement("div");
      div__12139.innerHTML = [cljs.core.str(start_wrap__12137), cljs.core.str(html__12133), cljs.core.str(end_wrap__12138)].join("");
      return div__12139
    }();
    var level__12141 = depth__12136;
    while(true) {
      if(level__12141 > 0) {
        var G__12144 = wrapper__12140.lastChild;
        var G__12145 = level__12141 - 1;
        wrapper__12140 = G__12144;
        level__12141 = G__12145;
        continue
      }else {
        return wrapper__12140
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__12142, html__12133)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____12143 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____12143) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__12133)
    }else {
      return and__3822__auto____12143
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__12142, html__12133)
  }else {
  }
  return div__12142.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____12150 = content;
    if(and__3822__auto____12150) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____12150
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2363__auto____12151 = content == null ? null : content;
    return function() {
      var or__3824__auto____12152 = domina.nodes[goog.typeOf(x__2363__auto____12151)];
      if(or__3824__auto____12152) {
        return or__3824__auto____12152
      }else {
        var or__3824__auto____12153 = domina.nodes["_"];
        if(or__3824__auto____12153) {
          return or__3824__auto____12153
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____12158 = nodeseq;
    if(and__3822__auto____12158) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____12158
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2363__auto____12159 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____12160 = domina.single_node[goog.typeOf(x__2363__auto____12159)];
      if(or__3824__auto____12160) {
        return or__3824__auto____12160
      }else {
        var or__3824__auto____12161 = domina.single_node["_"];
        if(or__3824__auto____12161) {
          return or__3824__auto____12161
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____12163 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____12163)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____12163
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__12164) {
    var mesg = cljs.core.seq(arglist__12164);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__12165) {
    var mesg = cljs.core.seq(arglist__12165);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t12173) {
    domina.t12173 = function(class_name, by_class, meta12174) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta12174 = meta12174;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t12173.cljs$lang$type = true;
    domina.t12173.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
      return cljs.core.list.call(null, "domina/t12173")
    };
    domina.t12173.prototype.domina$DomContent$ = true;
    domina.t12173.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__12176 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__12176.class_name)))
    };
    domina.t12173.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__12177 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__12177.class_name)))
    };
    domina.t12173.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12175) {
      var this__12178 = this;
      return this__12178.meta12174
    };
    domina.t12173.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12175, meta12174) {
      var this__12179 = this;
      return new domina.t12173(this__12179.class_name, this__12179.by_class, meta12174)
    };
    domina.t12173
  }else {
  }
  return new domina.t12173(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__12180_SHARP_) {
    return p1__12180_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__12181_SHARP_, p2__12182_SHARP_) {
    return goog.dom.insertChildAt(p1__12181_SHARP_, p2__12182_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12184_SHARP_, p2__12183_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__12183_SHARP_, p1__12184_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12186_SHARP_, p2__12185_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__12185_SHARP_, p1__12186_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12188_SHARP_, p2__12187_SHARP_) {
    return goog.dom.replaceNode(p2__12187_SHARP_, p1__12188_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__12190 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__12190))) {
    return null
  }else {
    return s__12190
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__12197__12198 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12197__12198) {
      var n__12199 = cljs.core.first.call(null, G__12197__12198);
      var G__12197__12200 = G__12197__12198;
      while(true) {
        goog.style.setStyle(n__12199, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12201 = cljs.core.next.call(null, G__12197__12200);
        if(temp__3974__auto____12201) {
          var G__12197__12202 = temp__3974__auto____12201;
          var G__12203 = cljs.core.first.call(null, G__12197__12202);
          var G__12204 = G__12197__12202;
          n__12199 = G__12203;
          G__12197__12200 = G__12204;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__12205) {
    var content = cljs.core.first(arglist__12205);
    var name = cljs.core.first(cljs.core.next(arglist__12205));
    var value = cljs.core.rest(cljs.core.next(arglist__12205));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__12212__12213 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12212__12213) {
      var n__12214 = cljs.core.first.call(null, G__12212__12213);
      var G__12212__12215 = G__12212__12213;
      while(true) {
        n__12214.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12216 = cljs.core.next.call(null, G__12212__12215);
        if(temp__3974__auto____12216) {
          var G__12212__12217 = temp__3974__auto____12216;
          var G__12218 = cljs.core.first.call(null, G__12212__12217);
          var G__12219 = G__12212__12217;
          n__12214 = G__12218;
          G__12212__12215 = G__12219;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__12220) {
    var content = cljs.core.first(arglist__12220);
    var name = cljs.core.first(cljs.core.next(arglist__12220));
    var value = cljs.core.rest(cljs.core.next(arglist__12220));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__12227__12228 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12227__12228) {
    var n__12229 = cljs.core.first.call(null, G__12227__12228);
    var G__12227__12230 = G__12227__12228;
    while(true) {
      n__12229.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____12231 = cljs.core.next.call(null, G__12227__12230);
      if(temp__3974__auto____12231) {
        var G__12227__12232 = temp__3974__auto____12231;
        var G__12233 = cljs.core.first.call(null, G__12227__12232);
        var G__12234 = G__12227__12232;
        n__12229 = G__12233;
        G__12227__12230 = G__12234;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__12240__12241 = pair.split(/\s*:\s*/);
    var k__12242 = cljs.core.nth.call(null, vec__12240__12241, 0, null);
    var v__12243 = cljs.core.nth.call(null, vec__12240__12241, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____12244 = k__12242;
      if(cljs.core.truth_(and__3822__auto____12244)) {
        return v__12243
      }else {
        return and__3822__auto____12244
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__12242.toLowerCase()), v__12243)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__12247 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__12247)) {
    return domina.parse_style_attributes.call(null, style__12247)
  }else {
    if(cljs.core.truth_(style__12247.cssText)) {
      return domina.parse_style_attributes.call(null, style__12247.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__12253 = domina.single_node.call(null, content);
  var attrs__12254 = node__12253.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__12245_SHARP_) {
    var attr__12255 = attrs__12254.item(p1__12245_SHARP_);
    var value__12256 = attr__12255.nodeValue;
    if(function() {
      var and__3822__auto____12257 = cljs.core.not_EQ_.call(null, null, value__12256);
      if(and__3822__auto____12257) {
        return cljs.core.not_EQ_.call(null, "", value__12256)
      }else {
        return and__3822__auto____12257
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__12255.nodeName.toLowerCase())], [attr__12255.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__12254.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__12277__12278 = cljs.core.seq.call(null, styles);
  if(G__12277__12278) {
    var G__12280__12282 = cljs.core.first.call(null, G__12277__12278);
    var vec__12281__12283 = G__12280__12282;
    var name__12284 = cljs.core.nth.call(null, vec__12281__12283, 0, null);
    var value__12285 = cljs.core.nth.call(null, vec__12281__12283, 1, null);
    var G__12277__12286 = G__12277__12278;
    var G__12280__12287 = G__12280__12282;
    var G__12277__12288 = G__12277__12286;
    while(true) {
      var vec__12289__12290 = G__12280__12287;
      var name__12291 = cljs.core.nth.call(null, vec__12289__12290, 0, null);
      var value__12292 = cljs.core.nth.call(null, vec__12289__12290, 1, null);
      var G__12277__12293 = G__12277__12288;
      domina.set_style_BANG_.call(null, content, name__12291, value__12292);
      var temp__3974__auto____12294 = cljs.core.next.call(null, G__12277__12293);
      if(temp__3974__auto____12294) {
        var G__12277__12295 = temp__3974__auto____12294;
        var G__12296 = cljs.core.first.call(null, G__12277__12295);
        var G__12297 = G__12277__12295;
        G__12280__12287 = G__12296;
        G__12277__12288 = G__12297;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__12317__12318 = cljs.core.seq.call(null, attrs);
  if(G__12317__12318) {
    var G__12320__12322 = cljs.core.first.call(null, G__12317__12318);
    var vec__12321__12323 = G__12320__12322;
    var name__12324 = cljs.core.nth.call(null, vec__12321__12323, 0, null);
    var value__12325 = cljs.core.nth.call(null, vec__12321__12323, 1, null);
    var G__12317__12326 = G__12317__12318;
    var G__12320__12327 = G__12320__12322;
    var G__12317__12328 = G__12317__12326;
    while(true) {
      var vec__12329__12330 = G__12320__12327;
      var name__12331 = cljs.core.nth.call(null, vec__12329__12330, 0, null);
      var value__12332 = cljs.core.nth.call(null, vec__12329__12330, 1, null);
      var G__12317__12333 = G__12317__12328;
      domina.set_attr_BANG_.call(null, content, name__12331, value__12332);
      var temp__3974__auto____12334 = cljs.core.next.call(null, G__12317__12333);
      if(temp__3974__auto____12334) {
        var G__12317__12335 = temp__3974__auto____12334;
        var G__12336 = cljs.core.first.call(null, G__12317__12335);
        var G__12337 = G__12317__12335;
        G__12320__12327 = G__12336;
        G__12317__12328 = G__12337;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__12344__12345 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12344__12345) {
    var node__12346 = cljs.core.first.call(null, G__12344__12345);
    var G__12344__12347 = G__12344__12345;
    while(true) {
      goog.dom.classes.add(node__12346, class$);
      var temp__3974__auto____12348 = cljs.core.next.call(null, G__12344__12347);
      if(temp__3974__auto____12348) {
        var G__12344__12349 = temp__3974__auto____12348;
        var G__12350 = cljs.core.first.call(null, G__12344__12349);
        var G__12351 = G__12344__12349;
        node__12346 = G__12350;
        G__12344__12347 = G__12351;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__12358__12359 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12358__12359) {
    var node__12360 = cljs.core.first.call(null, G__12358__12359);
    var G__12358__12361 = G__12358__12359;
    while(true) {
      goog.dom.classes.remove(node__12360, class$);
      var temp__3974__auto____12362 = cljs.core.next.call(null, G__12358__12361);
      if(temp__3974__auto____12362) {
        var G__12358__12363 = temp__3974__auto____12362;
        var G__12364 = cljs.core.first.call(null, G__12358__12363);
        var G__12365 = G__12358__12363;
        node__12360 = G__12364;
        G__12358__12361 = G__12365;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__12373 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__12374__12375 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12374__12375) {
    var node__12376 = cljs.core.first.call(null, G__12374__12375);
    var G__12374__12377 = G__12374__12375;
    while(true) {
      goog.dom.classes.set(node__12376, classes__12373);
      var temp__3974__auto____12378 = cljs.core.next.call(null, G__12374__12377);
      if(temp__3974__auto____12378) {
        var G__12374__12379 = temp__3974__auto____12378;
        var G__12380 = cljs.core.first.call(null, G__12374__12379);
        var G__12381 = G__12374__12379;
        node__12376 = G__12380;
        G__12374__12377 = G__12381;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__12388__12389 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12388__12389) {
    var node__12390 = cljs.core.first.call(null, G__12388__12389);
    var G__12388__12391 = G__12388__12389;
    while(true) {
      goog.dom.setTextContent(node__12390, value);
      var temp__3974__auto____12392 = cljs.core.next.call(null, G__12388__12391);
      if(temp__3974__auto____12392) {
        var G__12388__12393 = temp__3974__auto____12392;
        var G__12394 = cljs.core.first.call(null, G__12388__12393);
        var G__12395 = G__12388__12393;
        node__12390 = G__12394;
        G__12388__12391 = G__12395;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__12402__12403 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12402__12403) {
    var node__12404 = cljs.core.first.call(null, G__12402__12403);
    var G__12402__12405 = G__12402__12403;
    while(true) {
      goog.dom.forms.setValue(node__12404, value);
      var temp__3974__auto____12406 = cljs.core.next.call(null, G__12402__12405);
      if(temp__3974__auto____12406) {
        var G__12402__12407 = temp__3974__auto____12406;
        var G__12408 = cljs.core.first.call(null, G__12402__12407);
        var G__12409 = G__12402__12407;
        node__12404 = G__12408;
        G__12402__12405 = G__12409;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___12426 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___12427 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__12428 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___12429 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__12428);
  if(cljs.core.truth_(function() {
    var and__3822__auto____12430 = allows_inner_html_QMARK___12426;
    if(and__3822__auto____12430) {
      var and__3822__auto____12432 = function() {
        var or__3824__auto____12431 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____12431)) {
          return or__3824__auto____12431
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___12427)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____12432)) {
        return!special_tag_QMARK___12429
      }else {
        return and__3822__auto____12432
      }
    }else {
      return and__3822__auto____12430
    }
  }())) {
    var value__12433 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__12436__12437 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__12436__12437) {
        var node__12438 = cljs.core.first.call(null, G__12436__12437);
        var G__12436__12439 = G__12436__12437;
        while(true) {
          goog.events.removeAll(node__12438);
          node__12438.innerHTML = value__12433;
          var temp__3974__auto____12440 = cljs.core.next.call(null, G__12436__12439);
          if(temp__3974__auto____12440) {
            var G__12436__12441 = temp__3974__auto____12440;
            var G__12442 = cljs.core.first.call(null, G__12436__12441);
            var G__12443 = G__12436__12441;
            node__12438 = G__12442;
            G__12436__12439 = G__12443;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e12434) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e12434)) {
        var e__12435 = e12434;
        domina.replace_children_BANG_.call(null, content, value__12433)
      }else {
        if("\ufdd0'else") {
          throw e12434;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__12449 = domina.single_node.call(null, node).__domina_data;
    var value__12450 = cljs.core.truth_(m__12449) ? cljs.core._lookup.call(null, m__12449, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____12451 = bubble;
      if(cljs.core.truth_(and__3822__auto____12451)) {
        return value__12450 == null
      }else {
        return and__3822__auto____12451
      }
    }())) {
      var temp__3974__auto____12452 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____12452)) {
        var parent__12453 = temp__3974__auto____12452;
        return get_data.call(null, parent__12453, key, true)
      }else {
        return null
      }
    }else {
      return value__12450
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__12459 = function() {
    var or__3824__auto____12458 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____12458)) {
      return or__3824__auto____12458
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__12459, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__12471 = domina.nodes.call(null, parent_content);
  var children__12472 = domina.nodes.call(null, child_content);
  var first_child__12480 = function() {
    var frag__12473 = document.createDocumentFragment();
    var G__12474__12475 = cljs.core.seq.call(null, children__12472);
    if(G__12474__12475) {
      var child__12476 = cljs.core.first.call(null, G__12474__12475);
      var G__12474__12477 = G__12474__12475;
      while(true) {
        frag__12473.appendChild(child__12476);
        var temp__3974__auto____12478 = cljs.core.next.call(null, G__12474__12477);
        if(temp__3974__auto____12478) {
          var G__12474__12479 = temp__3974__auto____12478;
          var G__12482 = cljs.core.first.call(null, G__12474__12479);
          var G__12483 = G__12474__12479;
          child__12476 = G__12482;
          G__12474__12477 = G__12483;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__12473
  }();
  var other_children__12481 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__12471) - 1, function() {
    return first_child__12480.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__12471)) {
    f.call(null, cljs.core.first.call(null, parents__12471), first_child__12480);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12454_SHARP_, p2__12455_SHARP_) {
      return f.call(null, p1__12454_SHARP_, p2__12455_SHARP_)
    }, cljs.core.rest.call(null, parents__12471), other_children__12481))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____12485 = obj;
  if(cljs.core.truth_(and__3822__auto____12485)) {
    return obj.length
  }else {
    return and__3822__auto____12485
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12489__12490 = list_thing;
      if(G__12489__12490) {
        if(function() {
          var or__3824__auto____12491 = G__12489__12490.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12491) {
            return or__3824__auto____12491
          }else {
            return G__12489__12490.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12489__12490.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12489__12490)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12489__12490)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12492__12493 = content;
      if(G__12492__12493) {
        if(function() {
          var or__3824__auto____12494 = G__12492__12493.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12494) {
            return or__3824__auto____12494
          }else {
            return G__12492__12493.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12492__12493.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12492__12493)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12492__12493)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__12495__12496 = content;
      if(G__12495__12496) {
        if(function() {
          var or__3824__auto____12497 = G__12495__12496.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12497) {
            return or__3824__auto____12497
          }else {
            return G__12495__12496.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12495__12496.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12495__12496)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12495__12496)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(void 0 === domina.css.t12084) {
      domina.css.t12084 = function(expr, base, sel, meta12085) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta12085 = meta12085;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t12084.cljs$lang$type = true;
      domina.css.t12084.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
        return cljs.core.list.call(null, "domina.css/t12084")
      };
      domina.css.t12084.prototype.domina$DomContent$ = true;
      domina.css.t12084.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__12087 = this;
        return cljs.core.mapcat.call(null, function(p1__12075_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__12087.expr, p1__12075_SHARP_))
        }, domina.nodes.call(null, this__12087.base))
      };
      domina.css.t12084.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__12088 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__12076_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__12088.expr, p1__12076_SHARP_))
        }, domina.nodes.call(null, this__12088.base))))
      };
      domina.css.t12084.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12086) {
        var this__12089 = this;
        return this__12089.meta12085
      };
      domina.css.t12084.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12086, meta12085) {
        var this__12090 = this;
        return new domina.css.t12084(this__12090.expr, this__12090.base, this__12090.sel, meta12085)
      };
      domina.css.t12084
    }else {
    }
    return new domina.css.t12084(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sel.cljs$lang$arity$1 = sel__1;
  sel.cljs$lang$arity$2 = sel__2;
  return sel
}();
goog.provide("goog.fx.easing");
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
goog.provide("goog.fx");
goog.require("goog.asserts");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.fx.Animation.State");
goog.require("goog.fx.AnimationEvent");
goog.require("goog.fx.easing");
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.async.Delay");
goog.require("goog.dom.classes");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("goog.events");
goog.require("enfocus.enlive.syntax");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("goog.fx.dom");
goog.require("goog.Timer");
goog.require("goog.style");
goog.require("domina");
goog.require("goog.net.XhrIo");
goog.require("domina.css");
goog.require("goog.fx");
enfocus.core.debug = false;
enfocus.core.log_debug = function log_debug(mesg) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____11485 = enfocus.core.debug;
    if(cljs.core.truth_(and__3822__auto____11485)) {
      return!cljs.core._EQ_.call(null, window.console, undefined)
    }else {
      return and__3822__auto____11485
    }
  }())) {
    return console.log(mesg)
  }else {
    return null
  }
};
enfocus.core.setTimeout = function setTimeout(func, ttime) {
  return goog.Timer.callOnce(func, ttime)
};
enfocus.core.node_QMARK_ = function node_QMARK_(tst) {
  return goog.dom.isNodeLike(tst)
};
enfocus.core.nodelist_QMARK_ = function nodelist_QMARK_(tst) {
  return cljs.core.instance_QMARK_.call(null, NodeList, tst)
};
enfocus.core.nodes__GT_coll = function nodes__GT_coll(nl) {
  if(cljs.core._EQ_.call(null, nl, window)) {
    return cljs.core.PersistentVector.fromArray([nl], true)
  }else {
    return domina.nodes.call(null, nl)
  }
};
enfocus.core.flatten_nodes_coll = function flatten_nodes_coll(values) {
  return cljs.core.mapcat.call(null, function(p1__11486_SHARP_) {
    if(cljs.core.string_QMARK_.call(null, p1__11486_SHARP_)) {
      return cljs.core.PersistentVector.fromArray([goog.dom.createTextNode(p1__11486_SHARP_)], true)
    }else {
      if("\ufdd0'else") {
        return enfocus.core.nodes__GT_coll.call(null, p1__11486_SHARP_)
      }else {
        return null
      }
    }
  }, values)
};
enfocus.core.style_set = function style_set(obj, values) {
  var G__11506__11507 = cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.hash_map, values));
  if(G__11506__11507) {
    var G__11509__11511 = cljs.core.first.call(null, G__11506__11507);
    var vec__11510__11512 = G__11509__11511;
    var attr__11513 = cljs.core.nth.call(null, vec__11510__11512, 0, null);
    var value__11514 = cljs.core.nth.call(null, vec__11510__11512, 1, null);
    var G__11506__11515 = G__11506__11507;
    var G__11509__11516 = G__11509__11511;
    var G__11506__11517 = G__11506__11515;
    while(true) {
      var vec__11518__11519 = G__11509__11516;
      var attr__11520 = cljs.core.nth.call(null, vec__11518__11519, 0, null);
      var value__11521 = cljs.core.nth.call(null, vec__11518__11519, 1, null);
      var G__11506__11522 = G__11506__11517;
      goog.style.setStyle(obj, cljs.core.name.call(null, attr__11520), value__11521);
      var temp__3974__auto____11523 = cljs.core.next.call(null, G__11506__11522);
      if(temp__3974__auto____11523) {
        var G__11506__11524 = temp__3974__auto____11523;
        var G__11525 = cljs.core.first.call(null, G__11506__11524);
        var G__11526 = G__11506__11524;
        G__11509__11516 = G__11525;
        G__11506__11517 = G__11526;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
enfocus.core.style_remove = function style_remove(obj, values) {
  var G__11533__11534 = cljs.core.seq.call(null, values);
  if(G__11533__11534) {
    var attr__11535 = cljs.core.first.call(null, G__11533__11534);
    var G__11533__11536 = G__11533__11534;
    while(true) {
      if(cljs.core.truth_(goog.userAgent.IE)) {
        goog.style.setStyle(obj, cljs.core.name.call(null, attr__11535), "")
      }else {
        obj.style.removeProperty(cljs.core.name.call(null, attr__11535))
      }
      var temp__3974__auto____11537 = cljs.core.next.call(null, G__11533__11536);
      if(temp__3974__auto____11537) {
        var G__11533__11538 = temp__3974__auto____11537;
        var G__11539 = cljs.core.first.call(null, G__11533__11538);
        var G__11540 = G__11533__11538;
        attr__11535 = G__11539;
        G__11533__11536 = G__11540;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
enfocus.core.get_eff_prop_name = function get_eff_prop_name(etype) {
  return[cljs.core.str("__ef_effect_"), cljs.core.str(etype)].join("")
};
enfocus.core.get_mills = function get_mills() {
  return(new Date).getMilliseconds()
};
enfocus.core.child_of_QMARK_ = function child_of_QMARK_(parent, child) {
  while(true) {
    if(cljs.core.not.call(null, child)) {
      return false
    }else {
      if(parent === child) {
        return false
      }else {
        if(child.parentNode === parent) {
          return true
        }else {
          if("\ufdd0'else") {
            var G__11541 = parent;
            var G__11542 = child.parentNode;
            parent = G__11541;
            child = G__11542;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
enfocus.core.mouse_enter_leave = function mouse_enter_leave(func) {
  return function(e) {
    var re__11546 = e.relatedTarget;
    var this__11547 = e.currentTarget;
    if(function() {
      var and__3822__auto____11548 = !(re__11546 === this__11547);
      if(and__3822__auto____11548) {
        return cljs.core.not.call(null, enfocus.core.child_of_QMARK_.call(null, this__11547, re__11546))
      }else {
        return and__3822__auto____11548
      }
    }()) {
      return func.call(null, e)
    }else {
      return null
    }
  }
};
enfocus.core.pix_round = function pix_round(step) {
  if(step < 0) {
    return Math.floor.call(null, step)
  }else {
    return Math.ceil.call(null, step)
  }
};
enfocus.core.add_map_attrs = function() {
  var add_map_attrs = null;
  var add_map_attrs__2 = function(elem, ats) {
    if(cljs.core.truth_(elem)) {
      if(cljs.core.map_QMARK_.call(null, ats)) {
        var G__11568__11569 = cljs.core.seq.call(null, ats);
        if(G__11568__11569) {
          var G__11571__11573 = cljs.core.first.call(null, G__11568__11569);
          var vec__11572__11574 = G__11571__11573;
          var k__11575 = cljs.core.nth.call(null, vec__11572__11574, 0, null);
          var v__11576 = cljs.core.nth.call(null, vec__11572__11574, 1, null);
          var G__11568__11577 = G__11568__11569;
          var G__11571__11578 = G__11571__11573;
          var G__11568__11579 = G__11568__11577;
          while(true) {
            var vec__11580__11581 = G__11571__11578;
            var k__11582 = cljs.core.nth.call(null, vec__11580__11581, 0, null);
            var v__11583 = cljs.core.nth.call(null, vec__11580__11581, 1, null);
            var G__11568__11584 = G__11568__11579;
            add_map_attrs.call(null, elem, k__11582, v__11583);
            var temp__3974__auto____11585 = cljs.core.next.call(null, G__11568__11584);
            if(temp__3974__auto____11585) {
              var G__11568__11586 = temp__3974__auto____11585;
              var G__11587 = cljs.core.first.call(null, G__11568__11586);
              var G__11588 = G__11568__11586;
              G__11571__11578 = G__11587;
              G__11568__11579 = G__11588;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }else {
        return null
      }
    }else {
      return null
    }
  };
  var add_map_attrs__3 = function(elem, k, v) {
    elem.setAttribute(cljs.core.name.call(null, k), v);
    return elem
  };
  add_map_attrs = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return add_map_attrs__2.call(this, elem, k);
      case 3:
        return add_map_attrs__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  add_map_attrs.cljs$lang$arity$2 = add_map_attrs__2;
  add_map_attrs.cljs$lang$arity$3 = add_map_attrs__3;
  return add_map_attrs
}();
enfocus.core.tpl_load_cnt = cljs.core.atom.call(null, 0);
enfocus.core.tpl_cache = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
enfocus.core.hide_style = cljs.core.ObjMap.fromObject(["style"], {"style":"display: none; width: 0px; height: 0px"}).strobj;
enfocus.core.create_hidden_dom = function create_hidden_dom(child) {
  var div__11596 = goog.dom.createDom("div", enfocus.core.hide_style);
  if(cljs.core.instance_QMARK_.call(null, DocumentFragment, child)) {
    goog.dom.appendChild(div__11596, child)
  }else {
    enfocus.core.log_debug.call(null, cljs.core.count.call(null, domina.nodes.call(null, child)));
    var G__11597__11598 = cljs.core.seq.call(null, domina.nodes.call(null, child));
    if(G__11597__11598) {
      var node__11599 = cljs.core.first.call(null, G__11597__11598);
      var G__11597__11600 = G__11597__11598;
      while(true) {
        goog.dom.appendChild(div__11596, node__11599);
        var temp__3974__auto____11601 = cljs.core.next.call(null, G__11597__11600);
        if(temp__3974__auto____11601) {
          var G__11597__11602 = temp__3974__auto____11601;
          var G__11603 = cljs.core.first.call(null, G__11597__11602);
          var G__11604 = G__11597__11602;
          node__11599 = G__11603;
          G__11597__11600 = G__11604;
          continue
        }else {
        }
        break
      }
    }else {
    }
  }
  goog.dom.appendChild(goog.dom.getDocument().body, div__11596);
  return div__11596
};
enfocus.core.remove_node_return_child = function remove_node_return_child(div) {
  var child__11607 = div.childNodes;
  var frag__11608 = document.createDocumentFragment();
  goog.dom.append(frag__11608, child__11607);
  goog.dom.removeNode(div);
  return frag__11608
};
enfocus.core.replace_ids = function replace_ids(text) {
  var re__11612 = new RegExp("(<.*?\\sid=['\"])(.*?)(['\"].*?>)", "g");
  var sym__11613 = [cljs.core.str(cljs.core.name.call(null, cljs.core.gensym.call(null, "id"))), cljs.core.str("_")].join("");
  return cljs.core.PersistentVector.fromArray([[cljs.core.str(sym__11613)].join(""), text.replace(re__11612, function(a, b, c, d) {
    return[cljs.core.str(b), cljs.core.str(sym__11613), cljs.core.str(c), cljs.core.str(d)].join("")
  })], true)
};
enfocus.core.reset_ids = function reset_ids(sym, nod) {
  var id_nodes__11618 = enfocus.core.css_select.call(null, nod, "*[id]");
  var nod_col__11619 = enfocus.core.nodes__GT_coll.call(null, id_nodes__11618);
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__11609_SHARP_) {
    var id__11620 = p1__11609_SHARP_.getAttribute("id");
    var rid__11621 = id__11620.replace(sym, "");
    return p1__11609_SHARP_.setAttribute("id", rid__11621)
  }, nod_col__11619))
};
enfocus.core.load_remote_dom = function load_remote_dom(uri, dom_key) {
  if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri) == null) {
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req__11629 = new goog.net.XhrIo;
    var callback__11635 = function(req) {
      var text__11631 = req.getResponseText();
      var vec__11630__11632 = enfocus.core.replace_ids.call(null, text__11631);
      var sym__11633 = cljs.core.nth.call(null, vec__11630__11632, 0, null);
      var txt__11634 = cljs.core.nth.call(null, vec__11630__11632, 1, null);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, dom_key, cljs.core.PersistentVector.fromArray([sym__11633, txt__11634], true))
    };
    goog.events.listen(req__11629, goog.net.EventType.COMPLETE, function() {
      callback__11635.call(null, req__11629);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.dec)
    });
    return req__11629.send(uri, "GET")
  }else {
    return null
  }
};
enfocus.core.html_to_dom = function html_to_dom(html) {
  var dfa__11644 = enfocus.core.nodes__GT_coll.call(null, domina.html_to_dom.call(null, html));
  var frag__11645 = document.createDocumentFragment();
  enfocus.core.log_debug.call(null, cljs.core.count.call(null, dfa__11644));
  var G__11646__11647 = cljs.core.seq.call(null, dfa__11644);
  if(G__11646__11647) {
    var df__11648 = cljs.core.first.call(null, G__11646__11647);
    var G__11646__11649 = G__11646__11647;
    while(true) {
      goog.dom.append(frag__11645, df__11648);
      var temp__3974__auto____11650 = cljs.core.next.call(null, G__11646__11649);
      if(temp__3974__auto____11650) {
        var G__11646__11651 = temp__3974__auto____11650;
        var G__11652 = cljs.core.first.call(null, G__11646__11651);
        var G__11653 = G__11646__11651;
        df__11648 = G__11652;
        G__11646__11649 = G__11653;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return frag__11645
};
enfocus.core.get_cached_dom = function get_cached_dom(uri) {
  var nod__11655 = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri);
  if(cljs.core.truth_(nod__11655)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, nod__11655), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, nod__11655))], true)
  }else {
    return null
  }
};
enfocus.core.get_cached_snippet = function get_cached_snippet(uri, sel) {
  var sel_str__11665 = enfocus.core.create_sel_str.call(null, sel);
  var cache__11666 = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, [cljs.core.str(uri), cljs.core.str(sel_str__11665)].join(""));
  if(cljs.core.truth_(cache__11666)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, cache__11666), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, cache__11666))], true)
  }else {
    var vec__11667__11668 = enfocus.core.get_cached_dom.call(null, uri);
    var sym__11669 = cljs.core.nth.call(null, vec__11667__11668, 0, null);
    var tdom__11670 = cljs.core.nth.call(null, vec__11667__11668, 1, null);
    var dom__11671 = enfocus.core.create_hidden_dom.call(null, tdom__11670);
    var tsnip__11672 = domina.nodes.call(null, enfocus.core.css_select.call(null, sym__11669, dom__11671, sel));
    var snip__11673 = cljs.core.first.call(null, tsnip__11672);
    enfocus.core.remove_node_return_child.call(null, dom__11671);
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str(uri), cljs.core.str(sel_str__11665)].join(""), cljs.core.PersistentVector.fromArray([sym__11669, snip__11673.outerHTML], true));
    return cljs.core.PersistentVector.fromArray([sym__11669, snip__11673], true)
  }
};
enfocus.core.extr_multi_node = function extr_multi_node(func) {
  return function trans(pnodes) {
    var pnod_col__11680 = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var result__11681 = cljs.core.map.call(null, func, pnod_col__11680);
    if(cljs.core.count.call(null, result__11681) <= 1) {
      return cljs.core.first.call(null, result__11681)
    }else {
      return result__11681
    }
  }
};
enfocus.core.chainable_standard = function chainable_standard(func) {
  return function() {
    var trans = null;
    var trans__1 = function(pnodes) {
      return trans.call(null, pnodes, null)
    };
    var trans__2 = function(pnodes, chain) {
      var pnod_col__11685 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      cljs.core.doall.call(null, cljs.core.map.call(null, func, pnod_col__11685));
      if(!(chain == null)) {
        return chain.call(null, pnodes)
      }else {
        return null
      }
    };
    trans = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return trans__1.call(this, pnodes);
        case 2:
          return trans__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    trans.cljs$lang$arity$1 = trans__1;
    trans.cljs$lang$arity$2 = trans__2;
    return trans
  }()
};
enfocus.core.chainable_effect = function chainable_effect(func, callback) {
  return function() {
    var trans = null;
    var trans__1 = function(pnodes) {
      return trans.call(null, pnodes, null)
    };
    var trans__2 = function(pnodes, chain) {
      var pnod_col__11714 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var cnt__11715 = cljs.core.atom.call(null, cljs.core.count.call(null, pnod_col__11714));
      var partial_cback__11716 = function() {
        cljs.core.swap_BANG_.call(null, cnt__11715, cljs.core.dec);
        if(cljs.core._EQ_.call(null, 0, cljs.core.deref.call(null, cnt__11715))) {
          if(!(callback == null)) {
            callback.call(null, pnodes)
          }else {
          }
          if(!(chain == null)) {
            return chain.call(null, pnodes)
          }else {
            return null
          }
        }else {
          return null
        }
      };
      var G__11717__11718 = cljs.core.seq.call(null, pnod_col__11714);
      if(G__11717__11718) {
        var pnod__11719 = cljs.core.first.call(null, G__11717__11718);
        var G__11717__11720 = G__11717__11718;
        while(true) {
          func.call(null, pnod__11719, partial_cback__11716);
          var temp__3974__auto____11721 = cljs.core.next.call(null, G__11717__11720);
          if(temp__3974__auto____11721) {
            var G__11717__11722 = temp__3974__auto____11721;
            var G__11723 = cljs.core.first.call(null, G__11717__11722);
            var G__11724 = G__11717__11722;
            pnod__11719 = G__11723;
            G__11717__11720 = G__11724;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    };
    trans = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return trans__1.call(this, pnodes);
        case 2:
          return trans__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    trans.cljs$lang$arity$1 = trans__1;
    trans.cljs$lang$arity$2 = trans__2;
    return trans
  }()
};
enfocus.core.domina_chain = function() {
  var domina_chain = null;
  var domina_chain__1 = function(func) {
    return function() {
      var trans = null;
      var trans__1 = function(nodes) {
        return trans.call(null, nodes, null)
      };
      var trans__2 = function(nodes, chain) {
        func.call(null, nodes);
        if(!(chain == null)) {
          return chain.call(null, nodes)
        }else {
          return null
        }
      };
      trans = function(nodes, chain) {
        switch(arguments.length) {
          case 1:
            return trans__1.call(this, nodes);
          case 2:
            return trans__2.call(this, nodes, chain)
        }
        throw"Invalid arity: " + arguments.length;
      };
      trans.cljs$lang$arity$1 = trans__1;
      trans.cljs$lang$arity$2 = trans__2;
      return trans
    }()
  };
  var domina_chain__2 = function(values, func) {
    return function() {
      var trans = null;
      var trans__1 = function(nodes) {
        return trans.call(null, nodes, null)
      };
      var trans__2 = function(nodes, chain) {
        var vnodes__11730 = cljs.core.mapcat.call(null, function(p1__11686_SHARP_) {
          return domina.nodes.call(null, p1__11686_SHARP_)
        }, values);
        func.call(null, nodes, vnodes__11730);
        if(!(chain == null)) {
          return chain.call(null, nodes)
        }else {
          return null
        }
      };
      trans = function(nodes, chain) {
        switch(arguments.length) {
          case 1:
            return trans__1.call(this, nodes);
          case 2:
            return trans__2.call(this, nodes, chain)
        }
        throw"Invalid arity: " + arguments.length;
      };
      trans.cljs$lang$arity$1 = trans__1;
      trans.cljs$lang$arity$2 = trans__2;
      return trans
    }()
  };
  domina_chain = function(values, func) {
    switch(arguments.length) {
      case 1:
        return domina_chain__1.call(this, values);
      case 2:
        return domina_chain__2.call(this, values, func)
    }
    throw"Invalid arity: " + arguments.length;
  };
  domina_chain.cljs$lang$arity$1 = domina_chain__1;
  domina_chain.cljs$lang$arity$2 = domina_chain__2;
  return domina_chain
}();
enfocus.core.en_content = function() {
  var en_content__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11725_SHARP_, p2__11726_SHARP_) {
      domina.destroy_children_BANG_.call(null, p1__11725_SHARP_);
      return domina.append_BANG_.call(null, p1__11725_SHARP_, p2__11726_SHARP_)
    })
  };
  var en_content = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_content__delegate.call(this, values)
  };
  en_content.cljs$lang$maxFixedArity = 0;
  en_content.cljs$lang$applyTo = function(arglist__11732) {
    var values = cljs.core.seq(arglist__11732);
    return en_content__delegate(values)
  };
  en_content.cljs$lang$arity$variadic = en_content__delegate;
  return en_content
}();
enfocus.core.en_html_content = function en_html_content(txt) {
  return enfocus.core.domina_chain.call(null, function(p1__11731_SHARP_) {
    return domina.set_html_BANG_.call(null, p1__11731_SHARP_, txt)
  })
};
enfocus.core.en_set_attr = function() {
  var en_set_attr__delegate = function(values) {
    var pairs__11755 = cljs.core.partition.call(null, 2, values);
    return enfocus.core.domina_chain.call(null, function(p1__11733_SHARP_) {
      var G__11756__11757 = cljs.core.seq.call(null, pairs__11755);
      if(G__11756__11757) {
        var G__11759__11761 = cljs.core.first.call(null, G__11756__11757);
        var vec__11760__11762 = G__11759__11761;
        var name__11763 = cljs.core.nth.call(null, vec__11760__11762, 0, null);
        var value__11764 = cljs.core.nth.call(null, vec__11760__11762, 1, null);
        var G__11756__11765 = G__11756__11757;
        var G__11759__11766 = G__11759__11761;
        var G__11756__11767 = G__11756__11765;
        while(true) {
          var vec__11768__11769 = G__11759__11766;
          var name__11770 = cljs.core.nth.call(null, vec__11768__11769, 0, null);
          var value__11771 = cljs.core.nth.call(null, vec__11768__11769, 1, null);
          var G__11756__11772 = G__11756__11767;
          domina.set_attr_BANG_.call(null, p1__11733_SHARP_, name__11770, value__11771);
          var temp__3974__auto____11773 = cljs.core.next.call(null, G__11756__11772);
          if(temp__3974__auto____11773) {
            var G__11756__11774 = temp__3974__auto____11773;
            var G__11775 = cljs.core.first.call(null, G__11756__11774);
            var G__11776 = G__11756__11774;
            G__11759__11766 = G__11775;
            G__11756__11767 = G__11776;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_set_attr = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_attr__delegate.call(this, values)
  };
  en_set_attr.cljs$lang$maxFixedArity = 0;
  en_set_attr.cljs$lang$applyTo = function(arglist__11777) {
    var values = cljs.core.seq(arglist__11777);
    return en_set_attr__delegate(values)
  };
  en_set_attr.cljs$lang$arity$variadic = en_set_attr__delegate;
  return en_set_attr
}();
enfocus.core.en_remove_attr = function() {
  var en_remove_attr__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11734_SHARP_) {
      var G__11784__11785 = cljs.core.seq.call(null, values);
      if(G__11784__11785) {
        var name__11786 = cljs.core.first.call(null, G__11784__11785);
        var G__11784__11787 = G__11784__11785;
        while(true) {
          domina.remove_attr_BANG_.call(null, p1__11734_SHARP_, name__11786);
          var temp__3974__auto____11788 = cljs.core.next.call(null, G__11784__11787);
          if(temp__3974__auto____11788) {
            var G__11784__11789 = temp__3974__auto____11788;
            var G__11790 = cljs.core.first.call(null, G__11784__11789);
            var G__11791 = G__11784__11789;
            name__11786 = G__11790;
            G__11784__11787 = G__11791;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_attr = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_attr__delegate.call(this, values)
  };
  en_remove_attr.cljs$lang$maxFixedArity = 0;
  en_remove_attr.cljs$lang$applyTo = function(arglist__11792) {
    var values = cljs.core.seq(arglist__11792);
    return en_remove_attr__delegate(values)
  };
  en_remove_attr.cljs$lang$arity$variadic = en_remove_attr__delegate;
  return en_remove_attr
}();
enfocus.core.en_set_prop = function() {
  var en_set_prop__delegate = function(forms) {
    return enfocus.core.chainable_standard.call(null, function(node) {
      var h__11804 = cljs.core.mapcat.call(null, function(p__11799) {
        var vec__11800__11801 = p__11799;
        var n__11802 = cljs.core.nth.call(null, vec__11800__11801, 0, null);
        var v__11803 = cljs.core.nth.call(null, vec__11800__11801, 1, null);
        return cljs.core.list.call(null, cljs.core.name.call(null, n__11802), v__11803)
      }, cljs.core.partition.call(null, 2, forms));
      return goog.dom.setProperties(node, cljs.core.apply.call(null, cljs.core.js_obj, h__11804))
    })
  };
  var en_set_prop = function(var_args) {
    var forms = null;
    if(goog.isDef(var_args)) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_prop__delegate.call(this, forms)
  };
  en_set_prop.cljs$lang$maxFixedArity = 0;
  en_set_prop.cljs$lang$applyTo = function(arglist__11805) {
    var forms = cljs.core.seq(arglist__11805);
    return en_set_prop__delegate(forms)
  };
  en_set_prop.cljs$lang$arity$variadic = en_set_prop__delegate;
  return en_set_prop
}();
enfocus.core.has_class = function has_class(el, cls) {
  return goog.dom.classes.hasClass(el, cls)
};
enfocus.core.en_add_class = function() {
  var en_add_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11806_SHARP_) {
      var G__11814__11815 = cljs.core.seq.call(null, values);
      if(G__11814__11815) {
        var val__11816 = cljs.core.first.call(null, G__11814__11815);
        var G__11814__11817 = G__11814__11815;
        while(true) {
          domina.add_class_BANG_.call(null, p1__11806_SHARP_, val__11816);
          var temp__3974__auto____11818 = cljs.core.next.call(null, G__11814__11817);
          if(temp__3974__auto____11818) {
            var G__11814__11819 = temp__3974__auto____11818;
            var G__11820 = cljs.core.first.call(null, G__11814__11819);
            var G__11821 = G__11814__11819;
            val__11816 = G__11820;
            G__11814__11817 = G__11821;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_add_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_add_class__delegate.call(this, values)
  };
  en_add_class.cljs$lang$maxFixedArity = 0;
  en_add_class.cljs$lang$applyTo = function(arglist__11822) {
    var values = cljs.core.seq(arglist__11822);
    return en_add_class__delegate(values)
  };
  en_add_class.cljs$lang$arity$variadic = en_add_class__delegate;
  return en_add_class
}();
enfocus.core.en_remove_class = function() {
  var en_remove_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11807_SHARP_) {
      var G__11830__11831 = cljs.core.seq.call(null, values);
      if(G__11830__11831) {
        var val__11832 = cljs.core.first.call(null, G__11830__11831);
        var G__11830__11833 = G__11830__11831;
        while(true) {
          domina.remove_class_BANG_.call(null, p1__11807_SHARP_, val__11832);
          var temp__3974__auto____11834 = cljs.core.next.call(null, G__11830__11833);
          if(temp__3974__auto____11834) {
            var G__11830__11835 = temp__3974__auto____11834;
            var G__11836 = cljs.core.first.call(null, G__11830__11835);
            var G__11837 = G__11830__11835;
            val__11832 = G__11836;
            G__11830__11833 = G__11837;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_class__delegate.call(this, values)
  };
  en_remove_class.cljs$lang$maxFixedArity = 0;
  en_remove_class.cljs$lang$applyTo = function(arglist__11838) {
    var values = cljs.core.seq(arglist__11838);
    return en_remove_class__delegate(values)
  };
  en_remove_class.cljs$lang$arity$variadic = en_remove_class__delegate;
  return en_remove_class
}();
enfocus.core.en_set_class = function() {
  var en_set_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11823_SHARP_) {
      return domina.set_classes_BANG_.call(null, p1__11823_SHARP_, values)
    })
  };
  var en_set_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_class__delegate.call(this, values)
  };
  en_set_class.cljs$lang$maxFixedArity = 0;
  en_set_class.cljs$lang$applyTo = function(arglist__11839) {
    var values = cljs.core.seq(arglist__11839);
    return en_set_class__delegate(values)
  };
  en_set_class.cljs$lang$arity$variadic = en_set_class__delegate;
  return en_set_class
}();
enfocus.core.en_do__GT_ = function() {
  var en_do__GT___delegate = function(forms) {
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      var G__11848__11849 = cljs.core.seq.call(null, forms);
      if(G__11848__11849) {
        var fun__11850 = cljs.core.first.call(null, G__11848__11849);
        var G__11848__11851 = G__11848__11849;
        while(true) {
          fun__11850.call(null, pnod);
          var temp__3974__auto____11852 = cljs.core.next.call(null, G__11848__11851);
          if(temp__3974__auto____11852) {
            var G__11848__11853 = temp__3974__auto____11852;
            var G__11854 = cljs.core.first.call(null, G__11848__11853);
            var G__11855 = G__11848__11853;
            fun__11850 = G__11854;
            G__11848__11851 = G__11855;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_do__GT_ = function(var_args) {
    var forms = null;
    if(goog.isDef(var_args)) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_do__GT___delegate.call(this, forms)
  };
  en_do__GT_.cljs$lang$maxFixedArity = 0;
  en_do__GT_.cljs$lang$applyTo = function(arglist__11856) {
    var forms = cljs.core.seq(arglist__11856);
    return en_do__GT___delegate(forms)
  };
  en_do__GT_.cljs$lang$arity$variadic = en_do__GT___delegate;
  return en_do__GT_
}();
enfocus.core.en_append = function() {
  var en_append__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11840_SHARP_, p2__11841_SHARP_) {
      return domina.append_BANG_.call(null, p1__11840_SHARP_, p2__11841_SHARP_)
    })
  };
  var en_append = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_append__delegate.call(this, values)
  };
  en_append.cljs$lang$maxFixedArity = 0;
  en_append.cljs$lang$applyTo = function(arglist__11859) {
    var values = cljs.core.seq(arglist__11859);
    return en_append__delegate(values)
  };
  en_append.cljs$lang$arity$variadic = en_append__delegate;
  return en_append
}();
enfocus.core.en_prepend = function() {
  var en_prepend__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11857_SHARP_, p2__11858_SHARP_) {
      return domina.prepend_BANG_.call(null, p1__11857_SHARP_, p2__11858_SHARP_)
    })
  };
  var en_prepend = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_prepend__delegate.call(this, values)
  };
  en_prepend.cljs$lang$maxFixedArity = 0;
  en_prepend.cljs$lang$applyTo = function(arglist__11862) {
    var values = cljs.core.seq(arglist__11862);
    return en_prepend__delegate(values)
  };
  en_prepend.cljs$lang$arity$variadic = en_prepend__delegate;
  return en_prepend
}();
enfocus.core.en_before = function() {
  var en_before__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11860_SHARP_, p2__11861_SHARP_) {
      return domina.insert_before_BANG_.call(null, p1__11860_SHARP_, p2__11861_SHARP_)
    })
  };
  var en_before = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_before__delegate.call(this, values)
  };
  en_before.cljs$lang$maxFixedArity = 0;
  en_before.cljs$lang$applyTo = function(arglist__11865) {
    var values = cljs.core.seq(arglist__11865);
    return en_before__delegate(values)
  };
  en_before.cljs$lang$arity$variadic = en_before__delegate;
  return en_before
}();
enfocus.core.en_after = function() {
  var en_after__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11863_SHARP_, p2__11864_SHARP_) {
      return domina.insert_after_BANG_.call(null, p1__11863_SHARP_, p2__11864_SHARP_)
    })
  };
  var en_after = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_after__delegate.call(this, values)
  };
  en_after.cljs$lang$maxFixedArity = 0;
  en_after.cljs$lang$applyTo = function(arglist__11868) {
    var values = cljs.core.seq(arglist__11868);
    return en_after__delegate(values)
  };
  en_after.cljs$lang$arity$variadic = en_after__delegate;
  return en_after
}();
enfocus.core.en_substitute = function() {
  var en_substitute__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11866_SHARP_, p2__11867_SHARP_) {
      return domina.swap_content_BANG_.call(null, p1__11866_SHARP_, p2__11867_SHARP_)
    })
  };
  var en_substitute = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_substitute__delegate.call(this, values)
  };
  en_substitute.cljs$lang$maxFixedArity = 0;
  en_substitute.cljs$lang$applyTo = function(arglist__11870) {
    var values = cljs.core.seq(arglist__11870);
    return en_substitute__delegate(values)
  };
  en_substitute.cljs$lang$arity$variadic = en_substitute__delegate;
  return en_substitute
}();
enfocus.core.en_remove_node = function en_remove_node() {
  return enfocus.core.domina_chain.call(null, function(p1__11869_SHARP_) {
    return domina.detach_BANG_.call(null, p1__11869_SHARP_)
  })
};
enfocus.core.en_wrap = function en_wrap(elm, mattr) {
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    var elem__11872 = goog.dom.createElement(cljs.core.name.call(null, elm));
    enfocus.core.add_map_attrs.call(null, elem__11872, mattr);
    enfocus.core.at.call(null, elem__11872, enfocus.core.en_content.call(null, pnod.cloneNode(true)));
    return enfocus.core.at.call(null, pnod, enfocus.core.en_do__GT_.call(null, enfocus.core.en_after.call(null, elem__11872), enfocus.core.en_remove_node.call(null)))
  })
};
enfocus.core.en_unwrap = function en_unwrap() {
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    var frag__11875 = document.createDocumentFragment();
    goog.dom.append(frag__11875, pnod.childNodes);
    return goog.dom.replaceNode(frag__11875, pnod)
  })
};
enfocus.core.en_set_style = function() {
  var en_set_style__delegate = function(values) {
    var pairs__11896 = cljs.core.partition.call(null, 2, values);
    return enfocus.core.domina_chain.call(null, function(p1__11873_SHARP_) {
      var G__11897__11898 = cljs.core.seq.call(null, pairs__11896);
      if(G__11897__11898) {
        var G__11900__11902 = cljs.core.first.call(null, G__11897__11898);
        var vec__11901__11903 = G__11900__11902;
        var name__11904 = cljs.core.nth.call(null, vec__11901__11903, 0, null);
        var value__11905 = cljs.core.nth.call(null, vec__11901__11903, 1, null);
        var G__11897__11906 = G__11897__11898;
        var G__11900__11907 = G__11900__11902;
        var G__11897__11908 = G__11897__11906;
        while(true) {
          var vec__11909__11910 = G__11900__11907;
          var name__11911 = cljs.core.nth.call(null, vec__11909__11910, 0, null);
          var value__11912 = cljs.core.nth.call(null, vec__11909__11910, 1, null);
          var G__11897__11913 = G__11897__11908;
          domina.set_style_BANG_.call(null, p1__11873_SHARP_, name__11911, value__11912);
          var temp__3974__auto____11914 = cljs.core.next.call(null, G__11897__11913);
          if(temp__3974__auto____11914) {
            var G__11897__11915 = temp__3974__auto____11914;
            var G__11916 = cljs.core.first.call(null, G__11897__11915);
            var G__11917 = G__11897__11915;
            G__11900__11907 = G__11916;
            G__11897__11908 = G__11917;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_set_style = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_style__delegate.call(this, values)
  };
  en_set_style.cljs$lang$maxFixedArity = 0;
  en_set_style.cljs$lang$applyTo = function(arglist__11918) {
    var values = cljs.core.seq(arglist__11918);
    return en_set_style__delegate(values)
  };
  en_set_style.cljs$lang$arity$variadic = en_set_style__delegate;
  return en_set_style
}();
enfocus.core.en_remove_style = function() {
  var en_remove_style__delegate = function(values) {
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      return enfocus.core.style_remove.call(null, pnod, values)
    })
  };
  var en_remove_style = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_style__delegate.call(this, values)
  };
  en_remove_style.cljs$lang$maxFixedArity = 0;
  en_remove_style.cljs$lang$applyTo = function(arglist__11919) {
    var values = cljs.core.seq(arglist__11919);
    return en_remove_style__delegate(values)
  };
  en_remove_style.cljs$lang$arity$variadic = en_remove_style__delegate;
  return en_remove_style
}();
enfocus.core.en_focus = function en_focus() {
  return enfocus.core.chainable_standard.call(null, function(node) {
    return node.focus()
  })
};
enfocus.core.en_blur = function en_blur() {
  return enfocus.core.chainable_standard.call(null, function(node) {
    return node.blur()
  })
};
enfocus.core.en_set_data = function en_set_data(ky, val) {
  return enfocus.core.domina_chain.call(null, function(p1__11920_SHARP_) {
    return domina.set_data_BANG_.call(null, p1__11920_SHARP_, ky, val)
  })
};
enfocus.core.view_port_monitor = cljs.core.atom.call(null, null);
enfocus.core.get_vp_monitor = function get_vp_monitor() {
  if(cljs.core.truth_(cljs.core.deref.call(null, enfocus.core.view_port_monitor))) {
    return cljs.core.deref.call(null, enfocus.core.view_port_monitor)
  }else {
    cljs.core.swap_BANG_.call(null, enfocus.core.view_port_monitor, function() {
      return new goog.dom.ViewportSizeMonitor
    });
    return cljs.core.deref.call(null, enfocus.core.view_port_monitor)
  }
};
enfocus.core.gen_enter_leave_wrapper = function gen_enter_leave_wrapper(event) {
  var obj__11934 = new Object;
  obj__11934.listen = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var callback__11935 = enfocus.core.mouse_enter_leave.call(null, func);
    callback__11935.listen = func;
    callback__11935.scope = opt_scope;
    if(cljs.core.truth_(opt_handler)) {
      return opt_handler.listen(elm, cljs.core.name.call(null, event), callback__11935)
    }else {
      return goog.events.listen(elm, cljs.core.name.call(null, event), callback__11935)
    }
  };
  obj__11934.unlisten = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var listeners__11936 = goog.events.getListeners(elm, cljs.core.name.call(null, event), false);
    var G__11937__11938 = cljs.core.seq.call(null, listeners__11936);
    if(G__11937__11938) {
      var obj__11939 = cljs.core.first.call(null, G__11937__11938);
      var G__11937__11940 = G__11937__11938;
      while(true) {
        var listener__11941 = obj__11939.listener;
        if(cljs.core.truth_(function() {
          var and__3822__auto____11943 = function() {
            var or__3824__auto____11942 = cljs.core.not.call(null, func);
            if(or__3824__auto____11942) {
              return or__3824__auto____11942
            }else {
              return cljs.core._EQ_.call(null, listener__11941.listen, func)
            }
          }();
          if(cljs.core.truth_(and__3822__auto____11943)) {
            var or__3824__auto____11944 = cljs.core.not.call(null, opt_scope);
            if(or__3824__auto____11944) {
              return or__3824__auto____11944
            }else {
              return cljs.core._EQ_.call(null, listener__11941.scope, opt_scope)
            }
          }else {
            return and__3822__auto____11943
          }
        }())) {
          if(cljs.core.truth_(opt_handler)) {
            opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener__11941)
          }else {
            goog.events.unlisten(elm, cljs.core.name.call(null, event), listener__11941)
          }
        }else {
        }
        var temp__3974__auto____11945 = cljs.core.next.call(null, G__11937__11940);
        if(temp__3974__auto____11945) {
          var G__11937__11946 = temp__3974__auto____11945;
          var G__11947 = cljs.core.first.call(null, G__11937__11946);
          var G__11948 = G__11937__11946;
          obj__11939 = G__11947;
          G__11937__11940 = G__11948;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return listeners__11936
  };
  return obj__11934
};
enfocus.core.wrapper_register = cljs.core.ObjMap.fromObject(["\ufdd0'mouseenter", "\ufdd0'mouseleave"], {"\ufdd0'mouseenter":enfocus.core.gen_enter_leave_wrapper.call(null, "\ufdd0'mouseover"), "\ufdd0'mouseleave":enfocus.core.gen_enter_leave_wrapper.call(null, "\ufdd0'mouseout")});
enfocus.core.en_listen = function en_listen(event, func) {
  var wrapper__11952 = enfocus.core.wrapper_register.call(null, event);
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    if(function() {
      var and__3822__auto____11953 = cljs.core._EQ_.call(null, "\ufdd0'resize", event);
      if(and__3822__auto____11953) {
        return window === pnod
      }else {
        return and__3822__auto____11953
      }
    }()) {
      return goog.events.listen(enfocus.core.get_vp_monitor.call(null), "resize", func)
    }else {
      if(wrapper__11952 == null) {
        return goog.events.listen(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.listenWithWrapper(pnod, wrapper__11952, func)
      }
    }
  })
};
enfocus.core.en_remove_listeners = function() {
  var en_remove_listeners__delegate = function(event_list) {
    var get_name__11961 = function(p1__11949_SHARP_) {
      return cljs.core.name.call(null, cljs.core._EQ_.call(null, p1__11949_SHARP_, "\ufdd0'mouseenter") ? "\ufdd0'mouseover" : cljs.core._EQ_.call(null, p1__11949_SHARP_, "\ufdd0'mouseleave") ? "\ufdd0'mouseout" : "\ufdd0'else" ? p1__11949_SHARP_ : null)
    };
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      var G__11962__11963 = cljs.core.seq.call(null, event_list);
      if(G__11962__11963) {
        var ev__11964 = cljs.core.first.call(null, G__11962__11963);
        var G__11962__11965 = G__11962__11963;
        while(true) {
          goog.events.removeAll(pnod, get_name__11961.call(null, ev__11964));
          var temp__3974__auto____11966 = cljs.core.next.call(null, G__11962__11965);
          if(temp__3974__auto____11966) {
            var G__11962__11967 = temp__3974__auto____11966;
            var G__11968 = cljs.core.first.call(null, G__11962__11967);
            var G__11969 = G__11962__11967;
            ev__11964 = G__11968;
            G__11962__11965 = G__11969;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_listeners = function(var_args) {
    var event_list = null;
    if(goog.isDef(var_args)) {
      event_list = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_listeners__delegate.call(this, event_list)
  };
  en_remove_listeners.cljs$lang$maxFixedArity = 0;
  en_remove_listeners.cljs$lang$applyTo = function(arglist__11970) {
    var event_list = cljs.core.seq(arglist__11970);
    return en_remove_listeners__delegate(event_list)
  };
  en_remove_listeners.cljs$lang$arity$variadic = en_remove_listeners__delegate;
  return en_remove_listeners
}();
enfocus.core.en_unlisten = function() {
  var en_unlisten = null;
  var en_unlisten__1 = function(event) {
    return enfocus.core.en_remove_listeners.call(null, event)
  };
  var en_unlisten__2 = function(event, func) {
    var wrapper__11972 = enfocus.core.wrapper_register.call(null, event);
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      if(wrapper__11972 == null) {
        return goog.events.unlisten(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.unlistenWithWrapper(pnod, wrapper__11972, func)
      }
    })
  };
  en_unlisten = function(event, func) {
    switch(arguments.length) {
      case 1:
        return en_unlisten__1.call(this, event);
      case 2:
        return en_unlisten__2.call(this, event, func)
    }
    throw"Invalid arity: " + arguments.length;
  };
  en_unlisten.cljs$lang$arity$1 = en_unlisten__1;
  en_unlisten.cljs$lang$arity$2 = en_unlisten__2;
  return en_unlisten
}();
enfocus.core.en_fade_out = function en_fade_out(ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var anim__11974 = new goog.fx.dom.FadeOut(pnod, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__11974, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__11974.play()
  }, callback)
};
enfocus.core.en_fade_in = function en_fade_in(ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var anim__11976 = new goog.fx.dom.FadeIn(pnod, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__11976, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__11976.play()
  }, callback)
};
enfocus.core.en_resize = function en_resize(wth, hgt, ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var csize__11983 = goog.style.getContentBoxSize(pnod);
    var start__11984 = [csize__11983.width, csize__11983.height];
    var wth__11985 = cljs.core._EQ_.call(null, "\ufdd0'curwidth", wth) ? csize__11983.width : wth;
    var hgt__11986 = cljs.core._EQ_.call(null, "\ufdd0'curheight", hgt) ? csize__11983.height : hgt;
    var end__11987 = [wth__11985, hgt__11986];
    var anim__11988 = new goog.fx.dom.Resize(pnod, start__11984, end__11987, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__11988, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__11988.play()
  }, callback)
};
enfocus.core.en_move = function en_move(xpos, ypos, ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var cpos__11995 = goog.style.getPosition(pnod);
    var start__11996 = [cpos__11995.x, cpos__11995.y];
    var xpos__11997 = cljs.core._EQ_.call(null, "\ufdd0'curx", xpos) ? cpos__11995.x : xpos;
    var ypos__11998 = cljs.core._EQ_.call(null, "\ufdd0'cury", ypos) ? cpos__11995.y : ypos;
    var end__11999 = [xpos__11997, ypos__11998];
    var anim__12000 = new goog.fx.dom.Slide(pnod, start__11996, end__11999, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12000, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12000.play()
  }, callback)
};
enfocus.core.en_get_attr = function en_get_attr(attr) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod.getAttribute(cljs.core.name.call(null, attr))
  })
};
enfocus.core.en_get_text = function en_get_text() {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return goog.dom.getTextContent(pnod)
  })
};
enfocus.core.en_get_data = function() {
  var en_get_data = null;
  var en_get_data__1 = function(ky) {
    return en_get_data.call(null, ky, false)
  };
  var en_get_data__2 = function(ky, bubble) {
    return enfocus.core.extr_multi_node.call(null, function(node) {
      return domina.get_data.call(null, ky, bubble)
    })
  };
  en_get_data = function(ky, bubble) {
    switch(arguments.length) {
      case 1:
        return en_get_data__1.call(this, ky);
      case 2:
        return en_get_data__2.call(this, ky, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  en_get_data.cljs$lang$arity$1 = en_get_data__1;
  en_get_data.cljs$lang$arity$2 = en_get_data__2;
  return en_get_data
}();
enfocus.core.reg_filt = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
enfocus.core.en_filter = function en_filter(tst, trans) {
  return function() {
    var filt = null;
    var filt__1 = function(pnodes) {
      return filt.call(null, pnodes, null)
    };
    var filt__2 = function(pnodes, chain) {
      var pnod_col__12010 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var ttest__12011 = cljs.core.keyword_QMARK_.call(null, tst) ? cljs.core.deref.call(null, enfocus.core.reg_filt).call(null, tst) : tst;
      var res__12012 = cljs.core.filter.call(null, ttest__12011, pnod_col__12010);
      if(chain == null) {
        return trans.call(null, res__12012)
      }else {
        return trans.call(null, res__12012, chain)
      }
    };
    filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return filt__1.call(this, pnodes);
        case 2:
          return filt__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    filt.cljs$lang$arity$1 = filt__1;
    filt.cljs$lang$arity$2 = filt__2;
    return filt
  }()
};
enfocus.core.register_filter = function register_filter(ky, func) {
  return cljs.core.swap_BANG_.call(null, enfocus.core.reg_filt, cljs.core.assoc, ky, func)
};
enfocus.core.selected_options = function selected_options(pnod) {
  return pnod.selected
};
enfocus.core.checked_radio_checkbox = function checked_radio_checkbox(pnod) {
  return pnod.checked
};
enfocus.core.register_filter.call(null, "\ufdd0'selected", enfocus.core.selected_options);
enfocus.core.register_filter.call(null, "\ufdd0'checked", enfocus.core.checked_radio_checkbox);
enfocus.core.create_sel_str = function() {
  var create_sel_str = null;
  var create_sel_str__1 = function(css_sel) {
    return create_sel_str.call(null, "", css_sel)
  };
  var create_sel_str__2 = function(id_mask_sym, css_sel) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12013_SHARP_) {
      if(cljs.core.symbol_QMARK_.call(null, p1__12013_SHARP_)) {
        return enfocus.core.css_syms.call(null, p1__12013_SHARP_)
      }else {
        if(cljs.core.keyword_QMARK_.call(null, p1__12013_SHARP_)) {
          return[cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, p1__12013_SHARP_).replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join("")))].join("")
        }else {
          if(cljs.core.vector_QMARK_.call(null, p1__12013_SHARP_)) {
            return create_sel_str.call(null, p1__12013_SHARP_)
          }else {
            if(cljs.core.string_QMARK_.call(null, p1__12013_SHARP_)) {
              return p1__12013_SHARP_.replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join(""))
            }else {
              return null
            }
          }
        }
      }
    }, css_sel))
  };
  create_sel_str = function(id_mask_sym, css_sel) {
    switch(arguments.length) {
      case 1:
        return create_sel_str__1.call(this, id_mask_sym);
      case 2:
        return create_sel_str__2.call(this, id_mask_sym, css_sel)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_sel_str.cljs$lang$arity$1 = create_sel_str__1;
  create_sel_str.cljs$lang$arity$2 = create_sel_str__2;
  return create_sel_str
}();
enfocus.core.css_select = function() {
  var css_select = null;
  var css_select__1 = function(css_sel) {
    return css_select.call(null, "", document, css_sel)
  };
  var css_select__2 = function(dom_node, css_sel) {
    return css_select.call(null, "", dom_node, css_sel)
  };
  var css_select__3 = function(id_mask_sym, dom_node, css_sel) {
    enfocus.core.log_debug.call(null, dom_node);
    enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, css_sel));
    var sel__12016 = clojure.string.trim.call(null, enfocus.enlive.syntax.convert.call(null, enfocus.core.create_sel_str.call(null, id_mask_sym, css_sel)));
    var ret__12017 = domina.css.sel.call(null, dom_node, sel__12016);
    return ret__12017
  };
  css_select = function(id_mask_sym, dom_node, css_sel) {
    switch(arguments.length) {
      case 1:
        return css_select__1.call(this, id_mask_sym);
      case 2:
        return css_select__2.call(this, id_mask_sym, dom_node);
      case 3:
        return css_select__3.call(this, id_mask_sym, dom_node, css_sel)
    }
    throw"Invalid arity: " + arguments.length;
  };
  css_select.cljs$lang$arity$1 = css_select__1;
  css_select.cljs$lang$arity$2 = css_select__2;
  css_select.cljs$lang$arity$3 = css_select__3;
  return css_select
}();
enfocus.core.nil_t = function nil_t(func) {
  var or__3824__auto____12019 = func;
  if(cljs.core.truth_(or__3824__auto____12019)) {
    return or__3824__auto____12019
  }else {
    return enfocus.core.en_remove_node
  }
};
enfocus.core.i_at = function() {
  var i_at__delegate = function(id_mask, node, trans) {
    if(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, trans))) {
      return cljs.core.first.call(null, trans).call(null, node)
    }else {
      var G__12039__12040 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, trans));
      if(G__12039__12040) {
        var G__12042__12044 = cljs.core.first.call(null, G__12039__12040);
        var vec__12043__12045 = G__12042__12044;
        var sel__12046 = cljs.core.nth.call(null, vec__12043__12045, 0, null);
        var t__12047 = cljs.core.nth.call(null, vec__12043__12045, 1, null);
        var G__12039__12048 = G__12039__12040;
        var G__12042__12049 = G__12042__12044;
        var G__12039__12050 = G__12039__12048;
        while(true) {
          var vec__12051__12052 = G__12042__12049;
          var sel__12053 = cljs.core.nth.call(null, vec__12051__12052, 0, null);
          var t__12054 = cljs.core.nth.call(null, vec__12051__12052, 1, null);
          var G__12039__12055 = G__12039__12050;
          enfocus.core.nil_t.call(null, t__12054).call(null, enfocus.core.css_select.call(null, id_mask, node, sel__12053));
          var temp__3974__auto____12056 = cljs.core.next.call(null, G__12039__12055);
          if(temp__3974__auto____12056) {
            var G__12039__12057 = temp__3974__auto____12056;
            var G__12058 = cljs.core.first.call(null, G__12039__12057);
            var G__12059 = G__12039__12057;
            G__12042__12049 = G__12058;
            G__12039__12050 = G__12059;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }
  };
  var i_at = function(id_mask, node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return i_at__delegate.call(this, id_mask, node, trans)
  };
  i_at.cljs$lang$maxFixedArity = 2;
  i_at.cljs$lang$applyTo = function(arglist__12060) {
    var id_mask = cljs.core.first(arglist__12060);
    var node = cljs.core.first(cljs.core.next(arglist__12060));
    var trans = cljs.core.rest(cljs.core.next(arglist__12060));
    return i_at__delegate(id_mask, node, trans)
  };
  i_at.cljs$lang$arity$variadic = i_at__delegate;
  return i_at
}();
enfocus.core.at = function() {
  var at__delegate = function(node, trans) {
    return cljs.core.apply.call(null, enfocus.core.i_at, "", node, trans)
  };
  var at = function(node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return at__delegate.call(this, node, trans)
  };
  at.cljs$lang$maxFixedArity = 1;
  at.cljs$lang$applyTo = function(arglist__12061) {
    var node = cljs.core.first(arglist__12061);
    var trans = cljs.core.rest(arglist__12061);
    return at__delegate(node, trans)
  };
  at.cljs$lang$arity$variadic = at__delegate;
  return at
}();
enfocus.core.from = function() {
  var from__delegate = function(node, trans) {
    if(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, trans))) {
      return cljs.core.first.call(null, trans).call(null, node)
    }else {
      return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p__12068) {
        var vec__12069__12070 = p__12068;
        var ky__12071 = cljs.core.nth.call(null, vec__12069__12070, 0, null);
        var sel__12072 = cljs.core.nth.call(null, vec__12069__12070, 1, null);
        var ext__12073 = cljs.core.nth.call(null, vec__12069__12070, 2, null);
        return cljs.core.PersistentVector.fromArray([ky__12071, ext__12073.call(null, enfocus.core.css_select.call(null, "", node, sel__12072))], true)
      }, cljs.core.partition.call(null, 3, trans)))
    }
  };
  var from = function(node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return from__delegate.call(this, node, trans)
  };
  from.cljs$lang$maxFixedArity = 1;
  from.cljs$lang$applyTo = function(arglist__12074) {
    var node = cljs.core.first(arglist__12074);
    var trans = cljs.core.rest(arglist__12074);
    return from__delegate(node, trans)
  };
  from.cljs$lang$arity$variadic = from__delegate;
  return from
}();
Text.prototype.domina$DomContent$ = true;
Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
  return cljs.core.PersistentVector.fromArray([content], true)
};
Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
  return content
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____12722 = this$;
    if(and__3822__auto____12722) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____12722
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2363__auto____12723 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12724 = clojure.browser.event.event_types[goog.typeOf(x__2363__auto____12723)];
      if(or__3824__auto____12724) {
        return or__3824__auto____12724
      }else {
        var or__3824__auto____12725 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____12725) {
          return or__3824__auto____12725
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12726) {
    var vec__12727__12728 = p__12726;
    var k__12729 = cljs.core.nth.call(null, vec__12727__12728, 0, null);
    var v__12730 = cljs.core.nth.call(null, vec__12727__12728, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12729.toLowerCase()), v__12730], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12731) {
    var vec__12732__12733 = p__12731;
    var k__12734 = cljs.core.nth.call(null, vec__12732__12733, 0, null);
    var v__12735 = cljs.core.nth.call(null, vec__12732__12733, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12734.toLowerCase()), v__12735], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  payload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(payload)) {
    service.callback(payload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.provide("goog.net.xpc.CrossPageChannel.Role");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI] && this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
            transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
          }
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect()
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(this.peerWindowObject_.closed) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.Role = {OUTER:0, INNER:1};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannel.Role.INNER : goog.net.xpc.CrossPageChannel.Role.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name]
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12585) {
  var vec__12586__12587 = p__12585;
  var k__12588 = cljs.core.nth.call(null, vec__12586__12587, 0, null);
  var v__12589 = cljs.core.nth.call(null, vec__12586__12587, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12588.toLowerCase()), v__12589], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____12606 = this$;
      if(and__3822__auto____12606) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____12606
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2363__auto____12607 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12608 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____12607)];
        if(or__3824__auto____12608) {
          return or__3824__auto____12608
        }else {
          var or__3824__auto____12609 = clojure.browser.net.connect["_"];
          if(or__3824__auto____12609) {
            return or__3824__auto____12609
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____12610 = this$;
      if(and__3822__auto____12610) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____12610
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2363__auto____12611 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12612 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____12611)];
        if(or__3824__auto____12612) {
          return or__3824__auto____12612
        }else {
          var or__3824__auto____12613 = clojure.browser.net.connect["_"];
          if(or__3824__auto____12613) {
            return or__3824__auto____12613
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____12614 = this$;
      if(and__3822__auto____12614) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____12614
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2363__auto____12615 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12616 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____12615)];
        if(or__3824__auto____12616) {
          return or__3824__auto____12616
        }else {
          var or__3824__auto____12617 = clojure.browser.net.connect["_"];
          if(or__3824__auto____12617) {
            return or__3824__auto____12617
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____12618 = this$;
      if(and__3822__auto____12618) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____12618
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2363__auto____12619 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12620 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____12619)];
        if(or__3824__auto____12620) {
          return or__3824__auto____12620
        }else {
          var or__3824__auto____12621 = clojure.browser.net.connect["_"];
          if(or__3824__auto____12621) {
            return or__3824__auto____12621
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____12642 = this$;
      if(and__3822__auto____12642) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____12642
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2363__auto____12643 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12644 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____12643)];
        if(or__3824__auto____12644) {
          return or__3824__auto____12644
        }else {
          var or__3824__auto____12645 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12645) {
            return or__3824__auto____12645
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____12646 = this$;
      if(and__3822__auto____12646) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____12646
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2363__auto____12647 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12648 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____12647)];
        if(or__3824__auto____12648) {
          return or__3824__auto____12648
        }else {
          var or__3824__auto____12649 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12649) {
            return or__3824__auto____12649
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____12650 = this$;
      if(and__3822__auto____12650) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____12650
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2363__auto____12651 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12652 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____12651)];
        if(or__3824__auto____12652) {
          return or__3824__auto____12652
        }else {
          var or__3824__auto____12653 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12653) {
            return or__3824__auto____12653
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____12654 = this$;
      if(and__3822__auto____12654) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____12654
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2363__auto____12655 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12656 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____12655)];
        if(or__3824__auto____12656) {
          return or__3824__auto____12656
        }else {
          var or__3824__auto____12657 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12657) {
            return or__3824__auto____12657
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____12658 = this$;
      if(and__3822__auto____12658) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____12658
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2363__auto____12659 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12660 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____12659)];
        if(or__3824__auto____12660) {
          return or__3824__auto____12660
        }else {
          var or__3824__auto____12661 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____12661) {
            return or__3824__auto____12661
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____12666 = this$;
    if(and__3822__auto____12666) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____12666
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2363__auto____12667 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12668 = clojure.browser.net.close[goog.typeOf(x__2363__auto____12667)];
      if(or__3824__auto____12668) {
        return or__3824__auto____12668
      }else {
        var or__3824__auto____12669 = clojure.browser.net.close["_"];
        if(or__3824__auto____12669) {
          return or__3824__auto____12669
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12670) {
    var vec__12671__12672 = p__12670;
    var k__12673 = cljs.core.nth.call(null, vec__12671__12672, 0, null);
    var v__12674 = cljs.core.nth.call(null, vec__12671__12672, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12673.toLowerCase()), v__12674], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12675) {
  var vec__12676__12677 = p__12675;
  var k__12678 = cljs.core.nth.call(null, vec__12676__12677, 0, null);
  var v__12679 = cljs.core.nth.call(null, vec__12676__12677, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12678.toLowerCase()), v__12679], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____12688 = this$;
      if(and__3822__auto____12688) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____12688
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2363__auto____12689 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12690 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____12689)];
        if(or__3824__auto____12690) {
          return or__3824__auto____12690
        }else {
          var or__3824__auto____12691 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____12691) {
            return or__3824__auto____12691
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____12692 = this$;
      if(and__3822__auto____12692) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____12692
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2363__auto____12693 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____12694 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____12693)];
        if(or__3824__auto____12694) {
          return or__3824__auto____12694
        }else {
          var or__3824__auto____12695 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____12695) {
            return or__3824__auto____12695
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____12707 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____12707)) {
      var config__12708 = temp__3974__auto____12707;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__12708))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__12709) {
      var vec__12710__12711 = p__12709;
      var k__12712 = cljs.core.nth.call(null, vec__12710__12711, 0, null);
      var v__12713 = cljs.core.nth.call(null, vec__12710__12711, 1, null);
      var temp__3971__auto____12714 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__12712, null);
      if(cljs.core.truth_(temp__3971__auto____12714)) {
        var field__12715 = temp__3971__auto____12714;
        var G__12716__12717 = sum;
        G__12716__12717[field__12715] = v__12713;
        return G__12716__12717
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____12567 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____12567)) {
    var conn__12568 = temp__3971__auto____12567;
    return clojure.browser.net.transmit.call(null, conn__12568, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__12574 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e12572) {
      if(cljs.core.instance_QMARK_.call(null, Error, e12572)) {
        var e__12573 = e12572;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__12573), "\ufdd0'stacktrace":cljs.core.truth_(e__12573.hasOwnProperty("stack")) ? e__12573.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e12572;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__12574)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__12576 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__12576, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__12576, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____12580 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____12580)) {
    var repl_connection__12581 = temp__3971__auto____12580;
    var connection__12582 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__12582, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__12581, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__12581, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__12582, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__12581, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__12581, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__12582, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__12584 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__12584));
  clojure.browser.net.register_service.call(null, repl_connection__12584, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__12584, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__12584, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__12584, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("cloudfront.main");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.repl");
cloudfront.main.make_js_map = function make_js_map(cljmap) {
  var out__246872 = {};
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__245714_SHARP_) {
    return out__246872[cljs.core.name.call(null, cljs.core.first.call(null, p1__245714_SHARP_))] = cljs.core.second.call(null, p1__245714_SHARP_)
  }, cljmap));
  return out__246872
};
cloudfront.main.make_json = function make_json(obj) {
  return window.JSON.stringify(obj)
};
cloudfront.main.post = function post(url, content, callback) {
  return goog.net.XhrIo.send(url, callback, "POST", cloudfront.main.make_json.call(null, cloudfront.main.make_js_map.call(null, content)), cloudfront.main.make_js_map.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'Content-Type"], {"\ufdd0'Content-Type":"application/json"})))
};
cloudfront.main.get_error_string = function get_error_string(error_code) {
  return goog.net.ErrorCode.getDebugMessage(error_code)
};
cloudfront.main.log = function log(msg) {
  return console.log(msg)
};
cloudfront.main.group_creation_message = function group_creation_message(group_name, hosts) {
  return cljs.core.reduce.call(null, function(acc, host) {
    return cljs.core.format.call(null, "%s\nhost: %s\tip: %s", acc, host.hostname, host["primary-ip"])
  }, cljs.core.format.call(null, "Created group: %s\n", group_name), hosts)
};
cloudfront.main.set_status = function set_status(msg) {
  return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["span.status"], true), function(pnod__6791__auto__) {
    return enfocus.core.en_content.call(null, msg).call(null, pnod__6791__auto__, function(pnod__6790__auto__) {
      return enfocus.core.en_set_attr.call(null, "\ufdd0'style", "").call(null, pnod__6790__auto__)
    })
  })
};
cloudfront.main.hide_status = function hide_status() {
  return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["span.status"], true), enfocus.core.en_set_attr.call(null, "\ufdd0'style", "display: none;"))
};
cloudfront.main.create_group = function create_group(group_name) {
  cloudfront.main.set_status.call(null, cljs.core.format.call(null, "Creating %s...", group_name));
  return cloudfront.main.post.call(null, "/api/create-group", cljs.core.ObjMap.fromObject(["\ufdd0'group-name"], {"\ufdd0'group-name":group_name}), function(e) {
    cloudfront.main.hide_status.call(null);
    var xhr__246874 = e.target;
    if(cljs.core.truth_(xhr__246874.isSuccess())) {
      return alert(cloudfront.main.group_creation_message.call(null, group_name, xhr__246874.getResponseJson()))
    }else {
      return alert([cljs.core.str("Error: "), cljs.core.str(xhr__246874.getLastError())].join(""))
    }
  })
};
cloudfront.main.destroy_group = function destroy_group(group_name) {
  cloudfront.main.set_status.call(null, cljs.core.format.call(null, "Destroying %s...", group_name));
  return cloudfront.main.post.call(null, "/api/destroy-group", cljs.core.ObjMap.fromObject(["\ufdd0'group-name"], {"\ufdd0'group-name":group_name}), function(e) {
    cloudfront.main.hide_status.call(null);
    var xhr__246878 = e.target;
    if(cljs.core.truth_(xhr__246878.isSuccess())) {
      return alert(cljs.core.format.call(null, "%s destroyed", group_name))
    }else {
      return alert([cljs.core.str("Error: "), cljs.core.str(xhr__246878.getLastError())].join(""))
    }
  })
};
cloudfront.main.start = function start(debug_QMARK_) {
  enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["li.server-group button.create"], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function(p1__246875_SHARP_) {
    return cloudfront.main.create_group.call(null, p1__246875_SHARP_.target.id)
  }), cljs.core.PersistentVector.fromArray(["li.server-group button.destroy"], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function(p1__246876_SHARP_) {
    return cloudfront.main.destroy_group.call(null, p1__246876_SHARP_.target.id)
  }));
  if(cljs.core.truth_(debug_QMARK_)) {
    return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
  }else {
    return null
  }
};
goog.exportSymbol("cloudfront.main.start", cloudfront.main.start);
window.onload = function() {
  return cloudfront.main.start.call(null, true)
};
